Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ELSE
    HASHROCKET
    HAS_VALUE
    IF
    MERGE
    OR
    SIZE
    WHILE

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     STATEMENT -> ASIGNATION
Rule 3     STATEMENT -> STRUCTURE_FOR
Rule 4     ASIGNATION -> ID ASIGN EXPRESSION
Rule 5     EXPRESSION -> NUMBER
Rule 6     EXPRESSION -> FLOAT
Rule 7     EXPRESSION -> BOOLEAN
Rule 8     EXPRESSION -> STRING
Rule 9     EXPRESSION -> OTHERSTRINGDECLARATION
Rule 10    EXPRESSION -> ARRAY
Rule 11    EXPRESSION -> FUNTIONS_ARRAY
Rule 12    EXPRESSION -> LOGIC_NOT EXPRESSION
Rule 13    EXPRESSION -> EXPRESSION_MAT
Rule 14    EXPRESSION -> EXPRESSION_CONCAT
Rule 15    EXPRESSION -> PUTS EXPRESSION
Rule 16    EXPRESSION -> PUTS ID
Rule 17    EXPRESSION -> GETS EXPRESSION
Rule 18    EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
Rule 19    EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
Rule 20    OPERATOR_COMP_BOOLEAN -> EQUAL
Rule 21    OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT
Rule 22    OPERATOR_COMP_BOOLEAN -> LOGIC_AND
Rule 23    OPERATOR_COMP_BOOLEAN -> LOGIC_OR
Rule 24    OPERATOR_COMP_BOOLEAN -> PIPE
Rule 25    EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF
Rule 26    EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
Rule 27    EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN
Rule 28    EXPRESSION_MAT -> DATANF
Rule 29    DATANF -> NUMBER
Rule 30    DATANF -> FLOAT
Rule 31    DATANF -> ID
Rule 32    EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
Rule 33    EXPRESSION_CONCAT -> DATASTRING
Rule 34    EXPRESSION_CONCAT -> ARRAY
Rule 35    DATASTRING -> STRING
Rule 36    DATASTRING -> OTHERSTRINGDECLARATION
Rule 37    FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING
Rule 38    FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION STRING
Rule 39    FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION
Rule 40    FUNCTIONS_ALLOWED_STRING -> UPCASE
Rule 41    ARRAY -> ALFT DATA ARGT
Rule 42    FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY
Rule 43    FUNTIONS_ALLOWED_ARRAY -> MIN
Rule 44    FUNTIONS_ALLOWED_ARRAY -> FIRST
Rule 45    FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY
Rule 46    MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB
Rule 47    DATA_REPEAT_MAP -> STATEMENT
Rule 48    DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP
Rule 49    DATA_ALLOWED_IN_MAP -> ASIGNATION
Rule 50    DATA_ALLOWED_IN_MAP -> EXPRESSION
Rule 51    STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END
Rule 52    STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO
Rule 53    STRUCTURE_IN_FOR -> FOR ID IN ID DO
Rule 54    DATA_REPEAT -> DATA_ALLOWED_IN_FOR
Rule 55    DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT
Rule 56    DATA_ALLOWED_IN_FOR -> ASIGNATION
Rule 57    DATA_ALLOWED_IN_FOR -> EXPRESSION
Rule 58    DATA -> NUMBER
Rule 59    DATA -> FLOAT
Rule 60    DATA -> BOOLEAN
Rule 61    DATA -> STRING
Rule 62    DATA -> DATA COMMA DATA
Rule 63    BOOLEAN -> TRUE
Rule 64    BOOLEAN -> FALSE
Rule 65    BOOLEAN -> LOGIC_NOT TRUE
Rule 66    BOOLEAN -> LOGIC_NOT FALSE
Rule 67    OPERATOR_MAT -> PLUS
Rule 68    OPERATOR_MAT -> MINUS
Rule 69    OPERATOR_MAT -> TIMES
Rule 70    OPERATOR_MAT -> DIVIDE
Rule 71    OPERATOR_MAT -> EXPONENTIATION
Rule 72    OPERATOR_COMP_MAT -> EQUAL
Rule 73    OPERATOR_COMP_MAT -> EQUAL_STRICT
Rule 74    OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL
Rule 75    OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL
Rule 76    OPERATOR_COMP_MAT -> MINOR
Rule 77    OPERATOR_COMP_MAT -> GREATER
Rule 78    OPERATOR_COMP_MAT -> LOGIC_AND
Rule 79    OPERATOR_COMP_MAT -> LOGIC_OR
Rule 80    OPERATOR_COMP_MAT -> PIPE

Terminals, with rules where they appear

ALFT                 : 41
AND                  : 
ARGT                 : 41
ASIGN                : 4
CLOSURECB            : 46
COMMA                : 62
DIVIDE               : 70
DO                   : 52 53
ELSE                 : 
EMPTY                : 39
END                  : 51
EQUAL                : 20 72
EQUAL_STRICT         : 21 73
EXPONENTIATION       : 71
FALSE                : 64 66
FIRST                : 44
FLOAT                : 6 30 59
FOR                  : 52 53
GETS                 : 17
GREATER              : 77
GREATER_THAN_OR_EQUAL : 74
HASHROCKET           : 
HAS_VALUE            : 
ID                   : 4 16 31 46 52 53 53
IF                   : 
IN                   : 52 53
INCLUDE              : 38
LOGIC_AND            : 22 78
LOGIC_NOT            : 12 65 66
LOGIC_OR             : 23 79
LPAREN               : 27
MAP                  : 46
MERGE                : 
MIN                  : 43
MINOR                : 76
MINOR_THAN_OR_EQUAL  : 75
MINUS                : 68
NUMBER               : 5 29 58
OPENINGCB            : 46
OR                   : 
OTHERSTRINGDECLARATION : 9 36
PIPE                 : 24 46 46 80
PLUS                 : 32 67
POINT                : 37 42
PUTS                 : 15 16
QUESTION             : 38 39
RPAREN               : 27
SIZE                 : 
STRING               : 8 35 38 61
TIMES                : 69
TRUE                 : 63 65
UPCASE               : 40
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ARRAY                : 10 34 42 52
ASIGNATION           : 2 49 56
BOOLEAN              : 7 18 18 60
DATA                 : 41 62 62
DATANF               : 25 25 28
DATASTRING           : 19 19 33 37
DATA_ALLOWED_IN_FOR  : 54 55
DATA_ALLOWED_IN_MAP  : 
DATA_REPEAT          : 51 55
DATA_REPEAT_MAP      : 46 48
EXPRESSION           : 1 4 12 15 17 50 57
EXPRESSION_CONCAT    : 14 32 32
EXPRESSION_MAT       : 13 26 26 27
FUNCTIONS_ALLOWED_STRING : 37
FUNCTIONS_STRING     : 
FUNTIONS_ALLOWED_ARRAY : 42
FUNTIONS_ARRAY       : 11
MAP_ARRAY            : 45
OPERATOR_COMP_BOOLEAN : 18 19
OPERATOR_COMP_MAT    : 25
OPERATOR_MAT         : 26
STATEMENT            : 47 48 0
STRUCTURE_FOR        : 3
STRUCTURE_IN_FOR     : 51

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (4) ASIGNATION -> . ID ASIGN EXPRESSION
    (51) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID
    (52) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (53) STRUCTURE_IN_FOR -> . FOR ID IN ID DO

    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    ID              shift and go to state 16
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    FOR             shift and go to state 25

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19
    STRUCTURE_IN_FOR               shift and go to state 20

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    NUMBER          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FLOAT           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    STRING          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 1 (STATEMENT -> EXPRESSION .)
    PUTS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    GETS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ID              reduce using rule 1 (STATEMENT -> EXPRESSION .)
    TRUE            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FALSE           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ALFT            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LPAREN          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FOR             reduce using rule 1 (STATEMENT -> EXPRESSION .)
    CLOSURECB       reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (2) STATEMENT -> ASIGNATION .

    $end            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    NUMBER          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FLOAT           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    STRING          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 2 (STATEMENT -> ASIGNATION .)
    PUTS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    GETS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ID              reduce using rule 2 (STATEMENT -> ASIGNATION .)
    TRUE            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FALSE           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ALFT            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LPAREN          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FOR             reduce using rule 2 (STATEMENT -> ASIGNATION .)
    CLOSURECB       reduce using rule 2 (STATEMENT -> ASIGNATION .)


state 4

    (3) STATEMENT -> STRUCTURE_FOR .

    $end            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    NUMBER          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FLOAT           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    STRING          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    OTHERSTRINGDECLARATION reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LOGIC_NOT       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    PUTS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    GETS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ID              reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    TRUE            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FALSE           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ALFT            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LPAREN          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FOR             reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    CLOSURECB       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)


state 5

    (5) EXPRESSION -> NUMBER .
    (29) DATANF -> NUMBER .

  ! reduce/reduce conflict for $end resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ID resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for GETS resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ALFT resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 5 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 5 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 5 (EXPRESSION -> NUMBER .)
    NUMBER          reduce using rule 5 (EXPRESSION -> NUMBER .)
    FLOAT           reduce using rule 5 (EXPRESSION -> NUMBER .)
    STRING          reduce using rule 5 (EXPRESSION -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 5 (EXPRESSION -> NUMBER .)
    LOGIC_NOT       reduce using rule 5 (EXPRESSION -> NUMBER .)
    PUTS            reduce using rule 5 (EXPRESSION -> NUMBER .)
    GETS            reduce using rule 5 (EXPRESSION -> NUMBER .)
    TRUE            reduce using rule 5 (EXPRESSION -> NUMBER .)
    FALSE           reduce using rule 5 (EXPRESSION -> NUMBER .)
    ALFT            reduce using rule 5 (EXPRESSION -> NUMBER .)
    LPAREN          reduce using rule 5 (EXPRESSION -> NUMBER .)
    END             reduce using rule 5 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 5 (EXPRESSION -> NUMBER .)
    CLOSURECB       reduce using rule 5 (EXPRESSION -> NUMBER .)
    EQUAL           reduce using rule 29 (DATANF -> NUMBER .)
    EQUAL_STRICT    reduce using rule 29 (DATANF -> NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 29 (DATANF -> NUMBER .)
    MINOR_THAN_OR_EQUAL reduce using rule 29 (DATANF -> NUMBER .)
    MINOR           reduce using rule 29 (DATANF -> NUMBER .)
    GREATER         reduce using rule 29 (DATANF -> NUMBER .)
    LOGIC_AND       reduce using rule 29 (DATANF -> NUMBER .)
    LOGIC_OR        reduce using rule 29 (DATANF -> NUMBER .)
    PIPE            reduce using rule 29 (DATANF -> NUMBER .)
    PLUS            reduce using rule 29 (DATANF -> NUMBER .)
    MINUS           reduce using rule 29 (DATANF -> NUMBER .)
    TIMES           reduce using rule 29 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 29 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 29 (DATANF -> NUMBER .)

  ! $end            [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! ID              [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! STRING          [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! LOGIC_NOT       [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! PUTS            [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! GETS            [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! TRUE            [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! FALSE           [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! ALFT            [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! END             [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! FOR             [ reduce using rule 29 (DATANF -> NUMBER .) ]
  ! CLOSURECB       [ reduce using rule 29 (DATANF -> NUMBER .) ]


state 6

    (6) EXPRESSION -> FLOAT .
    (30) DATANF -> FLOAT .

  ! reduce/reduce conflict for $end resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ID resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for GETS resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for TRUE resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FALSE resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ALFT resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 6 (EXPRESSION -> FLOAT .)
    $end            reduce using rule 6 (EXPRESSION -> FLOAT .)
    ID              reduce using rule 6 (EXPRESSION -> FLOAT .)
    NUMBER          reduce using rule 6 (EXPRESSION -> FLOAT .)
    FLOAT           reduce using rule 6 (EXPRESSION -> FLOAT .)
    STRING          reduce using rule 6 (EXPRESSION -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 6 (EXPRESSION -> FLOAT .)
    LOGIC_NOT       reduce using rule 6 (EXPRESSION -> FLOAT .)
    PUTS            reduce using rule 6 (EXPRESSION -> FLOAT .)
    GETS            reduce using rule 6 (EXPRESSION -> FLOAT .)
    TRUE            reduce using rule 6 (EXPRESSION -> FLOAT .)
    FALSE           reduce using rule 6 (EXPRESSION -> FLOAT .)
    ALFT            reduce using rule 6 (EXPRESSION -> FLOAT .)
    LPAREN          reduce using rule 6 (EXPRESSION -> FLOAT .)
    END             reduce using rule 6 (EXPRESSION -> FLOAT .)
    FOR             reduce using rule 6 (EXPRESSION -> FLOAT .)
    CLOSURECB       reduce using rule 6 (EXPRESSION -> FLOAT .)
    EQUAL           reduce using rule 30 (DATANF -> FLOAT .)
    EQUAL_STRICT    reduce using rule 30 (DATANF -> FLOAT .)
    GREATER_THAN_OR_EQUAL reduce using rule 30 (DATANF -> FLOAT .)
    MINOR_THAN_OR_EQUAL reduce using rule 30 (DATANF -> FLOAT .)
    MINOR           reduce using rule 30 (DATANF -> FLOAT .)
    GREATER         reduce using rule 30 (DATANF -> FLOAT .)
    LOGIC_AND       reduce using rule 30 (DATANF -> FLOAT .)
    LOGIC_OR        reduce using rule 30 (DATANF -> FLOAT .)
    PIPE            reduce using rule 30 (DATANF -> FLOAT .)
    PLUS            reduce using rule 30 (DATANF -> FLOAT .)
    MINUS           reduce using rule 30 (DATANF -> FLOAT .)
    TIMES           reduce using rule 30 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 30 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 30 (DATANF -> FLOAT .)

  ! $end            [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! ID              [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! NUMBER          [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! STRING          [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! LOGIC_NOT       [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! PUTS            [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! GETS            [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! TRUE            [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! FALSE           [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! ALFT            [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! LPAREN          [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! END             [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! FOR             [ reduce using rule 30 (DATANF -> FLOAT .) ]
  ! CLOSURECB       [ reduce using rule 30 (DATANF -> FLOAT .) ]


state 7

    (7) EXPRESSION -> BOOLEAN .
    (18) EXPRESSION -> BOOLEAN . OPERATOR_COMP_BOOLEAN BOOLEAN
    (20) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (21) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (22) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (23) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (24) OPERATOR_COMP_BOOLEAN -> . PIPE

    $end            reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    ID              reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    NUMBER          reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    FLOAT           reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    STRING          reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    LOGIC_NOT       reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    PUTS            reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    GETS            reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    TRUE            reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    FALSE           reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    ALFT            reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    LPAREN          reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    END             reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    FOR             reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    CLOSURECB       reduce using rule 7 (EXPRESSION -> BOOLEAN .)
    EQUAL           shift and go to state 27
    EQUAL_STRICT    shift and go to state 28
    LOGIC_AND       shift and go to state 29
    LOGIC_OR        shift and go to state 30
    PIPE            shift and go to state 31

    OPERATOR_COMP_BOOLEAN          shift and go to state 26

state 8

    (8) EXPRESSION -> STRING .
    (35) DATASTRING -> STRING .

  ! reduce/reduce conflict for $end resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ID resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for NUMBER resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FLOAT resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for PUTS resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for GETS resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ALFT resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for END resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 8 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 8 (EXPRESSION -> STRING .)
    $end            reduce using rule 8 (EXPRESSION -> STRING .)
    ID              reduce using rule 8 (EXPRESSION -> STRING .)
    NUMBER          reduce using rule 8 (EXPRESSION -> STRING .)
    FLOAT           reduce using rule 8 (EXPRESSION -> STRING .)
    STRING          reduce using rule 8 (EXPRESSION -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 8 (EXPRESSION -> STRING .)
    LOGIC_NOT       reduce using rule 8 (EXPRESSION -> STRING .)
    PUTS            reduce using rule 8 (EXPRESSION -> STRING .)
    GETS            reduce using rule 8 (EXPRESSION -> STRING .)
    TRUE            reduce using rule 8 (EXPRESSION -> STRING .)
    FALSE           reduce using rule 8 (EXPRESSION -> STRING .)
    ALFT            reduce using rule 8 (EXPRESSION -> STRING .)
    LPAREN          reduce using rule 8 (EXPRESSION -> STRING .)
    END             reduce using rule 8 (EXPRESSION -> STRING .)
    FOR             reduce using rule 8 (EXPRESSION -> STRING .)
    CLOSURECB       reduce using rule 8 (EXPRESSION -> STRING .)
    EQUAL           reduce using rule 35 (DATASTRING -> STRING .)
    EQUAL_STRICT    reduce using rule 35 (DATASTRING -> STRING .)
    LOGIC_AND       reduce using rule 35 (DATASTRING -> STRING .)
    LOGIC_OR        reduce using rule 35 (DATASTRING -> STRING .)
    PIPE            reduce using rule 35 (DATASTRING -> STRING .)
    PLUS            reduce using rule 35 (DATASTRING -> STRING .)

  ! $end            [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! ID              [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! NUMBER          [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! FLOAT           [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! STRING          [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! LOGIC_NOT       [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! PUTS            [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! GETS            [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! TRUE            [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! FALSE           [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! ALFT            [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! LPAREN          [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! END             [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! FOR             [ reduce using rule 35 (DATASTRING -> STRING .) ]
  ! CLOSURECB       [ reduce using rule 35 (DATASTRING -> STRING .) ]


state 9

    (9) EXPRESSION -> OTHERSTRINGDECLARATION .
    (36) DATASTRING -> OTHERSTRINGDECLARATION .

  ! reduce/reduce conflict for $end resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ID resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for GETS resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for END resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 9 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    EQUAL           reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    EQUAL_STRICT    reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_AND       reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_OR        reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PIPE            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PLUS            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)

  ! $end            [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ID              [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! NUMBER          [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FLOAT           [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! STRING          [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LOGIC_NOT       [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! PUTS            [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! GETS            [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! TRUE            [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FALSE           [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ALFT            [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LPAREN          [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! END             [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FOR             [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! CLOSURECB       [ reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .) ]


state 10

    (10) EXPRESSION -> ARRAY .
    (42) FUNTIONS_ARRAY -> ARRAY . POINT FUNTIONS_ALLOWED_ARRAY
    (34) EXPRESSION_CONCAT -> ARRAY .

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ID resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for PUTS resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for GETS resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ALFT resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for END resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 10 (EXPRESSION -> ARRAY .)
    $end            reduce using rule 10 (EXPRESSION -> ARRAY .)
    ID              reduce using rule 10 (EXPRESSION -> ARRAY .)
    NUMBER          reduce using rule 10 (EXPRESSION -> ARRAY .)
    FLOAT           reduce using rule 10 (EXPRESSION -> ARRAY .)
    STRING          reduce using rule 10 (EXPRESSION -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 10 (EXPRESSION -> ARRAY .)
    LOGIC_NOT       reduce using rule 10 (EXPRESSION -> ARRAY .)
    PUTS            reduce using rule 10 (EXPRESSION -> ARRAY .)
    GETS            reduce using rule 10 (EXPRESSION -> ARRAY .)
    TRUE            reduce using rule 10 (EXPRESSION -> ARRAY .)
    FALSE           reduce using rule 10 (EXPRESSION -> ARRAY .)
    ALFT            reduce using rule 10 (EXPRESSION -> ARRAY .)
    LPAREN          reduce using rule 10 (EXPRESSION -> ARRAY .)
    END             reduce using rule 10 (EXPRESSION -> ARRAY .)
    FOR             reduce using rule 10 (EXPRESSION -> ARRAY .)
    CLOSURECB       reduce using rule 10 (EXPRESSION -> ARRAY .)
    POINT           shift and go to state 32
    PLUS            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)

  ! $end            [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ID              [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! NUMBER          [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FLOAT           [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! STRING          [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LOGIC_NOT       [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! PUTS            [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! GETS            [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! TRUE            [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FALSE           [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ALFT            [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LPAREN          [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! END             [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FOR             [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! CLOSURECB       [ reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .) ]


state 11

    (11) EXPRESSION -> FUNTIONS_ARRAY .

    $end            reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    ID              reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    NUMBER          reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    FLOAT           reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    STRING          reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    LOGIC_NOT       reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    PUTS            reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    GETS            reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    TRUE            reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    FALSE           reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    ALFT            reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    LPAREN          reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    END             reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    FOR             reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)
    CLOSURECB       reduce using rule 11 (EXPRESSION -> FUNTIONS_ARRAY .)


state 12

    (12) EXPRESSION -> LOGIC_NOT . EXPRESSION
    (65) BOOLEAN -> LOGIC_NOT . TRUE
    (66) BOOLEAN -> LOGIC_NOT . FALSE
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    ID              shift and go to state 36

    EXPRESSION                     shift and go to state 33
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 13

    (13) EXPRESSION -> EXPRESSION_MAT .
    (26) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (67) OPERATOR_MAT -> . PLUS
    (68) OPERATOR_MAT -> . MINUS
    (69) OPERATOR_MAT -> . TIMES
    (70) OPERATOR_MAT -> . DIVIDE
    (71) OPERATOR_MAT -> . EXPONENTIATION

    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    ID              reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    NUMBER          reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    FLOAT           reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    STRING          reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    PUTS            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    GETS            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    TRUE            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    FALSE           reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    ALFT            reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    LPAREN          reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    END             reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    FOR             reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 13 (EXPRESSION -> EXPRESSION_MAT .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    EXPONENTIATION  shift and go to state 42

    OPERATOR_MAT                   shift and go to state 37

state 14

    (14) EXPRESSION -> EXPRESSION_CONCAT .
    (32) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    ID              reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    STRING          reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    PUTS            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    GETS            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    TRUE            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    FALSE           reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    ALFT            reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    END             reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    FOR             reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 14 (EXPRESSION -> EXPRESSION_CONCAT .)
    PLUS            shift and go to state 43


state 15

    (15) EXPRESSION -> PUTS . EXPRESSION
    (16) EXPRESSION -> PUTS . ID
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    ID              shift and go to state 45
    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24

    EXPRESSION                     shift and go to state 44
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 16

    (4) ASIGNATION -> ID . ASIGN EXPRESSION
    (31) DATANF -> ID .

    ASIGN           shift and go to state 46
    EQUAL           reduce using rule 31 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 31 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR           reduce using rule 31 (DATANF -> ID .)
    GREATER         reduce using rule 31 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 31 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 31 (DATANF -> ID .)
    PIPE            reduce using rule 31 (DATANF -> ID .)
    PLUS            reduce using rule 31 (DATANF -> ID .)
    MINUS           reduce using rule 31 (DATANF -> ID .)
    TIMES           reduce using rule 31 (DATANF -> ID .)
    DIVIDE          reduce using rule 31 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 31 (DATANF -> ID .)
    $end            reduce using rule 31 (DATANF -> ID .)
    ID              reduce using rule 31 (DATANF -> ID .)
    NUMBER          reduce using rule 31 (DATANF -> ID .)
    FLOAT           reduce using rule 31 (DATANF -> ID .)
    STRING          reduce using rule 31 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 31 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 31 (DATANF -> ID .)
    PUTS            reduce using rule 31 (DATANF -> ID .)
    GETS            reduce using rule 31 (DATANF -> ID .)
    TRUE            reduce using rule 31 (DATANF -> ID .)
    FALSE           reduce using rule 31 (DATANF -> ID .)
    ALFT            reduce using rule 31 (DATANF -> ID .)
    LPAREN          reduce using rule 31 (DATANF -> ID .)
    END             reduce using rule 31 (DATANF -> ID .)
    FOR             reduce using rule 31 (DATANF -> ID .)
    CLOSURECB       reduce using rule 31 (DATANF -> ID .)


state 17

    (17) EXPRESSION -> GETS . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    ID              shift and go to state 36

    EXPRESSION                     shift and go to state 47
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 18

    (19) EXPRESSION -> DATASTRING . OPERATOR_COMP_BOOLEAN DATASTRING
    (33) EXPRESSION_CONCAT -> DATASTRING .
    (20) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (21) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (22) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (23) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (24) OPERATOR_COMP_BOOLEAN -> . PIPE

    PLUS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    EQUAL           shift and go to state 27
    EQUAL_STRICT    shift and go to state 28
    LOGIC_AND       shift and go to state 29
    LOGIC_OR        shift and go to state 30
    PIPE            shift and go to state 31

    OPERATOR_COMP_BOOLEAN          shift and go to state 48

state 19

    (25) EXPRESSION -> DATANF . OPERATOR_COMP_MAT DATANF
    (28) EXPRESSION_MAT -> DATANF .
    (72) OPERATOR_COMP_MAT -> . EQUAL
    (73) OPERATOR_COMP_MAT -> . EQUAL_STRICT
    (74) OPERATOR_COMP_MAT -> . GREATER_THAN_OR_EQUAL
    (75) OPERATOR_COMP_MAT -> . MINOR_THAN_OR_EQUAL
    (76) OPERATOR_COMP_MAT -> . MINOR
    (77) OPERATOR_COMP_MAT -> . GREATER
    (78) OPERATOR_COMP_MAT -> . LOGIC_AND
    (79) OPERATOR_COMP_MAT -> . LOGIC_OR
    (80) OPERATOR_COMP_MAT -> . PIPE

    PLUS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    EQUAL           shift and go to state 50
    EQUAL_STRICT    shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    MINOR_THAN_OR_EQUAL shift and go to state 53
    MINOR           shift and go to state 54
    GREATER         shift and go to state 55
    LOGIC_AND       shift and go to state 56
    LOGIC_OR        shift and go to state 57
    PIPE            shift and go to state 58

    OPERATOR_COMP_MAT              shift and go to state 49

state 20

    (51) STRUCTURE_FOR -> STRUCTURE_IN_FOR . DATA_REPEAT END
    (54) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (55) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (56) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (57) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (4) ASIGNATION -> . ID ASIGN EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    ID              shift and go to state 16
    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24

    DATA_REPEAT                    shift and go to state 59
    DATA_ALLOWED_IN_FOR            shift and go to state 60
    ASIGNATION                     shift and go to state 61
    EXPRESSION                     shift and go to state 62
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 21

    (63) BOOLEAN -> TRUE .

    EQUAL           reduce using rule 63 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 63 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 63 (BOOLEAN -> TRUE .)
    $end            reduce using rule 63 (BOOLEAN -> TRUE .)
    ID              reduce using rule 63 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 63 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 63 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 63 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 63 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 63 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 63 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 63 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 63 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 63 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 63 (BOOLEAN -> TRUE .)
    END             reduce using rule 63 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 63 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 63 (BOOLEAN -> TRUE .)
    ARGT            reduce using rule 63 (BOOLEAN -> TRUE .)
    COMMA           reduce using rule 63 (BOOLEAN -> TRUE .)


state 22

    (64) BOOLEAN -> FALSE .

    EQUAL           reduce using rule 64 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 64 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 64 (BOOLEAN -> FALSE .)
    $end            reduce using rule 64 (BOOLEAN -> FALSE .)
    ID              reduce using rule 64 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 64 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 64 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 64 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 64 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 64 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 64 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 64 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 64 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 64 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 64 (BOOLEAN -> FALSE .)
    END             reduce using rule 64 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 64 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 64 (BOOLEAN -> FALSE .)
    ARGT            reduce using rule 64 (BOOLEAN -> FALSE .)
    COMMA           reduce using rule 64 (BOOLEAN -> FALSE .)


state 23

    (41) ARRAY -> ALFT . DATA ARGT
    (58) DATA -> . NUMBER
    (59) DATA -> . FLOAT
    (60) DATA -> . BOOLEAN
    (61) DATA -> . STRING
    (62) DATA -> . DATA COMMA DATA
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 67
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    LOGIC_NOT       shift and go to state 68

    DATA                           shift and go to state 63
    BOOLEAN                        shift and go to state 66

state 24

    (27) EXPRESSION_MAT -> LPAREN . EXPRESSION_MAT RPAREN
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 71
    FLOAT           shift and go to state 72
    ID              shift and go to state 36

    EXPRESSION_MAT                 shift and go to state 69
    DATANF                         shift and go to state 70

state 25

    (52) STRUCTURE_IN_FOR -> FOR . ID IN ARRAY DO
    (53) STRUCTURE_IN_FOR -> FOR . ID IN ID DO

    ID              shift and go to state 73


state 26

    (18) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN . BOOLEAN
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE

    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    LOGIC_NOT       shift and go to state 68

    BOOLEAN                        shift and go to state 74

state 27

    (20) OPERATOR_COMP_BOOLEAN -> EQUAL .

    TRUE            reduce using rule 20 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    FALSE           reduce using rule 20 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    LOGIC_NOT       reduce using rule 20 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    STRING          reduce using rule 20 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    OTHERSTRINGDECLARATION reduce using rule 20 (OPERATOR_COMP_BOOLEAN -> EQUAL .)


state 28

    (21) OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .

    TRUE            reduce using rule 21 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    FALSE           reduce using rule 21 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    LOGIC_NOT       reduce using rule 21 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    STRING          reduce using rule 21 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    OTHERSTRINGDECLARATION reduce using rule 21 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)


state 29

    (22) OPERATOR_COMP_BOOLEAN -> LOGIC_AND .

    TRUE            reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    FALSE           reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    LOGIC_NOT       reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    STRING          reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    OTHERSTRINGDECLARATION reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)


state 30

    (23) OPERATOR_COMP_BOOLEAN -> LOGIC_OR .

    TRUE            reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    FALSE           reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    LOGIC_NOT       reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    STRING          reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    OTHERSTRINGDECLARATION reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)


state 31

    (24) OPERATOR_COMP_BOOLEAN -> PIPE .

    TRUE            reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    FALSE           reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    LOGIC_NOT       reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    STRING          reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    OTHERSTRINGDECLARATION reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> PIPE .)


state 32

    (42) FUNTIONS_ARRAY -> ARRAY POINT . FUNTIONS_ALLOWED_ARRAY
    (43) FUNTIONS_ALLOWED_ARRAY -> . MIN
    (44) FUNTIONS_ALLOWED_ARRAY -> . FIRST
    (45) FUNTIONS_ALLOWED_ARRAY -> . MAP_ARRAY
    (46) MAP_ARRAY -> . MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    MIN             shift and go to state 76
    FIRST           shift and go to state 77
    MAP             shift and go to state 79

    FUNTIONS_ALLOWED_ARRAY         shift and go to state 75
    MAP_ARRAY                      shift and go to state 78

state 33

    (12) EXPRESSION -> LOGIC_NOT EXPRESSION .

    $end            reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ID              reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    NUMBER          reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FLOAT           reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    STRING          reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LOGIC_NOT       reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    PUTS            reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    GETS            reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    TRUE            reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FALSE           reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ALFT            reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LPAREN          reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    END             reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FOR             reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    CLOSURECB       reduce using rule 12 (EXPRESSION -> LOGIC_NOT EXPRESSION .)


state 34

    (65) BOOLEAN -> LOGIC_NOT TRUE .
    (63) BOOLEAN -> TRUE .

  ! reduce/reduce conflict for EQUAL resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PIPE resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ID resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for STRING resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PUTS resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for GETS resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ALFT resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for END resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 63 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 63 (BOOLEAN -> TRUE .)
    EQUAL           reduce using rule 63 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 63 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 63 (BOOLEAN -> TRUE .)
    $end            reduce using rule 63 (BOOLEAN -> TRUE .)
    ID              reduce using rule 63 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 63 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 63 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 63 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 63 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 63 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 63 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 63 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 63 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 63 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 63 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 63 (BOOLEAN -> TRUE .)
    END             reduce using rule 63 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 63 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 63 (BOOLEAN -> TRUE .)

  ! EQUAL           [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! EQUAL_STRICT    [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_AND       [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_OR        [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PIPE            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! $end            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ID              [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! NUMBER          [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FLOAT           [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! STRING          [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_NOT       [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PUTS            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! GETS            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! TRUE            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FALSE           [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ALFT            [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LPAREN          [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! END             [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FOR             [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! CLOSURECB       [ reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .) ]


state 35

    (66) BOOLEAN -> LOGIC_NOT FALSE .
    (64) BOOLEAN -> FALSE .

  ! reduce/reduce conflict for EQUAL resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PIPE resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ID resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PUTS resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for GETS resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ALFT resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for END resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 64 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 64 (BOOLEAN -> FALSE .)
    EQUAL           reduce using rule 64 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 64 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 64 (BOOLEAN -> FALSE .)
    $end            reduce using rule 64 (BOOLEAN -> FALSE .)
    ID              reduce using rule 64 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 64 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 64 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 64 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 64 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 64 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 64 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 64 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 64 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 64 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 64 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 64 (BOOLEAN -> FALSE .)
    END             reduce using rule 64 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 64 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 64 (BOOLEAN -> FALSE .)

  ! EQUAL           [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! EQUAL_STRICT    [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_AND       [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_OR        [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PIPE            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! $end            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ID              [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! NUMBER          [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FLOAT           [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! STRING          [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_NOT       [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PUTS            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! GETS            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! TRUE            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FALSE           [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ALFT            [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LPAREN          [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! END             [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FOR             [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! CLOSURECB       [ reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .) ]


state 36

    (31) DATANF -> ID .

    EQUAL           reduce using rule 31 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 31 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR           reduce using rule 31 (DATANF -> ID .)
    GREATER         reduce using rule 31 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 31 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 31 (DATANF -> ID .)
    PIPE            reduce using rule 31 (DATANF -> ID .)
    PLUS            reduce using rule 31 (DATANF -> ID .)
    MINUS           reduce using rule 31 (DATANF -> ID .)
    TIMES           reduce using rule 31 (DATANF -> ID .)
    DIVIDE          reduce using rule 31 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 31 (DATANF -> ID .)
    $end            reduce using rule 31 (DATANF -> ID .)
    ID              reduce using rule 31 (DATANF -> ID .)
    NUMBER          reduce using rule 31 (DATANF -> ID .)
    FLOAT           reduce using rule 31 (DATANF -> ID .)
    STRING          reduce using rule 31 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 31 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 31 (DATANF -> ID .)
    PUTS            reduce using rule 31 (DATANF -> ID .)
    GETS            reduce using rule 31 (DATANF -> ID .)
    TRUE            reduce using rule 31 (DATANF -> ID .)
    FALSE           reduce using rule 31 (DATANF -> ID .)
    ALFT            reduce using rule 31 (DATANF -> ID .)
    LPAREN          reduce using rule 31 (DATANF -> ID .)
    END             reduce using rule 31 (DATANF -> ID .)
    FOR             reduce using rule 31 (DATANF -> ID .)
    CLOSURECB       reduce using rule 31 (DATANF -> ID .)
    RPAREN          reduce using rule 31 (DATANF -> ID .)


state 37

    (26) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT . EXPRESSION_MAT
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 71
    FLOAT           shift and go to state 72
    ID              shift and go to state 36

    EXPRESSION_MAT                 shift and go to state 80
    DATANF                         shift and go to state 70

state 38

    (67) OPERATOR_MAT -> PLUS .

    LPAREN          reduce using rule 67 (OPERATOR_MAT -> PLUS .)
    NUMBER          reduce using rule 67 (OPERATOR_MAT -> PLUS .)
    FLOAT           reduce using rule 67 (OPERATOR_MAT -> PLUS .)
    ID              reduce using rule 67 (OPERATOR_MAT -> PLUS .)


state 39

    (68) OPERATOR_MAT -> MINUS .

    LPAREN          reduce using rule 68 (OPERATOR_MAT -> MINUS .)
    NUMBER          reduce using rule 68 (OPERATOR_MAT -> MINUS .)
    FLOAT           reduce using rule 68 (OPERATOR_MAT -> MINUS .)
    ID              reduce using rule 68 (OPERATOR_MAT -> MINUS .)


state 40

    (69) OPERATOR_MAT -> TIMES .

    LPAREN          reduce using rule 69 (OPERATOR_MAT -> TIMES .)
    NUMBER          reduce using rule 69 (OPERATOR_MAT -> TIMES .)
    FLOAT           reduce using rule 69 (OPERATOR_MAT -> TIMES .)
    ID              reduce using rule 69 (OPERATOR_MAT -> TIMES .)


state 41

    (70) OPERATOR_MAT -> DIVIDE .

    LPAREN          reduce using rule 70 (OPERATOR_MAT -> DIVIDE .)
    NUMBER          reduce using rule 70 (OPERATOR_MAT -> DIVIDE .)
    FLOAT           reduce using rule 70 (OPERATOR_MAT -> DIVIDE .)
    ID              reduce using rule 70 (OPERATOR_MAT -> DIVIDE .)


state 42

    (71) OPERATOR_MAT -> EXPONENTIATION .

    LPAREN          reduce using rule 71 (OPERATOR_MAT -> EXPONENTIATION .)
    NUMBER          reduce using rule 71 (OPERATOR_MAT -> EXPONENTIATION .)
    FLOAT           reduce using rule 71 (OPERATOR_MAT -> EXPONENTIATION .)
    ID              reduce using rule 71 (OPERATOR_MAT -> EXPONENTIATION .)


state 43

    (32) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS . EXPRESSION_CONCAT
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (41) ARRAY -> . ALFT DATA ARGT

    STRING          shift and go to state 84
    OTHERSTRINGDECLARATION shift and go to state 85
    ALFT            shift and go to state 23

    EXPRESSION_CONCAT              shift and go to state 81
    DATASTRING                     shift and go to state 82
    ARRAY                          shift and go to state 83

state 44

    (15) EXPRESSION -> PUTS EXPRESSION .

    $end            reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    ID              reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    NUMBER          reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    FLOAT           reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    STRING          reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    LOGIC_NOT       reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    PUTS            reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    GETS            reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    TRUE            reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    FALSE           reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    ALFT            reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    LPAREN          reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    END             reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    FOR             reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)
    CLOSURECB       reduce using rule 15 (EXPRESSION -> PUTS EXPRESSION .)


state 45

    (16) EXPRESSION -> PUTS ID .
    (31) DATANF -> ID .

  ! reduce/reduce conflict for $end resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ID resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for STRING resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for PUTS resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for GETS resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ALFT resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for END resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FOR resolved using rule 16 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 16 (EXPRESSION -> PUTS ID .)
    $end            reduce using rule 16 (EXPRESSION -> PUTS ID .)
    ID              reduce using rule 16 (EXPRESSION -> PUTS ID .)
    NUMBER          reduce using rule 16 (EXPRESSION -> PUTS ID .)
    FLOAT           reduce using rule 16 (EXPRESSION -> PUTS ID .)
    STRING          reduce using rule 16 (EXPRESSION -> PUTS ID .)
    OTHERSTRINGDECLARATION reduce using rule 16 (EXPRESSION -> PUTS ID .)
    LOGIC_NOT       reduce using rule 16 (EXPRESSION -> PUTS ID .)
    PUTS            reduce using rule 16 (EXPRESSION -> PUTS ID .)
    GETS            reduce using rule 16 (EXPRESSION -> PUTS ID .)
    TRUE            reduce using rule 16 (EXPRESSION -> PUTS ID .)
    FALSE           reduce using rule 16 (EXPRESSION -> PUTS ID .)
    ALFT            reduce using rule 16 (EXPRESSION -> PUTS ID .)
    LPAREN          reduce using rule 16 (EXPRESSION -> PUTS ID .)
    END             reduce using rule 16 (EXPRESSION -> PUTS ID .)
    FOR             reduce using rule 16 (EXPRESSION -> PUTS ID .)
    CLOSURECB       reduce using rule 16 (EXPRESSION -> PUTS ID .)
    EQUAL           reduce using rule 31 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 31 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 31 (DATANF -> ID .)
    MINOR           reduce using rule 31 (DATANF -> ID .)
    GREATER         reduce using rule 31 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 31 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 31 (DATANF -> ID .)
    PIPE            reduce using rule 31 (DATANF -> ID .)
    PLUS            reduce using rule 31 (DATANF -> ID .)
    MINUS           reduce using rule 31 (DATANF -> ID .)
    TIMES           reduce using rule 31 (DATANF -> ID .)
    DIVIDE          reduce using rule 31 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 31 (DATANF -> ID .)

  ! $end            [ reduce using rule 31 (DATANF -> ID .) ]
  ! ID              [ reduce using rule 31 (DATANF -> ID .) ]
  ! NUMBER          [ reduce using rule 31 (DATANF -> ID .) ]
  ! FLOAT           [ reduce using rule 31 (DATANF -> ID .) ]
  ! STRING          [ reduce using rule 31 (DATANF -> ID .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 31 (DATANF -> ID .) ]
  ! LOGIC_NOT       [ reduce using rule 31 (DATANF -> ID .) ]
  ! PUTS            [ reduce using rule 31 (DATANF -> ID .) ]
  ! GETS            [ reduce using rule 31 (DATANF -> ID .) ]
  ! TRUE            [ reduce using rule 31 (DATANF -> ID .) ]
  ! FALSE           [ reduce using rule 31 (DATANF -> ID .) ]
  ! ALFT            [ reduce using rule 31 (DATANF -> ID .) ]
  ! LPAREN          [ reduce using rule 31 (DATANF -> ID .) ]
  ! END             [ reduce using rule 31 (DATANF -> ID .) ]
  ! FOR             [ reduce using rule 31 (DATANF -> ID .) ]
  ! CLOSURECB       [ reduce using rule 31 (DATANF -> ID .) ]


state 46

    (4) ASIGNATION -> ID ASIGN . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    ID              shift and go to state 36

    EXPRESSION                     shift and go to state 86
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 47

    (17) EXPRESSION -> GETS EXPRESSION .

    $end            reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    ID              reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    NUMBER          reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    FLOAT           reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    STRING          reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    LOGIC_NOT       reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    PUTS            reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    GETS            reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    TRUE            reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    FALSE           reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    ALFT            reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    LPAREN          reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    END             reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    FOR             reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)
    CLOSURECB       reduce using rule 17 (EXPRESSION -> GETS EXPRESSION .)


state 48

    (19) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN . DATASTRING
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION

    STRING          shift and go to state 84
    OTHERSTRINGDECLARATION shift and go to state 85

    DATASTRING                     shift and go to state 87

state 49

    (25) EXPRESSION -> DATANF OPERATOR_COMP_MAT . DATANF
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    NUMBER          shift and go to state 71
    FLOAT           shift and go to state 72
    ID              shift and go to state 36

    DATANF                         shift and go to state 88

state 50

    (72) OPERATOR_COMP_MAT -> EQUAL .

    NUMBER          reduce using rule 72 (OPERATOR_COMP_MAT -> EQUAL .)
    FLOAT           reduce using rule 72 (OPERATOR_COMP_MAT -> EQUAL .)
    ID              reduce using rule 72 (OPERATOR_COMP_MAT -> EQUAL .)


state 51

    (73) OPERATOR_COMP_MAT -> EQUAL_STRICT .

    NUMBER          reduce using rule 73 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    FLOAT           reduce using rule 73 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    ID              reduce using rule 73 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)


state 52

    (74) OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .

    NUMBER          reduce using rule 74 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 74 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    ID              reduce using rule 74 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)


state 53

    (75) OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .

    NUMBER          reduce using rule 75 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 75 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    ID              reduce using rule 75 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)


state 54

    (76) OPERATOR_COMP_MAT -> MINOR .

    NUMBER          reduce using rule 76 (OPERATOR_COMP_MAT -> MINOR .)
    FLOAT           reduce using rule 76 (OPERATOR_COMP_MAT -> MINOR .)
    ID              reduce using rule 76 (OPERATOR_COMP_MAT -> MINOR .)


state 55

    (77) OPERATOR_COMP_MAT -> GREATER .

    NUMBER          reduce using rule 77 (OPERATOR_COMP_MAT -> GREATER .)
    FLOAT           reduce using rule 77 (OPERATOR_COMP_MAT -> GREATER .)
    ID              reduce using rule 77 (OPERATOR_COMP_MAT -> GREATER .)


state 56

    (78) OPERATOR_COMP_MAT -> LOGIC_AND .

    NUMBER          reduce using rule 78 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    FLOAT           reduce using rule 78 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    ID              reduce using rule 78 (OPERATOR_COMP_MAT -> LOGIC_AND .)


state 57

    (79) OPERATOR_COMP_MAT -> LOGIC_OR .

    NUMBER          reduce using rule 79 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    FLOAT           reduce using rule 79 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    ID              reduce using rule 79 (OPERATOR_COMP_MAT -> LOGIC_OR .)


state 58

    (80) OPERATOR_COMP_MAT -> PIPE .

    NUMBER          reduce using rule 80 (OPERATOR_COMP_MAT -> PIPE .)
    FLOAT           reduce using rule 80 (OPERATOR_COMP_MAT -> PIPE .)
    ID              reduce using rule 80 (OPERATOR_COMP_MAT -> PIPE .)


state 59

    (51) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT . END

    END             shift and go to state 89


state 60

    (54) DATA_REPEAT -> DATA_ALLOWED_IN_FOR .
    (55) DATA_REPEAT -> DATA_ALLOWED_IN_FOR . DATA_REPEAT
    (54) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (55) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (56) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (57) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (4) ASIGNATION -> . ID ASIGN EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID

    END             reduce using rule 54 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR .)
    ID              shift and go to state 16
    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24

    DATA_ALLOWED_IN_FOR            shift and go to state 60
    DATA_REPEAT                    shift and go to state 90
    ASIGNATION                     shift and go to state 61
    EXPRESSION                     shift and go to state 62
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19

state 61

    (56) DATA_ALLOWED_IN_FOR -> ASIGNATION .

    ID              reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    NUMBER          reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FLOAT           reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    STRING          reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    PUTS            reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    GETS            reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    TRUE            reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FALSE           reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ALFT            reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LPAREN          reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    END             reduce using rule 56 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)


state 62

    (57) DATA_ALLOWED_IN_FOR -> EXPRESSION .

    ID              reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    NUMBER          reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FLOAT           reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    STRING          reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    PUTS            reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    GETS            reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    TRUE            reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FALSE           reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ALFT            reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LPAREN          reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    END             reduce using rule 57 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)


state 63

    (41) ARRAY -> ALFT DATA . ARGT
    (62) DATA -> DATA . COMMA DATA

    ARGT            shift and go to state 91
    COMMA           shift and go to state 92


state 64

    (58) DATA -> NUMBER .

    ARGT            reduce using rule 58 (DATA -> NUMBER .)
    COMMA           reduce using rule 58 (DATA -> NUMBER .)


state 65

    (59) DATA -> FLOAT .

    ARGT            reduce using rule 59 (DATA -> FLOAT .)
    COMMA           reduce using rule 59 (DATA -> FLOAT .)


state 66

    (60) DATA -> BOOLEAN .

    ARGT            reduce using rule 60 (DATA -> BOOLEAN .)
    COMMA           reduce using rule 60 (DATA -> BOOLEAN .)


state 67

    (61) DATA -> STRING .

    ARGT            reduce using rule 61 (DATA -> STRING .)
    COMMA           reduce using rule 61 (DATA -> STRING .)


state 68

    (65) BOOLEAN -> LOGIC_NOT . TRUE
    (66) BOOLEAN -> LOGIC_NOT . FALSE

    TRUE            shift and go to state 93
    FALSE           shift and go to state 94


state 69

    (27) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT . RPAREN
    (26) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (67) OPERATOR_MAT -> . PLUS
    (68) OPERATOR_MAT -> . MINUS
    (69) OPERATOR_MAT -> . TIMES
    (70) OPERATOR_MAT -> . DIVIDE
    (71) OPERATOR_MAT -> . EXPONENTIATION

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    EXPONENTIATION  shift and go to state 42

    OPERATOR_MAT                   shift and go to state 37

state 70

    (28) EXPRESSION_MAT -> DATANF .

    RPAREN          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    PLUS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 28 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 28 (EXPRESSION_MAT -> DATANF .)


state 71

    (29) DATANF -> NUMBER .

    RPAREN          reduce using rule 29 (DATANF -> NUMBER .)
    PLUS            reduce using rule 29 (DATANF -> NUMBER .)
    MINUS           reduce using rule 29 (DATANF -> NUMBER .)
    TIMES           reduce using rule 29 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 29 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 29 (DATANF -> NUMBER .)
    $end            reduce using rule 29 (DATANF -> NUMBER .)
    ID              reduce using rule 29 (DATANF -> NUMBER .)
    NUMBER          reduce using rule 29 (DATANF -> NUMBER .)
    FLOAT           reduce using rule 29 (DATANF -> NUMBER .)
    STRING          reduce using rule 29 (DATANF -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 29 (DATANF -> NUMBER .)
    LOGIC_NOT       reduce using rule 29 (DATANF -> NUMBER .)
    PUTS            reduce using rule 29 (DATANF -> NUMBER .)
    GETS            reduce using rule 29 (DATANF -> NUMBER .)
    TRUE            reduce using rule 29 (DATANF -> NUMBER .)
    FALSE           reduce using rule 29 (DATANF -> NUMBER .)
    ALFT            reduce using rule 29 (DATANF -> NUMBER .)
    LPAREN          reduce using rule 29 (DATANF -> NUMBER .)
    END             reduce using rule 29 (DATANF -> NUMBER .)
    FOR             reduce using rule 29 (DATANF -> NUMBER .)
    CLOSURECB       reduce using rule 29 (DATANF -> NUMBER .)


state 72

    (30) DATANF -> FLOAT .

    RPAREN          reduce using rule 30 (DATANF -> FLOAT .)
    PLUS            reduce using rule 30 (DATANF -> FLOAT .)
    MINUS           reduce using rule 30 (DATANF -> FLOAT .)
    TIMES           reduce using rule 30 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 30 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 30 (DATANF -> FLOAT .)
    $end            reduce using rule 30 (DATANF -> FLOAT .)
    ID              reduce using rule 30 (DATANF -> FLOAT .)
    NUMBER          reduce using rule 30 (DATANF -> FLOAT .)
    FLOAT           reduce using rule 30 (DATANF -> FLOAT .)
    STRING          reduce using rule 30 (DATANF -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 30 (DATANF -> FLOAT .)
    LOGIC_NOT       reduce using rule 30 (DATANF -> FLOAT .)
    PUTS            reduce using rule 30 (DATANF -> FLOAT .)
    GETS            reduce using rule 30 (DATANF -> FLOAT .)
    TRUE            reduce using rule 30 (DATANF -> FLOAT .)
    FALSE           reduce using rule 30 (DATANF -> FLOAT .)
    ALFT            reduce using rule 30 (DATANF -> FLOAT .)
    LPAREN          reduce using rule 30 (DATANF -> FLOAT .)
    END             reduce using rule 30 (DATANF -> FLOAT .)
    FOR             reduce using rule 30 (DATANF -> FLOAT .)
    CLOSURECB       reduce using rule 30 (DATANF -> FLOAT .)


state 73

    (52) STRUCTURE_IN_FOR -> FOR ID . IN ARRAY DO
    (53) STRUCTURE_IN_FOR -> FOR ID . IN ID DO

    IN              shift and go to state 96


state 74

    (18) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .

    $end            reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ID              reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    NUMBER          reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FLOAT           reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    STRING          reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LOGIC_NOT       reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    PUTS            reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    GETS            reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    TRUE            reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FALSE           reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ALFT            reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LPAREN          reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    END             reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FOR             reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    CLOSURECB       reduce using rule 18 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)


state 75

    (42) FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .

    $end            reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ID              reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    NUMBER          reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FLOAT           reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    STRING          reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LOGIC_NOT       reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    PUTS            reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    GETS            reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    TRUE            reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FALSE           reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ALFT            reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LPAREN          reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    END             reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FOR             reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    CLOSURECB       reduce using rule 42 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)


state 76

    (43) FUNTIONS_ALLOWED_ARRAY -> MIN .

    $end            reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ID              reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    NUMBER          reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FLOAT           reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    STRING          reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    OTHERSTRINGDECLARATION reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LOGIC_NOT       reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    PUTS            reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    GETS            reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    TRUE            reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FALSE           reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ALFT            reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LPAREN          reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    END             reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FOR             reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    CLOSURECB       reduce using rule 43 (FUNTIONS_ALLOWED_ARRAY -> MIN .)


state 77

    (44) FUNTIONS_ALLOWED_ARRAY -> FIRST .

    $end            reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ID              reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    NUMBER          reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FLOAT           reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    STRING          reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    OTHERSTRINGDECLARATION reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LOGIC_NOT       reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    PUTS            reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    GETS            reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    TRUE            reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FALSE           reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ALFT            reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LPAREN          reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    END             reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FOR             reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    CLOSURECB       reduce using rule 44 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)


state 78

    (45) FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .

    $end            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ID              reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    NUMBER          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FLOAT           reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    STRING          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LOGIC_NOT       reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    PUTS            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    GETS            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    TRUE            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FALSE           reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ALFT            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LPAREN          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    END             reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FOR             reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    CLOSURECB       reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)


state 79

    (46) MAP_ARRAY -> MAP . OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    OPENINGCB       shift and go to state 97


state 80

    (26) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .
    (26) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (67) OPERATOR_MAT -> . PLUS
    (68) OPERATOR_MAT -> . MINUS
    (69) OPERATOR_MAT -> . TIMES
    (70) OPERATOR_MAT -> . DIVIDE
    (71) OPERATOR_MAT -> . EXPONENTIATION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIATION resolved as shift
    $end            reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ID              reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    NUMBER          reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FLOAT           reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    STRING          reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PUTS            reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    GETS            reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    TRUE            reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FALSE           reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ALFT            reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LPAREN          reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    END             reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FOR             reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    RPAREN          reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    EXPONENTIATION  shift and go to state 42

  ! PLUS            [ reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! MINUS           [ reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! TIMES           [ reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! DIVIDE          [ reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! EXPONENTIATION  [ reduce using rule 26 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]

    OPERATOR_MAT                   shift and go to state 37

state 81

    (32) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .
    (32) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

  ! shift/reduce conflict for PLUS resolved as shift
    $end            reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ID              reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    STRING          reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PUTS            reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    GETS            reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    TRUE            reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FALSE           reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ALFT            reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    END             reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FOR             reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PLUS            shift and go to state 43

  ! PLUS            [ reduce using rule 32 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .) ]


state 82

    (33) EXPRESSION_CONCAT -> DATASTRING .

    PLUS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 33 (EXPRESSION_CONCAT -> DATASTRING .)


state 83

    (34) EXPRESSION_CONCAT -> ARRAY .

    PLUS            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    $end            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    ID              reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    NUMBER          reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    FLOAT           reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    STRING          reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    LOGIC_NOT       reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    PUTS            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    GETS            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    TRUE            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    FALSE           reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    ALFT            reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    LPAREN          reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    END             reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    FOR             reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)
    CLOSURECB       reduce using rule 34 (EXPRESSION_CONCAT -> ARRAY .)


state 84

    (35) DATASTRING -> STRING .

    PLUS            reduce using rule 35 (DATASTRING -> STRING .)
    $end            reduce using rule 35 (DATASTRING -> STRING .)
    ID              reduce using rule 35 (DATASTRING -> STRING .)
    NUMBER          reduce using rule 35 (DATASTRING -> STRING .)
    FLOAT           reduce using rule 35 (DATASTRING -> STRING .)
    STRING          reduce using rule 35 (DATASTRING -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 35 (DATASTRING -> STRING .)
    LOGIC_NOT       reduce using rule 35 (DATASTRING -> STRING .)
    PUTS            reduce using rule 35 (DATASTRING -> STRING .)
    GETS            reduce using rule 35 (DATASTRING -> STRING .)
    TRUE            reduce using rule 35 (DATASTRING -> STRING .)
    FALSE           reduce using rule 35 (DATASTRING -> STRING .)
    ALFT            reduce using rule 35 (DATASTRING -> STRING .)
    LPAREN          reduce using rule 35 (DATASTRING -> STRING .)
    END             reduce using rule 35 (DATASTRING -> STRING .)
    FOR             reduce using rule 35 (DATASTRING -> STRING .)
    CLOSURECB       reduce using rule 35 (DATASTRING -> STRING .)


state 85

    (36) DATASTRING -> OTHERSTRINGDECLARATION .

    PLUS            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 36 (DATASTRING -> OTHERSTRINGDECLARATION .)


state 86

    (4) ASIGNATION -> ID ASIGN EXPRESSION .

    $end            reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ID              reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    NUMBER          reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FLOAT           reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    STRING          reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LOGIC_NOT       reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    PUTS            reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    GETS            reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    TRUE            reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FALSE           reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ALFT            reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LPAREN          reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    END             reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FOR             reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)
    CLOSURECB       reduce using rule 4 (ASIGNATION -> ID ASIGN EXPRESSION .)


state 87

    (19) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .

    $end            reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ID              reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    NUMBER          reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FLOAT           reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    STRING          reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LOGIC_NOT       reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    PUTS            reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    GETS            reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    TRUE            reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FALSE           reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ALFT            reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LPAREN          reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    END             reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FOR             reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    CLOSURECB       reduce using rule 19 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)


state 88

    (25) EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .

    $end            reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ID              reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    NUMBER          reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FLOAT           reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    STRING          reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LOGIC_NOT       reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    PUTS            reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    GETS            reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    TRUE            reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FALSE           reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ALFT            reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LPAREN          reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    END             reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FOR             reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    CLOSURECB       reduce using rule 25 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)


state 89

    (51) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .

    $end            reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    NUMBER          reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FLOAT           reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    STRING          reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    PUTS            reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    GETS            reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ID              reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    TRUE            reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FALSE           reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ALFT            reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LPAREN          reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FOR             reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    CLOSURECB       reduce using rule 51 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)


state 90

    (55) DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .

    END             reduce using rule 55 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .)


state 91

    (41) ARRAY -> ALFT DATA ARGT .

    POINT           reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    $end            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    PLUS            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    ID              reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    NUMBER          reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    FLOAT           reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    STRING          reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    OTHERSTRINGDECLARATION reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    LOGIC_NOT       reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    PUTS            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    GETS            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    TRUE            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    FALSE           reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    ALFT            reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    LPAREN          reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    END             reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    FOR             reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    CLOSURECB       reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)
    DO              reduce using rule 41 (ARRAY -> ALFT DATA ARGT .)


state 92

    (62) DATA -> DATA COMMA . DATA
    (58) DATA -> . NUMBER
    (59) DATA -> . FLOAT
    (60) DATA -> . BOOLEAN
    (61) DATA -> . STRING
    (62) DATA -> . DATA COMMA DATA
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 67
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    LOGIC_NOT       shift and go to state 68

    DATA                           shift and go to state 98
    BOOLEAN                        shift and go to state 66

state 93

    (65) BOOLEAN -> LOGIC_NOT TRUE .

    ARGT            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    COMMA           reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    $end            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    ID              reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    NUMBER          reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    FLOAT           reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    STRING          reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    LOGIC_NOT       reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    PUTS            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    GETS            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    TRUE            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    FALSE           reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    ALFT            reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    LPAREN          reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    END             reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    FOR             reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)
    CLOSURECB       reduce using rule 65 (BOOLEAN -> LOGIC_NOT TRUE .)


state 94

    (66) BOOLEAN -> LOGIC_NOT FALSE .

    ARGT            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    COMMA           reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    $end            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    ID              reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    NUMBER          reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    FLOAT           reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    STRING          reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    LOGIC_NOT       reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    PUTS            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    GETS            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    TRUE            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    FALSE           reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    ALFT            reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    LPAREN          reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    END             reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    FOR             reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)
    CLOSURECB       reduce using rule 66 (BOOLEAN -> LOGIC_NOT FALSE .)


state 95

    (27) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .

    PLUS            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    MINUS           reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TIMES           reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    DIVIDE          reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    EXPONENTIATION  reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    $end            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ID              reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    NUMBER          reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FLOAT           reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    STRING          reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LOGIC_NOT       reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    PUTS            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    GETS            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TRUE            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FALSE           reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ALFT            reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LPAREN          reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    END             reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FOR             reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    CLOSURECB       reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    RPAREN          reduce using rule 27 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)


state 96

    (52) STRUCTURE_IN_FOR -> FOR ID IN . ARRAY DO
    (53) STRUCTURE_IN_FOR -> FOR ID IN . ID DO
    (41) ARRAY -> . ALFT DATA ARGT

    ID              shift and go to state 99
    ALFT            shift and go to state 23

    ARRAY                          shift and go to state 100

state 97

    (46) MAP_ARRAY -> MAP OPENINGCB . PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 101


state 98

    (62) DATA -> DATA COMMA DATA .
    (62) DATA -> DATA . COMMA DATA

  ! shift/reduce conflict for COMMA resolved as shift
    ARGT            reduce using rule 62 (DATA -> DATA COMMA DATA .)
    COMMA           shift and go to state 92

  ! COMMA           [ reduce using rule 62 (DATA -> DATA COMMA DATA .) ]


state 99

    (53) STRUCTURE_IN_FOR -> FOR ID IN ID . DO

    DO              shift and go to state 102


state 100

    (52) STRUCTURE_IN_FOR -> FOR ID IN ARRAY . DO

    DO              shift and go to state 103


state 101

    (46) MAP_ARRAY -> MAP OPENINGCB PIPE . ID PIPE DATA_REPEAT_MAP CLOSURECB

    ID              shift and go to state 104


state 102

    (53) STRUCTURE_IN_FOR -> FOR ID IN ID DO .

    ID              reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    NUMBER          reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FLOAT           reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    STRING          reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    OTHERSTRINGDECLARATION reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LOGIC_NOT       reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    PUTS            reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    GETS            reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    TRUE            reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FALSE           reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    ALFT            reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LPAREN          reduce using rule 53 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)


state 103

    (52) STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .

    ID              reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    NUMBER          reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FLOAT           reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    STRING          reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    OTHERSTRINGDECLARATION reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LOGIC_NOT       reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    PUTS            reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    GETS            reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    TRUE            reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FALSE           reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    ALFT            reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LPAREN          reduce using rule 52 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)


state 104

    (46) MAP_ARRAY -> MAP OPENINGCB PIPE ID . PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 105


state 105

    (46) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE . DATA_REPEAT_MAP CLOSURECB
    (47) DATA_REPEAT_MAP -> . STATEMENT
    (48) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (4) ASIGNATION -> . ID ASIGN EXPRESSION
    (51) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID
    (52) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (53) STRUCTURE_IN_FOR -> . FOR ID IN ID DO

    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    ID              shift and go to state 16
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    FOR             shift and go to state 25

    DATA_REPEAT_MAP                shift and go to state 106
    STATEMENT                      shift and go to state 107
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19
    STRUCTURE_IN_FOR               shift and go to state 20

state 106

    (46) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP . CLOSURECB

    CLOSURECB       shift and go to state 108


state 107

    (47) DATA_REPEAT_MAP -> STATEMENT .
    (48) DATA_REPEAT_MAP -> STATEMENT . DATA_REPEAT_MAP
    (47) DATA_REPEAT_MAP -> . STATEMENT
    (48) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . FLOAT
    (7) EXPRESSION -> . BOOLEAN
    (8) EXPRESSION -> . STRING
    (9) EXPRESSION -> . OTHERSTRINGDECLARATION
    (10) EXPRESSION -> . ARRAY
    (11) EXPRESSION -> . FUNTIONS_ARRAY
    (12) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (13) EXPRESSION -> . EXPRESSION_MAT
    (14) EXPRESSION -> . EXPRESSION_CONCAT
    (15) EXPRESSION -> . PUTS EXPRESSION
    (16) EXPRESSION -> . PUTS ID
    (17) EXPRESSION -> . GETS EXPRESSION
    (18) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (19) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (25) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (4) ASIGNATION -> . ID ASIGN EXPRESSION
    (51) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (63) BOOLEAN -> . TRUE
    (64) BOOLEAN -> . FALSE
    (65) BOOLEAN -> . LOGIC_NOT TRUE
    (66) BOOLEAN -> . LOGIC_NOT FALSE
    (41) ARRAY -> . ALFT DATA ARGT
    (42) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (26) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (27) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . DATANF
    (32) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (33) EXPRESSION_CONCAT -> . DATASTRING
    (34) EXPRESSION_CONCAT -> . ARRAY
    (35) DATASTRING -> . STRING
    (36) DATASTRING -> . OTHERSTRINGDECLARATION
    (29) DATANF -> . NUMBER
    (30) DATANF -> . FLOAT
    (31) DATANF -> . ID
    (52) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (53) STRUCTURE_IN_FOR -> . FOR ID IN ID DO

    CLOSURECB       reduce using rule 47 (DATA_REPEAT_MAP -> STATEMENT .)
    NUMBER          shift and go to state 5
    FLOAT           shift and go to state 6
    STRING          shift and go to state 8
    OTHERSTRINGDECLARATION shift and go to state 9
    LOGIC_NOT       shift and go to state 12
    PUTS            shift and go to state 15
    GETS            shift and go to state 17
    ID              shift and go to state 16
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    ALFT            shift and go to state 23
    LPAREN          shift and go to state 24
    FOR             shift and go to state 25

    STATEMENT                      shift and go to state 107
    DATA_REPEAT_MAP                shift and go to state 109
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    BOOLEAN                        shift and go to state 7
    ARRAY                          shift and go to state 10
    FUNTIONS_ARRAY                 shift and go to state 11
    EXPRESSION_MAT                 shift and go to state 13
    EXPRESSION_CONCAT              shift and go to state 14
    DATASTRING                     shift and go to state 18
    DATANF                         shift and go to state 19
    STRUCTURE_IN_FOR               shift and go to state 20

state 108

    (46) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .

    $end            reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ID              reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    NUMBER          reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FLOAT           reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    STRING          reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    OTHERSTRINGDECLARATION reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LOGIC_NOT       reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    PUTS            reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    GETS            reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    TRUE            reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FALSE           reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ALFT            reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LPAREN          reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    END             reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FOR             reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    CLOSURECB       reduce using rule 46 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)


state 109

    (48) DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .

    CLOSURECB       reduce using rule 48 (DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIATION in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 98 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (EXPRESSION -> NUMBER)
WARNING: rejected rule (DATANF -> NUMBER) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (EXPRESSION -> FLOAT)
WARNING: rejected rule (DATANF -> FLOAT) in state 6
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> STRING)
WARNING: rejected rule (DATASTRING -> STRING) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (EXPRESSION -> OTHERSTRINGDECLARATION)
WARNING: rejected rule (DATASTRING -> OTHERSTRINGDECLARATION) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (EXPRESSION -> ARRAY)
WARNING: rejected rule (EXPRESSION_CONCAT -> ARRAY) in state 10
WARNING: reduce/reduce conflict in state 34 resolved using rule (BOOLEAN -> TRUE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT TRUE) in state 34
WARNING: reduce/reduce conflict in state 35 resolved using rule (BOOLEAN -> FALSE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT FALSE) in state 35
WARNING: reduce/reduce conflict in state 45 resolved using rule (EXPRESSION -> PUTS ID)
WARNING: rejected rule (DATANF -> ID) in state 45
