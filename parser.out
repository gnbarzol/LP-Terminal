Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    HASHROCKET
    HAS_VALUE
    MERGE
    OR
    SIZE
    WHILE

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     STATEMENT -> ASIGNATION
Rule 3     STATEMENT -> STRUCTURE_FOR
Rule 4     STATEMENT -> STRUCTURE_IF
Rule 5     ASIGNATION -> ID ASIGN EXPRESSION
Rule 6     EXPRESSION -> NUMBER
Rule 7     EXPRESSION -> FLOAT
Rule 8     EXPRESSION -> BOOLEAN
Rule 9     EXPRESSION -> STRING
Rule 10    EXPRESSION -> OTHERSTRINGDECLARATION
Rule 11    EXPRESSION -> ARRAY
Rule 12    EXPRESSION -> FUNTIONS_ARRAY
Rule 13    EXPRESSION -> LOGIC_NOT EXPRESSION
Rule 14    EXPRESSION -> EXPRESSION_MAT
Rule 15    EXPRESSION -> EXPRESSION_CONCAT
Rule 16    EXPRESSION -> PUTS EXPRESSION
Rule 17    EXPRESSION -> PUTS ID
Rule 18    EXPRESSION -> GETS EXPRESSION
Rule 19    EXPRESSION -> FUNCTIONS_STRING
Rule 20    EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
Rule 21    EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
Rule 22    OPERATOR_COMP_BOOLEAN -> EQUAL
Rule 23    OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT
Rule 24    OPERATOR_COMP_BOOLEAN -> LOGIC_AND
Rule 25    OPERATOR_COMP_BOOLEAN -> LOGIC_OR
Rule 26    OPERATOR_COMP_BOOLEAN -> PIPE
Rule 27    EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF
Rule 28    EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
Rule 29    EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN
Rule 30    EXPRESSION_MAT -> DATANF
Rule 31    DATANF -> NUMBER
Rule 32    DATANF -> FLOAT
Rule 33    DATANF -> ID
Rule 34    EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
Rule 35    EXPRESSION_CONCAT -> DATASTRING
Rule 36    EXPRESSION_CONCAT -> ARRAY
Rule 37    DATASTRING -> STRING
Rule 38    DATASTRING -> OTHERSTRINGDECLARATION
Rule 39    FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING
Rule 40    FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING
Rule 41    FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION
Rule 42    FUNCTIONS_ALLOWED_STRING -> UPCASE
Rule 43    ARRAY -> ALFT DATA ARGT
Rule 44    FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY
Rule 45    FUNTIONS_ALLOWED_ARRAY -> MIN
Rule 46    FUNTIONS_ALLOWED_ARRAY -> FIRST
Rule 47    FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY
Rule 48    MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB
Rule 49    DATA_REPEAT_MAP -> STATEMENT
Rule 50    DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP
Rule 51    DATA_ALLOWED_IN_MAP -> ASIGNATION
Rule 52    DATA_ALLOWED_IN_MAP -> EXPRESSION
Rule 53    STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END
Rule 54    STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO
Rule 55    STRUCTURE_IN_FOR -> FOR ID IN ID DO
Rule 56    DATA_REPEAT -> DATA_ALLOWED_IN_FOR
Rule 57    DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT
Rule 58    DATA_ALLOWED_IN_FOR -> ASIGNATION
Rule 59    DATA_ALLOWED_IN_FOR -> EXPRESSION
Rule 60    STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END
Rule 61    STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN
Rule 62    DATA_REPEAT -> DATA_ALLOWED_IN_IF
Rule 63    DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT
Rule 64    DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
Rule 65    DATA_ALLOWED_IN_IF -> ASIGNATION
Rule 66    DATA_ALLOWED_IN_IF -> EXPRESSION
Rule 67    DATA -> NUMBER
Rule 68    DATA -> FLOAT
Rule 69    DATA -> BOOLEAN
Rule 70    DATA -> STRING
Rule 71    DATA -> DATA COMMA DATA
Rule 72    BOOLEAN -> TRUE
Rule 73    BOOLEAN -> FALSE
Rule 74    BOOLEAN -> LOGIC_NOT TRUE
Rule 75    BOOLEAN -> LOGIC_NOT FALSE
Rule 76    OPERATOR_MAT -> PLUS
Rule 77    OPERATOR_MAT -> MINUS
Rule 78    OPERATOR_MAT -> TIMES
Rule 79    OPERATOR_MAT -> DIVIDE
Rule 80    OPERATOR_MAT -> EXPONENTIATION
Rule 81    OPERATOR_COMP_MAT -> EQUAL
Rule 82    OPERATOR_COMP_MAT -> EQUAL_STRICT
Rule 83    OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL
Rule 84    OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL
Rule 85    OPERATOR_COMP_MAT -> MINOR
Rule 86    OPERATOR_COMP_MAT -> GREATER
Rule 87    OPERATOR_COMP_MAT -> LOGIC_AND
Rule 88    OPERATOR_COMP_MAT -> LOGIC_OR
Rule 89    OPERATOR_COMP_MAT -> PIPE

Terminals, with rules where they appear

ALFT                 : 43
AND                  : 
ARGT                 : 43
ASIGN                : 5
CLOSURECB            : 48
COMMA                : 71
DIVIDE               : 79
DO                   : 54 55
ELSE                 : 64
EMPTY                : 41
END                  : 53 60
EQUAL                : 22 81
EQUAL_STRICT         : 23 82
EXPONENTIATION       : 80
FALSE                : 73 75
FIRST                : 46
FLOAT                : 7 32 68
FOR                  : 54 55
GETS                 : 18
GREATER              : 86
GREATER_THAN_OR_EQUAL : 83
HASHROCKET           : 
HAS_VALUE            : 
ID                   : 5 17 33 48 54 55 55
IF                   : 61
IN                   : 54 55
INCLUDE              : 40
LOGIC_AND            : 24 87
LOGIC_NOT            : 13 74 75
LOGIC_OR             : 25 88
LPAREN               : 29 61
MAP                  : 48
MERGE                : 
MIN                  : 45
MINOR                : 85
MINOR_THAN_OR_EQUAL  : 84
MINUS                : 77
NUMBER               : 6 31 67
OPENINGCB            : 48
OR                   : 
OTHERSTRINGDECLARATION : 10 38
PIPE                 : 26 48 48 89
PLUS                 : 34 76
POINT                : 39 44
PUTS                 : 16 17
QUESTION             : 40 41
RPAREN               : 29 61
SIZE                 : 
STRING               : 9 37 70
TIMES                : 78
TRUE                 : 72 74
UPCASE               : 42
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ARRAY                : 11 36 44 54
ASIGNATION           : 2 51 58 65
BOOLEAN              : 8 20 20 61 69
DATA                 : 43 71 71
DATANF               : 27 27 30
DATASTRING           : 21 21 35 39 40
DATA_ALLOWED_IN_FOR  : 56 57
DATA_ALLOWED_IN_IF   : 62 63 64 64
DATA_ALLOWED_IN_MAP  : 
DATA_REPEAT          : 53 57 60 63
DATA_REPEAT_MAP      : 48 50
EXPRESSION           : 1 5 13 16 18 52 59 66
EXPRESSION_CONCAT    : 15 34 34
EXPRESSION_MAT       : 14 28 28 29
FUNCTIONS_ALLOWED_STRING : 39
FUNCTIONS_STRING     : 19
FUNTIONS_ALLOWED_ARRAY : 44
FUNTIONS_ARRAY       : 12
MAP_ARRAY            : 47
OPERATOR_COMP_BOOLEAN : 20 21
OPERATOR_COMP_MAT    : 27
OPERATOR_MAT         : 28
STATEMENT            : 49 50 0
STRUCTURE_FOR        : 3
STRUCTURE_IF         : 4
STRUCTURE_IN_FOR     : 53
STRUCTURE_IN_IF      : 60

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (53) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (60) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID
    (54) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (55) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (61) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN

    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    ID              shift and go to state 17
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21
    STRUCTURE_IN_FOR               shift and go to state 22
    STRUCTURE_IN_IF                shift and go to state 23

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    NUMBER          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FLOAT           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    STRING          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 1 (STATEMENT -> EXPRESSION .)
    PUTS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    GETS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ID              reduce using rule 1 (STATEMENT -> EXPRESSION .)
    TRUE            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FALSE           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ALFT            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LPAREN          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FOR             reduce using rule 1 (STATEMENT -> EXPRESSION .)
    IF              reduce using rule 1 (STATEMENT -> EXPRESSION .)
    CLOSURECB       reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (2) STATEMENT -> ASIGNATION .

    $end            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    NUMBER          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FLOAT           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    STRING          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 2 (STATEMENT -> ASIGNATION .)
    PUTS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    GETS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ID              reduce using rule 2 (STATEMENT -> ASIGNATION .)
    TRUE            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FALSE           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ALFT            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LPAREN          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FOR             reduce using rule 2 (STATEMENT -> ASIGNATION .)
    IF              reduce using rule 2 (STATEMENT -> ASIGNATION .)
    CLOSURECB       reduce using rule 2 (STATEMENT -> ASIGNATION .)


state 4

    (3) STATEMENT -> STRUCTURE_FOR .

    $end            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    NUMBER          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FLOAT           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    STRING          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    OTHERSTRINGDECLARATION reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LOGIC_NOT       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    PUTS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    GETS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ID              reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    TRUE            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FALSE           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ALFT            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LPAREN          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FOR             reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    IF              reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    CLOSURECB       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)


state 5

    (4) STATEMENT -> STRUCTURE_IF .

    $end            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    NUMBER          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FLOAT           reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    STRING          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    OTHERSTRINGDECLARATION reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    LOGIC_NOT       reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    PUTS            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    GETS            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    ID              reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    TRUE            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FALSE           reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    ALFT            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    LPAREN          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FOR             reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    IF              reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    CLOSURECB       reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)


state 6

    (6) EXPRESSION -> NUMBER .
    (31) DATANF -> NUMBER .

  ! reduce/reduce conflict for $end resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ID resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for GETS resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for TRUE resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FALSE resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ALFT resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 6 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 6 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 6 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 6 (EXPRESSION -> NUMBER .)
    NUMBER          reduce using rule 6 (EXPRESSION -> NUMBER .)
    FLOAT           reduce using rule 6 (EXPRESSION -> NUMBER .)
    STRING          reduce using rule 6 (EXPRESSION -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 6 (EXPRESSION -> NUMBER .)
    LOGIC_NOT       reduce using rule 6 (EXPRESSION -> NUMBER .)
    PUTS            reduce using rule 6 (EXPRESSION -> NUMBER .)
    GETS            reduce using rule 6 (EXPRESSION -> NUMBER .)
    TRUE            reduce using rule 6 (EXPRESSION -> NUMBER .)
    FALSE           reduce using rule 6 (EXPRESSION -> NUMBER .)
    ALFT            reduce using rule 6 (EXPRESSION -> NUMBER .)
    LPAREN          reduce using rule 6 (EXPRESSION -> NUMBER .)
    END             reduce using rule 6 (EXPRESSION -> NUMBER .)
    ELSE            reduce using rule 6 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 6 (EXPRESSION -> NUMBER .)
    IF              reduce using rule 6 (EXPRESSION -> NUMBER .)
    CLOSURECB       reduce using rule 6 (EXPRESSION -> NUMBER .)
    EQUAL           reduce using rule 31 (DATANF -> NUMBER .)
    EQUAL_STRICT    reduce using rule 31 (DATANF -> NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (DATANF -> NUMBER .)
    MINOR_THAN_OR_EQUAL reduce using rule 31 (DATANF -> NUMBER .)
    MINOR           reduce using rule 31 (DATANF -> NUMBER .)
    GREATER         reduce using rule 31 (DATANF -> NUMBER .)
    LOGIC_AND       reduce using rule 31 (DATANF -> NUMBER .)
    LOGIC_OR        reduce using rule 31 (DATANF -> NUMBER .)
    PIPE            reduce using rule 31 (DATANF -> NUMBER .)
    PLUS            reduce using rule 31 (DATANF -> NUMBER .)
    MINUS           reduce using rule 31 (DATANF -> NUMBER .)
    TIMES           reduce using rule 31 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 31 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 31 (DATANF -> NUMBER .)

  ! $end            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! ID              [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! STRING          [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! LOGIC_NOT       [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! PUTS            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! GETS            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! TRUE            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! FALSE           [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! ALFT            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! END             [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! ELSE            [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! FOR             [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! IF              [ reduce using rule 31 (DATANF -> NUMBER .) ]
  ! CLOSURECB       [ reduce using rule 31 (DATANF -> NUMBER .) ]


state 7

    (7) EXPRESSION -> FLOAT .
    (32) DATANF -> FLOAT .

  ! reduce/reduce conflict for $end resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ID resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for GETS resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ALFT resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 7 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 7 (EXPRESSION -> FLOAT .)
    $end            reduce using rule 7 (EXPRESSION -> FLOAT .)
    ID              reduce using rule 7 (EXPRESSION -> FLOAT .)
    NUMBER          reduce using rule 7 (EXPRESSION -> FLOAT .)
    FLOAT           reduce using rule 7 (EXPRESSION -> FLOAT .)
    STRING          reduce using rule 7 (EXPRESSION -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 7 (EXPRESSION -> FLOAT .)
    LOGIC_NOT       reduce using rule 7 (EXPRESSION -> FLOAT .)
    PUTS            reduce using rule 7 (EXPRESSION -> FLOAT .)
    GETS            reduce using rule 7 (EXPRESSION -> FLOAT .)
    TRUE            reduce using rule 7 (EXPRESSION -> FLOAT .)
    FALSE           reduce using rule 7 (EXPRESSION -> FLOAT .)
    ALFT            reduce using rule 7 (EXPRESSION -> FLOAT .)
    LPAREN          reduce using rule 7 (EXPRESSION -> FLOAT .)
    END             reduce using rule 7 (EXPRESSION -> FLOAT .)
    ELSE            reduce using rule 7 (EXPRESSION -> FLOAT .)
    FOR             reduce using rule 7 (EXPRESSION -> FLOAT .)
    IF              reduce using rule 7 (EXPRESSION -> FLOAT .)
    CLOSURECB       reduce using rule 7 (EXPRESSION -> FLOAT .)
    EQUAL           reduce using rule 32 (DATANF -> FLOAT .)
    EQUAL_STRICT    reduce using rule 32 (DATANF -> FLOAT .)
    GREATER_THAN_OR_EQUAL reduce using rule 32 (DATANF -> FLOAT .)
    MINOR_THAN_OR_EQUAL reduce using rule 32 (DATANF -> FLOAT .)
    MINOR           reduce using rule 32 (DATANF -> FLOAT .)
    GREATER         reduce using rule 32 (DATANF -> FLOAT .)
    LOGIC_AND       reduce using rule 32 (DATANF -> FLOAT .)
    LOGIC_OR        reduce using rule 32 (DATANF -> FLOAT .)
    PIPE            reduce using rule 32 (DATANF -> FLOAT .)
    PLUS            reduce using rule 32 (DATANF -> FLOAT .)
    MINUS           reduce using rule 32 (DATANF -> FLOAT .)
    TIMES           reduce using rule 32 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 32 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 32 (DATANF -> FLOAT .)

  ! $end            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! ID              [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! NUMBER          [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! STRING          [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! LOGIC_NOT       [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! PUTS            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! GETS            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! TRUE            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! FALSE           [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! ALFT            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! LPAREN          [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! END             [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! ELSE            [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! FOR             [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! IF              [ reduce using rule 32 (DATANF -> FLOAT .) ]
  ! CLOSURECB       [ reduce using rule 32 (DATANF -> FLOAT .) ]


state 8

    (8) EXPRESSION -> BOOLEAN .
    (20) EXPRESSION -> BOOLEAN . OPERATOR_COMP_BOOLEAN BOOLEAN
    (22) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (23) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (24) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (25) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (26) OPERATOR_COMP_BOOLEAN -> . PIPE

    $end            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    ID              reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    NUMBER          reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    FLOAT           reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    STRING          reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    LOGIC_NOT       reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    PUTS            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    GETS            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    TRUE            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    FALSE           reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    ALFT            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    LPAREN          reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    END             reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    ELSE            reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    FOR             reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    IF              reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    CLOSURECB       reduce using rule 8 (EXPRESSION -> BOOLEAN .)
    EQUAL           shift and go to state 31
    EQUAL_STRICT    shift and go to state 32
    LOGIC_AND       shift and go to state 33
    LOGIC_OR        shift and go to state 34
    PIPE            shift and go to state 35

    OPERATOR_COMP_BOOLEAN          shift and go to state 30

state 9

    (9) EXPRESSION -> STRING .
    (37) DATASTRING -> STRING .

  ! reduce/reduce conflict for $end resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ID resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for PUTS resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for GETS resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ALFT resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for END resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 9 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 9 (EXPRESSION -> STRING .)
    $end            reduce using rule 9 (EXPRESSION -> STRING .)
    ID              reduce using rule 9 (EXPRESSION -> STRING .)
    NUMBER          reduce using rule 9 (EXPRESSION -> STRING .)
    FLOAT           reduce using rule 9 (EXPRESSION -> STRING .)
    STRING          reduce using rule 9 (EXPRESSION -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 9 (EXPRESSION -> STRING .)
    LOGIC_NOT       reduce using rule 9 (EXPRESSION -> STRING .)
    PUTS            reduce using rule 9 (EXPRESSION -> STRING .)
    GETS            reduce using rule 9 (EXPRESSION -> STRING .)
    TRUE            reduce using rule 9 (EXPRESSION -> STRING .)
    FALSE           reduce using rule 9 (EXPRESSION -> STRING .)
    ALFT            reduce using rule 9 (EXPRESSION -> STRING .)
    LPAREN          reduce using rule 9 (EXPRESSION -> STRING .)
    END             reduce using rule 9 (EXPRESSION -> STRING .)
    ELSE            reduce using rule 9 (EXPRESSION -> STRING .)
    FOR             reduce using rule 9 (EXPRESSION -> STRING .)
    IF              reduce using rule 9 (EXPRESSION -> STRING .)
    CLOSURECB       reduce using rule 9 (EXPRESSION -> STRING .)
    POINT           reduce using rule 37 (DATASTRING -> STRING .)
    EQUAL           reduce using rule 37 (DATASTRING -> STRING .)
    EQUAL_STRICT    reduce using rule 37 (DATASTRING -> STRING .)
    LOGIC_AND       reduce using rule 37 (DATASTRING -> STRING .)
    LOGIC_OR        reduce using rule 37 (DATASTRING -> STRING .)
    PIPE            reduce using rule 37 (DATASTRING -> STRING .)
    PLUS            reduce using rule 37 (DATASTRING -> STRING .)

  ! $end            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! ID              [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! NUMBER          [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! FLOAT           [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! STRING          [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! LOGIC_NOT       [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! PUTS            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! GETS            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! TRUE            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! FALSE           [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! ALFT            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! LPAREN          [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! END             [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! ELSE            [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! FOR             [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! IF              [ reduce using rule 37 (DATASTRING -> STRING .) ]
  ! CLOSURECB       [ reduce using rule 37 (DATASTRING -> STRING .) ]


state 10

    (10) EXPRESSION -> OTHERSTRINGDECLARATION .
    (38) DATASTRING -> OTHERSTRINGDECLARATION .

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ID resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for GETS resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for END resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ELSE resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for IF resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ELSE            reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    IF              reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 10 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    POINT           reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    EQUAL           reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    EQUAL_STRICT    reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_AND       reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_OR        reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PIPE            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PLUS            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)

  ! $end            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ID              [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! NUMBER          [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FLOAT           [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! STRING          [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LOGIC_NOT       [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! PUTS            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! GETS            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! TRUE            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FALSE           [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ALFT            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LPAREN          [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! END             [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ELSE            [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FOR             [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! IF              [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! CLOSURECB       [ reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .) ]


state 11

    (11) EXPRESSION -> ARRAY .
    (44) FUNTIONS_ARRAY -> ARRAY . POINT FUNTIONS_ALLOWED_ARRAY
    (36) EXPRESSION_CONCAT -> ARRAY .

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ID resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for PUTS resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for GETS resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ALFT resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for END resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for IF resolved using rule 11 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 11 (EXPRESSION -> ARRAY .)
    $end            reduce using rule 11 (EXPRESSION -> ARRAY .)
    ID              reduce using rule 11 (EXPRESSION -> ARRAY .)
    NUMBER          reduce using rule 11 (EXPRESSION -> ARRAY .)
    FLOAT           reduce using rule 11 (EXPRESSION -> ARRAY .)
    STRING          reduce using rule 11 (EXPRESSION -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 11 (EXPRESSION -> ARRAY .)
    LOGIC_NOT       reduce using rule 11 (EXPRESSION -> ARRAY .)
    PUTS            reduce using rule 11 (EXPRESSION -> ARRAY .)
    GETS            reduce using rule 11 (EXPRESSION -> ARRAY .)
    TRUE            reduce using rule 11 (EXPRESSION -> ARRAY .)
    FALSE           reduce using rule 11 (EXPRESSION -> ARRAY .)
    ALFT            reduce using rule 11 (EXPRESSION -> ARRAY .)
    LPAREN          reduce using rule 11 (EXPRESSION -> ARRAY .)
    END             reduce using rule 11 (EXPRESSION -> ARRAY .)
    ELSE            reduce using rule 11 (EXPRESSION -> ARRAY .)
    FOR             reduce using rule 11 (EXPRESSION -> ARRAY .)
    IF              reduce using rule 11 (EXPRESSION -> ARRAY .)
    CLOSURECB       reduce using rule 11 (EXPRESSION -> ARRAY .)
    POINT           shift and go to state 36
    PLUS            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)

  ! $end            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ID              [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! NUMBER          [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FLOAT           [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! STRING          [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LOGIC_NOT       [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! PUTS            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! GETS            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! TRUE            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FALSE           [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ALFT            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LPAREN          [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! END             [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ELSE            [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FOR             [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! IF              [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! CLOSURECB       [ reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .) ]


state 12

    (12) EXPRESSION -> FUNTIONS_ARRAY .

    $end            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    ID              reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    NUMBER          reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    FLOAT           reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    STRING          reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    LOGIC_NOT       reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    PUTS            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    GETS            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    TRUE            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    FALSE           reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    ALFT            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    LPAREN          reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    END             reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    ELSE            reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    FOR             reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    IF              reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)
    CLOSURECB       reduce using rule 12 (EXPRESSION -> FUNTIONS_ARRAY .)


state 13

    (13) EXPRESSION -> LOGIC_NOT . EXPRESSION
    (74) BOOLEAN -> LOGIC_NOT . TRUE
    (75) BOOLEAN -> LOGIC_NOT . FALSE
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    ID              shift and go to state 40

    EXPRESSION                     shift and go to state 37
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 14

    (14) EXPRESSION -> EXPRESSION_MAT .
    (28) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (76) OPERATOR_MAT -> . PLUS
    (77) OPERATOR_MAT -> . MINUS
    (78) OPERATOR_MAT -> . TIMES
    (79) OPERATOR_MAT -> . DIVIDE
    (80) OPERATOR_MAT -> . EXPONENTIATION

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    ID              reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    NUMBER          reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    FLOAT           reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    STRING          reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    PUTS            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    GETS            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    TRUE            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    FALSE           reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    ALFT            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    LPAREN          reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    END             reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    ELSE            reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    FOR             reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    IF              reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 14 (EXPRESSION -> EXPRESSION_MAT .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46

    OPERATOR_MAT                   shift and go to state 41

state 15

    (15) EXPRESSION -> EXPRESSION_CONCAT .
    (34) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

    $end            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    ID              reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    STRING          reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    PUTS            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    GETS            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    TRUE            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    FALSE           reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    ALFT            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    END             reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    ELSE            reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    FOR             reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    IF              reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 15 (EXPRESSION -> EXPRESSION_CONCAT .)
    PLUS            shift and go to state 47


state 16

    (16) EXPRESSION -> PUTS . EXPRESSION
    (17) EXPRESSION -> PUTS . ID
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    ID              shift and go to state 49
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    EXPRESSION                     shift and go to state 48
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 17

    (5) ASIGNATION -> ID . ASIGN EXPRESSION
    (33) DATANF -> ID .

    ASIGN           shift and go to state 50
    EQUAL           reduce using rule 33 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 33 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR           reduce using rule 33 (DATANF -> ID .)
    GREATER         reduce using rule 33 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 33 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 33 (DATANF -> ID .)
    PIPE            reduce using rule 33 (DATANF -> ID .)
    PLUS            reduce using rule 33 (DATANF -> ID .)
    MINUS           reduce using rule 33 (DATANF -> ID .)
    TIMES           reduce using rule 33 (DATANF -> ID .)
    DIVIDE          reduce using rule 33 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 33 (DATANF -> ID .)
    $end            reduce using rule 33 (DATANF -> ID .)
    ID              reduce using rule 33 (DATANF -> ID .)
    NUMBER          reduce using rule 33 (DATANF -> ID .)
    FLOAT           reduce using rule 33 (DATANF -> ID .)
    STRING          reduce using rule 33 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 33 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 33 (DATANF -> ID .)
    PUTS            reduce using rule 33 (DATANF -> ID .)
    GETS            reduce using rule 33 (DATANF -> ID .)
    TRUE            reduce using rule 33 (DATANF -> ID .)
    FALSE           reduce using rule 33 (DATANF -> ID .)
    ALFT            reduce using rule 33 (DATANF -> ID .)
    LPAREN          reduce using rule 33 (DATANF -> ID .)
    END             reduce using rule 33 (DATANF -> ID .)
    ELSE            reduce using rule 33 (DATANF -> ID .)
    FOR             reduce using rule 33 (DATANF -> ID .)
    IF              reduce using rule 33 (DATANF -> ID .)
    CLOSURECB       reduce using rule 33 (DATANF -> ID .)


state 18

    (18) EXPRESSION -> GETS . EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    ID              shift and go to state 40

    EXPRESSION                     shift and go to state 51
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 19

    (19) EXPRESSION -> FUNCTIONS_STRING .

    $end            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    ID              reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    NUMBER          reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    FLOAT           reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    STRING          reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    OTHERSTRINGDECLARATION reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    LOGIC_NOT       reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    PUTS            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    GETS            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    TRUE            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    FALSE           reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    ALFT            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    LPAREN          reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    END             reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    ELSE            reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    FOR             reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    IF              reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)
    CLOSURECB       reduce using rule 19 (EXPRESSION -> FUNCTIONS_STRING .)


state 20

    (21) EXPRESSION -> DATASTRING . OPERATOR_COMP_BOOLEAN DATASTRING
    (35) EXPRESSION_CONCAT -> DATASTRING .
    (39) FUNCTIONS_STRING -> DATASTRING . POINT FUNCTIONS_ALLOWED_STRING
    (22) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (23) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (24) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (25) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (26) OPERATOR_COMP_BOOLEAN -> . PIPE

    PLUS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ELSE            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    IF              reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    POINT           shift and go to state 53
    EQUAL           shift and go to state 31
    EQUAL_STRICT    shift and go to state 32
    LOGIC_AND       shift and go to state 33
    LOGIC_OR        shift and go to state 34
    PIPE            shift and go to state 35

    OPERATOR_COMP_BOOLEAN          shift and go to state 52

state 21

    (27) EXPRESSION -> DATANF . OPERATOR_COMP_MAT DATANF
    (30) EXPRESSION_MAT -> DATANF .
    (81) OPERATOR_COMP_MAT -> . EQUAL
    (82) OPERATOR_COMP_MAT -> . EQUAL_STRICT
    (83) OPERATOR_COMP_MAT -> . GREATER_THAN_OR_EQUAL
    (84) OPERATOR_COMP_MAT -> . MINOR_THAN_OR_EQUAL
    (85) OPERATOR_COMP_MAT -> . MINOR
    (86) OPERATOR_COMP_MAT -> . GREATER
    (87) OPERATOR_COMP_MAT -> . LOGIC_AND
    (88) OPERATOR_COMP_MAT -> . LOGIC_OR
    (89) OPERATOR_COMP_MAT -> . PIPE

    PLUS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ELSE            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    IF              reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    EQUAL           shift and go to state 55
    EQUAL_STRICT    shift and go to state 56
    GREATER_THAN_OR_EQUAL shift and go to state 57
    MINOR_THAN_OR_EQUAL shift and go to state 58
    MINOR           shift and go to state 59
    GREATER         shift and go to state 60
    LOGIC_AND       shift and go to state 61
    LOGIC_OR        shift and go to state 62
    PIPE            shift and go to state 63

    OPERATOR_COMP_MAT              shift and go to state 54

state 22

    (53) STRUCTURE_FOR -> STRUCTURE_IN_FOR . DATA_REPEAT END
    (56) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (57) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (62) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (63) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (64) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (58) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (59) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (65) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (66) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    ID              shift and go to state 17
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    DATA_REPEAT                    shift and go to state 64
    DATA_ALLOWED_IN_FOR            shift and go to state 65
    DATA_ALLOWED_IN_IF             shift and go to state 66
    ASIGNATION                     shift and go to state 67
    EXPRESSION                     shift and go to state 68
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 23

    (60) STRUCTURE_IF -> STRUCTURE_IN_IF . DATA_REPEAT END
    (56) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (57) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (62) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (63) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (64) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (58) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (59) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (65) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (66) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    ID              shift and go to state 17
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    DATA_REPEAT                    shift and go to state 69
    DATA_ALLOWED_IN_FOR            shift and go to state 65
    DATA_ALLOWED_IN_IF             shift and go to state 66
    ASIGNATION                     shift and go to state 67
    EXPRESSION                     shift and go to state 68
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 24

    (72) BOOLEAN -> TRUE .

    EQUAL           reduce using rule 72 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 72 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 72 (BOOLEAN -> TRUE .)
    $end            reduce using rule 72 (BOOLEAN -> TRUE .)
    ID              reduce using rule 72 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 72 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 72 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 72 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 72 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 72 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 72 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 72 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 72 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 72 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 72 (BOOLEAN -> TRUE .)
    END             reduce using rule 72 (BOOLEAN -> TRUE .)
    ELSE            reduce using rule 72 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 72 (BOOLEAN -> TRUE .)
    IF              reduce using rule 72 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 72 (BOOLEAN -> TRUE .)
    ARGT            reduce using rule 72 (BOOLEAN -> TRUE .)
    COMMA           reduce using rule 72 (BOOLEAN -> TRUE .)
    RPAREN          reduce using rule 72 (BOOLEAN -> TRUE .)


state 25

    (73) BOOLEAN -> FALSE .

    EQUAL           reduce using rule 73 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 73 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 73 (BOOLEAN -> FALSE .)
    $end            reduce using rule 73 (BOOLEAN -> FALSE .)
    ID              reduce using rule 73 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 73 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 73 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 73 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 73 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 73 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 73 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 73 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 73 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 73 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 73 (BOOLEAN -> FALSE .)
    END             reduce using rule 73 (BOOLEAN -> FALSE .)
    ELSE            reduce using rule 73 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 73 (BOOLEAN -> FALSE .)
    IF              reduce using rule 73 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 73 (BOOLEAN -> FALSE .)
    ARGT            reduce using rule 73 (BOOLEAN -> FALSE .)
    COMMA           reduce using rule 73 (BOOLEAN -> FALSE .)
    RPAREN          reduce using rule 73 (BOOLEAN -> FALSE .)


state 26

    (43) ARRAY -> ALFT . DATA ARGT
    (67) DATA -> . NUMBER
    (68) DATA -> . FLOAT
    (69) DATA -> . BOOLEAN
    (70) DATA -> . STRING
    (71) DATA -> . DATA COMMA DATA
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 74
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LOGIC_NOT       shift and go to state 75

    DATA                           shift and go to state 70
    BOOLEAN                        shift and go to state 73

state 27

    (29) EXPRESSION_MAT -> LPAREN . EXPRESSION_MAT RPAREN
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 78
    FLOAT           shift and go to state 79
    ID              shift and go to state 40

    EXPRESSION_MAT                 shift and go to state 76
    DATANF                         shift and go to state 77

state 28

    (54) STRUCTURE_IN_FOR -> FOR . ID IN ARRAY DO
    (55) STRUCTURE_IN_FOR -> FOR . ID IN ID DO

    ID              shift and go to state 80


state 29

    (61) STRUCTURE_IN_IF -> IF . LPAREN BOOLEAN RPAREN

    LPAREN          shift and go to state 81


state 30

    (20) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN . BOOLEAN
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE

    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LOGIC_NOT       shift and go to state 75

    BOOLEAN                        shift and go to state 82

state 31

    (22) OPERATOR_COMP_BOOLEAN -> EQUAL .

    TRUE            reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    FALSE           reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    LOGIC_NOT       reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    STRING          reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    OTHERSTRINGDECLARATION reduce using rule 22 (OPERATOR_COMP_BOOLEAN -> EQUAL .)


state 32

    (23) OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .

    TRUE            reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    FALSE           reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    LOGIC_NOT       reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    STRING          reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    OTHERSTRINGDECLARATION reduce using rule 23 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)


state 33

    (24) OPERATOR_COMP_BOOLEAN -> LOGIC_AND .

    TRUE            reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    FALSE           reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    LOGIC_NOT       reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    STRING          reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    OTHERSTRINGDECLARATION reduce using rule 24 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)


state 34

    (25) OPERATOR_COMP_BOOLEAN -> LOGIC_OR .

    TRUE            reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    FALSE           reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    LOGIC_NOT       reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    STRING          reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    OTHERSTRINGDECLARATION reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)


state 35

    (26) OPERATOR_COMP_BOOLEAN -> PIPE .

    TRUE            reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    FALSE           reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    LOGIC_NOT       reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    STRING          reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    OTHERSTRINGDECLARATION reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> PIPE .)


state 36

    (44) FUNTIONS_ARRAY -> ARRAY POINT . FUNTIONS_ALLOWED_ARRAY
    (45) FUNTIONS_ALLOWED_ARRAY -> . MIN
    (46) FUNTIONS_ALLOWED_ARRAY -> . FIRST
    (47) FUNTIONS_ALLOWED_ARRAY -> . MAP_ARRAY
    (48) MAP_ARRAY -> . MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    MIN             shift and go to state 84
    FIRST           shift and go to state 85
    MAP             shift and go to state 87

    FUNTIONS_ALLOWED_ARRAY         shift and go to state 83
    MAP_ARRAY                      shift and go to state 86

state 37

    (13) EXPRESSION -> LOGIC_NOT EXPRESSION .

    $end            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ID              reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    NUMBER          reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FLOAT           reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    STRING          reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LOGIC_NOT       reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    PUTS            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    GETS            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    TRUE            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FALSE           reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ALFT            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LPAREN          reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    END             reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ELSE            reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FOR             reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    IF              reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    CLOSURECB       reduce using rule 13 (EXPRESSION -> LOGIC_NOT EXPRESSION .)


state 38

    (74) BOOLEAN -> LOGIC_NOT TRUE .
    (72) BOOLEAN -> TRUE .

  ! reduce/reduce conflict for EQUAL resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PIPE resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ID resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for STRING resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PUTS resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for GETS resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ALFT resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for END resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ELSE resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 72 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 72 (BOOLEAN -> TRUE .)
    EQUAL           reduce using rule 72 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 72 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 72 (BOOLEAN -> TRUE .)
    $end            reduce using rule 72 (BOOLEAN -> TRUE .)
    ID              reduce using rule 72 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 72 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 72 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 72 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 72 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 72 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 72 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 72 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 72 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 72 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 72 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 72 (BOOLEAN -> TRUE .)
    END             reduce using rule 72 (BOOLEAN -> TRUE .)
    ELSE            reduce using rule 72 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 72 (BOOLEAN -> TRUE .)
    IF              reduce using rule 72 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 72 (BOOLEAN -> TRUE .)

  ! EQUAL           [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! EQUAL_STRICT    [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_AND       [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_OR        [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PIPE            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! $end            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ID              [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! NUMBER          [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FLOAT           [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! STRING          [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_NOT       [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PUTS            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! GETS            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! TRUE            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FALSE           [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ALFT            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LPAREN          [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! END             [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ELSE            [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FOR             [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! IF              [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! CLOSURECB       [ reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .) ]


state 39

    (75) BOOLEAN -> LOGIC_NOT FALSE .
    (73) BOOLEAN -> FALSE .

  ! reduce/reduce conflict for EQUAL resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PIPE resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ID resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for STRING resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PUTS resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for GETS resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ALFT resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for END resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ELSE resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 73 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 73 (BOOLEAN -> FALSE .)
    EQUAL           reduce using rule 73 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 73 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 73 (BOOLEAN -> FALSE .)
    $end            reduce using rule 73 (BOOLEAN -> FALSE .)
    ID              reduce using rule 73 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 73 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 73 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 73 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 73 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 73 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 73 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 73 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 73 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 73 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 73 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 73 (BOOLEAN -> FALSE .)
    END             reduce using rule 73 (BOOLEAN -> FALSE .)
    ELSE            reduce using rule 73 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 73 (BOOLEAN -> FALSE .)
    IF              reduce using rule 73 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 73 (BOOLEAN -> FALSE .)

  ! EQUAL           [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! EQUAL_STRICT    [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_AND       [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_OR        [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PIPE            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! $end            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ID              [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! NUMBER          [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FLOAT           [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! STRING          [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_NOT       [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PUTS            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! GETS            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! TRUE            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FALSE           [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ALFT            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LPAREN          [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! END             [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ELSE            [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FOR             [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! IF              [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! CLOSURECB       [ reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .) ]


state 40

    (33) DATANF -> ID .

    EQUAL           reduce using rule 33 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 33 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR           reduce using rule 33 (DATANF -> ID .)
    GREATER         reduce using rule 33 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 33 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 33 (DATANF -> ID .)
    PIPE            reduce using rule 33 (DATANF -> ID .)
    PLUS            reduce using rule 33 (DATANF -> ID .)
    MINUS           reduce using rule 33 (DATANF -> ID .)
    TIMES           reduce using rule 33 (DATANF -> ID .)
    DIVIDE          reduce using rule 33 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 33 (DATANF -> ID .)
    $end            reduce using rule 33 (DATANF -> ID .)
    ID              reduce using rule 33 (DATANF -> ID .)
    NUMBER          reduce using rule 33 (DATANF -> ID .)
    FLOAT           reduce using rule 33 (DATANF -> ID .)
    STRING          reduce using rule 33 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 33 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 33 (DATANF -> ID .)
    PUTS            reduce using rule 33 (DATANF -> ID .)
    GETS            reduce using rule 33 (DATANF -> ID .)
    TRUE            reduce using rule 33 (DATANF -> ID .)
    FALSE           reduce using rule 33 (DATANF -> ID .)
    ALFT            reduce using rule 33 (DATANF -> ID .)
    LPAREN          reduce using rule 33 (DATANF -> ID .)
    END             reduce using rule 33 (DATANF -> ID .)
    ELSE            reduce using rule 33 (DATANF -> ID .)
    FOR             reduce using rule 33 (DATANF -> ID .)
    IF              reduce using rule 33 (DATANF -> ID .)
    CLOSURECB       reduce using rule 33 (DATANF -> ID .)
    RPAREN          reduce using rule 33 (DATANF -> ID .)


state 41

    (28) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT . EXPRESSION_MAT
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 78
    FLOAT           shift and go to state 79
    ID              shift and go to state 40

    EXPRESSION_MAT                 shift and go to state 88
    DATANF                         shift and go to state 77

state 42

    (76) OPERATOR_MAT -> PLUS .

    LPAREN          reduce using rule 76 (OPERATOR_MAT -> PLUS .)
    NUMBER          reduce using rule 76 (OPERATOR_MAT -> PLUS .)
    FLOAT           reduce using rule 76 (OPERATOR_MAT -> PLUS .)
    ID              reduce using rule 76 (OPERATOR_MAT -> PLUS .)


state 43

    (77) OPERATOR_MAT -> MINUS .

    LPAREN          reduce using rule 77 (OPERATOR_MAT -> MINUS .)
    NUMBER          reduce using rule 77 (OPERATOR_MAT -> MINUS .)
    FLOAT           reduce using rule 77 (OPERATOR_MAT -> MINUS .)
    ID              reduce using rule 77 (OPERATOR_MAT -> MINUS .)


state 44

    (78) OPERATOR_MAT -> TIMES .

    LPAREN          reduce using rule 78 (OPERATOR_MAT -> TIMES .)
    NUMBER          reduce using rule 78 (OPERATOR_MAT -> TIMES .)
    FLOAT           reduce using rule 78 (OPERATOR_MAT -> TIMES .)
    ID              reduce using rule 78 (OPERATOR_MAT -> TIMES .)


state 45

    (79) OPERATOR_MAT -> DIVIDE .

    LPAREN          reduce using rule 79 (OPERATOR_MAT -> DIVIDE .)
    NUMBER          reduce using rule 79 (OPERATOR_MAT -> DIVIDE .)
    FLOAT           reduce using rule 79 (OPERATOR_MAT -> DIVIDE .)
    ID              reduce using rule 79 (OPERATOR_MAT -> DIVIDE .)


state 46

    (80) OPERATOR_MAT -> EXPONENTIATION .

    LPAREN          reduce using rule 80 (OPERATOR_MAT -> EXPONENTIATION .)
    NUMBER          reduce using rule 80 (OPERATOR_MAT -> EXPONENTIATION .)
    FLOAT           reduce using rule 80 (OPERATOR_MAT -> EXPONENTIATION .)
    ID              reduce using rule 80 (OPERATOR_MAT -> EXPONENTIATION .)


state 47

    (34) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS . EXPRESSION_CONCAT
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (43) ARRAY -> . ALFT DATA ARGT

    STRING          shift and go to state 92
    OTHERSTRINGDECLARATION shift and go to state 93
    ALFT            shift and go to state 26

    EXPRESSION_CONCAT              shift and go to state 89
    DATASTRING                     shift and go to state 90
    ARRAY                          shift and go to state 91

state 48

    (16) EXPRESSION -> PUTS EXPRESSION .

    $end            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    ID              reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    NUMBER          reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    FLOAT           reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    STRING          reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    LOGIC_NOT       reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    PUTS            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    GETS            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    TRUE            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    FALSE           reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    ALFT            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    LPAREN          reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    END             reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    ELSE            reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    FOR             reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    IF              reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)
    CLOSURECB       reduce using rule 16 (EXPRESSION -> PUTS EXPRESSION .)


state 49

    (17) EXPRESSION -> PUTS ID .
    (33) DATANF -> ID .

  ! reduce/reduce conflict for $end resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ID resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for PUTS resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for GETS resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ALFT resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for END resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for IF resolved using rule 17 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 17 (EXPRESSION -> PUTS ID .)
    $end            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    ID              reduce using rule 17 (EXPRESSION -> PUTS ID .)
    NUMBER          reduce using rule 17 (EXPRESSION -> PUTS ID .)
    FLOAT           reduce using rule 17 (EXPRESSION -> PUTS ID .)
    STRING          reduce using rule 17 (EXPRESSION -> PUTS ID .)
    OTHERSTRINGDECLARATION reduce using rule 17 (EXPRESSION -> PUTS ID .)
    LOGIC_NOT       reduce using rule 17 (EXPRESSION -> PUTS ID .)
    PUTS            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    GETS            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    TRUE            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    FALSE           reduce using rule 17 (EXPRESSION -> PUTS ID .)
    ALFT            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    LPAREN          reduce using rule 17 (EXPRESSION -> PUTS ID .)
    END             reduce using rule 17 (EXPRESSION -> PUTS ID .)
    ELSE            reduce using rule 17 (EXPRESSION -> PUTS ID .)
    FOR             reduce using rule 17 (EXPRESSION -> PUTS ID .)
    IF              reduce using rule 17 (EXPRESSION -> PUTS ID .)
    CLOSURECB       reduce using rule 17 (EXPRESSION -> PUTS ID .)
    EQUAL           reduce using rule 33 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 33 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 33 (DATANF -> ID .)
    MINOR           reduce using rule 33 (DATANF -> ID .)
    GREATER         reduce using rule 33 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 33 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 33 (DATANF -> ID .)
    PIPE            reduce using rule 33 (DATANF -> ID .)
    PLUS            reduce using rule 33 (DATANF -> ID .)
    MINUS           reduce using rule 33 (DATANF -> ID .)
    TIMES           reduce using rule 33 (DATANF -> ID .)
    DIVIDE          reduce using rule 33 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 33 (DATANF -> ID .)

  ! $end            [ reduce using rule 33 (DATANF -> ID .) ]
  ! ID              [ reduce using rule 33 (DATANF -> ID .) ]
  ! NUMBER          [ reduce using rule 33 (DATANF -> ID .) ]
  ! FLOAT           [ reduce using rule 33 (DATANF -> ID .) ]
  ! STRING          [ reduce using rule 33 (DATANF -> ID .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 33 (DATANF -> ID .) ]
  ! LOGIC_NOT       [ reduce using rule 33 (DATANF -> ID .) ]
  ! PUTS            [ reduce using rule 33 (DATANF -> ID .) ]
  ! GETS            [ reduce using rule 33 (DATANF -> ID .) ]
  ! TRUE            [ reduce using rule 33 (DATANF -> ID .) ]
  ! FALSE           [ reduce using rule 33 (DATANF -> ID .) ]
  ! ALFT            [ reduce using rule 33 (DATANF -> ID .) ]
  ! LPAREN          [ reduce using rule 33 (DATANF -> ID .) ]
  ! END             [ reduce using rule 33 (DATANF -> ID .) ]
  ! ELSE            [ reduce using rule 33 (DATANF -> ID .) ]
  ! FOR             [ reduce using rule 33 (DATANF -> ID .) ]
  ! IF              [ reduce using rule 33 (DATANF -> ID .) ]
  ! CLOSURECB       [ reduce using rule 33 (DATANF -> ID .) ]


state 50

    (5) ASIGNATION -> ID ASIGN . EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    ID              shift and go to state 40

    EXPRESSION                     shift and go to state 94
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 51

    (18) EXPRESSION -> GETS EXPRESSION .

    $end            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    ID              reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    NUMBER          reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    FLOAT           reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    STRING          reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    LOGIC_NOT       reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    PUTS            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    GETS            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    TRUE            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    FALSE           reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    ALFT            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    LPAREN          reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    END             reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    ELSE            reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    FOR             reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    IF              reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)
    CLOSURECB       reduce using rule 18 (EXPRESSION -> GETS EXPRESSION .)


state 52

    (21) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN . DATASTRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION

    STRING          shift and go to state 92
    OTHERSTRINGDECLARATION shift and go to state 93

    DATASTRING                     shift and go to state 95

state 53

    (39) FUNCTIONS_STRING -> DATASTRING POINT . FUNCTIONS_ALLOWED_STRING
    (40) FUNCTIONS_ALLOWED_STRING -> . INCLUDE QUESTION DATASTRING
    (41) FUNCTIONS_ALLOWED_STRING -> . EMPTY QUESTION
    (42) FUNCTIONS_ALLOWED_STRING -> . UPCASE

    INCLUDE         shift and go to state 97
    EMPTY           shift and go to state 98
    UPCASE          shift and go to state 99

    FUNCTIONS_ALLOWED_STRING       shift and go to state 96

state 54

    (27) EXPRESSION -> DATANF OPERATOR_COMP_MAT . DATANF
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    NUMBER          shift and go to state 78
    FLOAT           shift and go to state 79
    ID              shift and go to state 40

    DATANF                         shift and go to state 100

state 55

    (81) OPERATOR_COMP_MAT -> EQUAL .

    NUMBER          reduce using rule 81 (OPERATOR_COMP_MAT -> EQUAL .)
    FLOAT           reduce using rule 81 (OPERATOR_COMP_MAT -> EQUAL .)
    ID              reduce using rule 81 (OPERATOR_COMP_MAT -> EQUAL .)


state 56

    (82) OPERATOR_COMP_MAT -> EQUAL_STRICT .

    NUMBER          reduce using rule 82 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    FLOAT           reduce using rule 82 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    ID              reduce using rule 82 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)


state 57

    (83) OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .

    NUMBER          reduce using rule 83 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 83 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    ID              reduce using rule 83 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)


state 58

    (84) OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .

    NUMBER          reduce using rule 84 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 84 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    ID              reduce using rule 84 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)


state 59

    (85) OPERATOR_COMP_MAT -> MINOR .

    NUMBER          reduce using rule 85 (OPERATOR_COMP_MAT -> MINOR .)
    FLOAT           reduce using rule 85 (OPERATOR_COMP_MAT -> MINOR .)
    ID              reduce using rule 85 (OPERATOR_COMP_MAT -> MINOR .)


state 60

    (86) OPERATOR_COMP_MAT -> GREATER .

    NUMBER          reduce using rule 86 (OPERATOR_COMP_MAT -> GREATER .)
    FLOAT           reduce using rule 86 (OPERATOR_COMP_MAT -> GREATER .)
    ID              reduce using rule 86 (OPERATOR_COMP_MAT -> GREATER .)


state 61

    (87) OPERATOR_COMP_MAT -> LOGIC_AND .

    NUMBER          reduce using rule 87 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    FLOAT           reduce using rule 87 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    ID              reduce using rule 87 (OPERATOR_COMP_MAT -> LOGIC_AND .)


state 62

    (88) OPERATOR_COMP_MAT -> LOGIC_OR .

    NUMBER          reduce using rule 88 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    FLOAT           reduce using rule 88 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    ID              reduce using rule 88 (OPERATOR_COMP_MAT -> LOGIC_OR .)


state 63

    (89) OPERATOR_COMP_MAT -> PIPE .

    NUMBER          reduce using rule 89 (OPERATOR_COMP_MAT -> PIPE .)
    FLOAT           reduce using rule 89 (OPERATOR_COMP_MAT -> PIPE .)
    ID              reduce using rule 89 (OPERATOR_COMP_MAT -> PIPE .)


state 64

    (53) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT . END

    END             shift and go to state 101


state 65

    (56) DATA_REPEAT -> DATA_ALLOWED_IN_FOR .
    (57) DATA_REPEAT -> DATA_ALLOWED_IN_FOR . DATA_REPEAT
    (56) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (57) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (62) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (63) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (64) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (58) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (59) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (65) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (66) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    END             reduce using rule 56 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR .)
    ID              shift and go to state 17
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    DATA_ALLOWED_IN_FOR            shift and go to state 65
    DATA_REPEAT                    shift and go to state 102
    DATA_ALLOWED_IN_IF             shift and go to state 66
    ASIGNATION                     shift and go to state 67
    EXPRESSION                     shift and go to state 68
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 66

    (62) DATA_REPEAT -> DATA_ALLOWED_IN_IF .
    (63) DATA_REPEAT -> DATA_ALLOWED_IN_IF . DATA_REPEAT
    (64) DATA_REPEAT -> DATA_ALLOWED_IN_IF . ELSE DATA_ALLOWED_IN_IF
    (56) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (57) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (62) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (63) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (64) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (58) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (59) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (65) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (66) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    END             reduce using rule 62 (DATA_REPEAT -> DATA_ALLOWED_IN_IF .)
    ELSE            shift and go to state 104
    ID              shift and go to state 17
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    DATA_ALLOWED_IN_IF             shift and go to state 66
    DATA_REPEAT                    shift and go to state 103
    DATA_ALLOWED_IN_FOR            shift and go to state 65
    ASIGNATION                     shift and go to state 67
    EXPRESSION                     shift and go to state 68
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 67

    (58) DATA_ALLOWED_IN_FOR -> ASIGNATION .
    (65) DATA_ALLOWED_IN_IF -> ASIGNATION .

  ! reduce/reduce conflict for ID resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for GETS resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for END resolved using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ID              reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    NUMBER          reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FLOAT           reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    STRING          reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    PUTS            reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    GETS            reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    TRUE            reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FALSE           reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ALFT            reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LPAREN          reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    END             reduce using rule 58 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ELSE            reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .)

  ! ID              [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! NUMBER          [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! FLOAT           [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! STRING          [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! LOGIC_NOT       [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! PUTS            [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! GETS            [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! TRUE            [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! FALSE           [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! ALFT            [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! LPAREN          [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! END             [ reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]


state 68

    (59) DATA_ALLOWED_IN_FOR -> EXPRESSION .
    (66) DATA_ALLOWED_IN_IF -> EXPRESSION .

  ! reduce/reduce conflict for ID resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for STRING resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for PUTS resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for GETS resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for TRUE resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FALSE resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for ALFT resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for END resolved using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ID              reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    NUMBER          reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FLOAT           reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    STRING          reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    PUTS            reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    GETS            reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    TRUE            reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FALSE           reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ALFT            reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LPAREN          reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    END             reduce using rule 59 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ELSE            reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .)

  ! ID              [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! NUMBER          [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! FLOAT           [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! STRING          [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! LOGIC_NOT       [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! PUTS            [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! GETS            [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! TRUE            [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! FALSE           [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! ALFT            [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! LPAREN          [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! END             [ reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]


state 69

    (60) STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT . END

    END             shift and go to state 105


state 70

    (43) ARRAY -> ALFT DATA . ARGT
    (71) DATA -> DATA . COMMA DATA

    ARGT            shift and go to state 106
    COMMA           shift and go to state 107


state 71

    (67) DATA -> NUMBER .

    ARGT            reduce using rule 67 (DATA -> NUMBER .)
    COMMA           reduce using rule 67 (DATA -> NUMBER .)


state 72

    (68) DATA -> FLOAT .

    ARGT            reduce using rule 68 (DATA -> FLOAT .)
    COMMA           reduce using rule 68 (DATA -> FLOAT .)


state 73

    (69) DATA -> BOOLEAN .

    ARGT            reduce using rule 69 (DATA -> BOOLEAN .)
    COMMA           reduce using rule 69 (DATA -> BOOLEAN .)


state 74

    (70) DATA -> STRING .

    ARGT            reduce using rule 70 (DATA -> STRING .)
    COMMA           reduce using rule 70 (DATA -> STRING .)


state 75

    (74) BOOLEAN -> LOGIC_NOT . TRUE
    (75) BOOLEAN -> LOGIC_NOT . FALSE

    TRUE            shift and go to state 108
    FALSE           shift and go to state 109


state 76

    (29) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT . RPAREN
    (28) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (76) OPERATOR_MAT -> . PLUS
    (77) OPERATOR_MAT -> . MINUS
    (78) OPERATOR_MAT -> . TIMES
    (79) OPERATOR_MAT -> . DIVIDE
    (80) OPERATOR_MAT -> . EXPONENTIATION

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46

    OPERATOR_MAT                   shift and go to state 41

state 77

    (30) EXPRESSION_MAT -> DATANF .

    RPAREN          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    PLUS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    ELSE            reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    IF              reduce using rule 30 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 30 (EXPRESSION_MAT -> DATANF .)


state 78

    (31) DATANF -> NUMBER .

    RPAREN          reduce using rule 31 (DATANF -> NUMBER .)
    PLUS            reduce using rule 31 (DATANF -> NUMBER .)
    MINUS           reduce using rule 31 (DATANF -> NUMBER .)
    TIMES           reduce using rule 31 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 31 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 31 (DATANF -> NUMBER .)
    $end            reduce using rule 31 (DATANF -> NUMBER .)
    ID              reduce using rule 31 (DATANF -> NUMBER .)
    NUMBER          reduce using rule 31 (DATANF -> NUMBER .)
    FLOAT           reduce using rule 31 (DATANF -> NUMBER .)
    STRING          reduce using rule 31 (DATANF -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 31 (DATANF -> NUMBER .)
    LOGIC_NOT       reduce using rule 31 (DATANF -> NUMBER .)
    PUTS            reduce using rule 31 (DATANF -> NUMBER .)
    GETS            reduce using rule 31 (DATANF -> NUMBER .)
    TRUE            reduce using rule 31 (DATANF -> NUMBER .)
    FALSE           reduce using rule 31 (DATANF -> NUMBER .)
    ALFT            reduce using rule 31 (DATANF -> NUMBER .)
    LPAREN          reduce using rule 31 (DATANF -> NUMBER .)
    END             reduce using rule 31 (DATANF -> NUMBER .)
    ELSE            reduce using rule 31 (DATANF -> NUMBER .)
    FOR             reduce using rule 31 (DATANF -> NUMBER .)
    IF              reduce using rule 31 (DATANF -> NUMBER .)
    CLOSURECB       reduce using rule 31 (DATANF -> NUMBER .)


state 79

    (32) DATANF -> FLOAT .

    RPAREN          reduce using rule 32 (DATANF -> FLOAT .)
    PLUS            reduce using rule 32 (DATANF -> FLOAT .)
    MINUS           reduce using rule 32 (DATANF -> FLOAT .)
    TIMES           reduce using rule 32 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 32 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 32 (DATANF -> FLOAT .)
    $end            reduce using rule 32 (DATANF -> FLOAT .)
    ID              reduce using rule 32 (DATANF -> FLOAT .)
    NUMBER          reduce using rule 32 (DATANF -> FLOAT .)
    FLOAT           reduce using rule 32 (DATANF -> FLOAT .)
    STRING          reduce using rule 32 (DATANF -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 32 (DATANF -> FLOAT .)
    LOGIC_NOT       reduce using rule 32 (DATANF -> FLOAT .)
    PUTS            reduce using rule 32 (DATANF -> FLOAT .)
    GETS            reduce using rule 32 (DATANF -> FLOAT .)
    TRUE            reduce using rule 32 (DATANF -> FLOAT .)
    FALSE           reduce using rule 32 (DATANF -> FLOAT .)
    ALFT            reduce using rule 32 (DATANF -> FLOAT .)
    LPAREN          reduce using rule 32 (DATANF -> FLOAT .)
    END             reduce using rule 32 (DATANF -> FLOAT .)
    ELSE            reduce using rule 32 (DATANF -> FLOAT .)
    FOR             reduce using rule 32 (DATANF -> FLOAT .)
    IF              reduce using rule 32 (DATANF -> FLOAT .)
    CLOSURECB       reduce using rule 32 (DATANF -> FLOAT .)


state 80

    (54) STRUCTURE_IN_FOR -> FOR ID . IN ARRAY DO
    (55) STRUCTURE_IN_FOR -> FOR ID . IN ID DO

    IN              shift and go to state 111


state 81

    (61) STRUCTURE_IN_IF -> IF LPAREN . BOOLEAN RPAREN
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE

    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LOGIC_NOT       shift and go to state 75

    BOOLEAN                        shift and go to state 112

state 82

    (20) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .

    $end            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ID              reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    NUMBER          reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FLOAT           reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    STRING          reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LOGIC_NOT       reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    PUTS            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    GETS            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    TRUE            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FALSE           reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ALFT            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LPAREN          reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    END             reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ELSE            reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FOR             reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    IF              reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    CLOSURECB       reduce using rule 20 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)


state 83

    (44) FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .

    $end            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ID              reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    NUMBER          reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FLOAT           reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    STRING          reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LOGIC_NOT       reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    PUTS            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    GETS            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    TRUE            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FALSE           reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ALFT            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LPAREN          reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    END             reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ELSE            reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FOR             reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    IF              reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    CLOSURECB       reduce using rule 44 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)


state 84

    (45) FUNTIONS_ALLOWED_ARRAY -> MIN .

    $end            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ID              reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    NUMBER          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FLOAT           reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    STRING          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    OTHERSTRINGDECLARATION reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LOGIC_NOT       reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    PUTS            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    GETS            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    TRUE            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FALSE           reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ALFT            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LPAREN          reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    END             reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ELSE            reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FOR             reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    IF              reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    CLOSURECB       reduce using rule 45 (FUNTIONS_ALLOWED_ARRAY -> MIN .)


state 85

    (46) FUNTIONS_ALLOWED_ARRAY -> FIRST .

    $end            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ID              reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    NUMBER          reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FLOAT           reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    STRING          reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    OTHERSTRINGDECLARATION reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LOGIC_NOT       reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    PUTS            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    GETS            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    TRUE            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FALSE           reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ALFT            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LPAREN          reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    END             reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ELSE            reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FOR             reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    IF              reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    CLOSURECB       reduce using rule 46 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)


state 86

    (47) FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .

    $end            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ID              reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    NUMBER          reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FLOAT           reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    STRING          reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LOGIC_NOT       reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    PUTS            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    GETS            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    TRUE            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FALSE           reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ALFT            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LPAREN          reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    END             reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ELSE            reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FOR             reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    IF              reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    CLOSURECB       reduce using rule 47 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)


state 87

    (48) MAP_ARRAY -> MAP . OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    OPENINGCB       shift and go to state 113


state 88

    (28) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .
    (28) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (76) OPERATOR_MAT -> . PLUS
    (77) OPERATOR_MAT -> . MINUS
    (78) OPERATOR_MAT -> . TIMES
    (79) OPERATOR_MAT -> . DIVIDE
    (80) OPERATOR_MAT -> . EXPONENTIATION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIATION resolved as shift
    $end            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ID              reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    NUMBER          reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FLOAT           reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    STRING          reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PUTS            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    GETS            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    TRUE            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FALSE           reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ALFT            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LPAREN          reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    END             reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ELSE            reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FOR             reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    IF              reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    RPAREN          reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46

  ! PLUS            [ reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! MINUS           [ reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! TIMES           [ reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! DIVIDE          [ reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! EXPONENTIATION  [ reduce using rule 28 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]

    OPERATOR_MAT                   shift and go to state 41

state 89

    (34) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .
    (34) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

  ! shift/reduce conflict for PLUS resolved as shift
    $end            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ID              reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    STRING          reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PUTS            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    GETS            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    TRUE            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FALSE           reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ALFT            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    END             reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ELSE            reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FOR             reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    IF              reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PLUS            shift and go to state 47

  ! PLUS            [ reduce using rule 34 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .) ]


state 90

    (35) EXPRESSION_CONCAT -> DATASTRING .

    PLUS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    ELSE            reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    IF              reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 35 (EXPRESSION_CONCAT -> DATASTRING .)


state 91

    (36) EXPRESSION_CONCAT -> ARRAY .

    PLUS            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    $end            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    ID              reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    NUMBER          reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    FLOAT           reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    STRING          reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    LOGIC_NOT       reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    PUTS            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    GETS            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    TRUE            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    FALSE           reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    ALFT            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    LPAREN          reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    END             reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    ELSE            reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    FOR             reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    IF              reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)
    CLOSURECB       reduce using rule 36 (EXPRESSION_CONCAT -> ARRAY .)


state 92

    (37) DATASTRING -> STRING .

    PLUS            reduce using rule 37 (DATASTRING -> STRING .)
    $end            reduce using rule 37 (DATASTRING -> STRING .)
    ID              reduce using rule 37 (DATASTRING -> STRING .)
    NUMBER          reduce using rule 37 (DATASTRING -> STRING .)
    FLOAT           reduce using rule 37 (DATASTRING -> STRING .)
    STRING          reduce using rule 37 (DATASTRING -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 37 (DATASTRING -> STRING .)
    LOGIC_NOT       reduce using rule 37 (DATASTRING -> STRING .)
    PUTS            reduce using rule 37 (DATASTRING -> STRING .)
    GETS            reduce using rule 37 (DATASTRING -> STRING .)
    TRUE            reduce using rule 37 (DATASTRING -> STRING .)
    FALSE           reduce using rule 37 (DATASTRING -> STRING .)
    ALFT            reduce using rule 37 (DATASTRING -> STRING .)
    LPAREN          reduce using rule 37 (DATASTRING -> STRING .)
    END             reduce using rule 37 (DATASTRING -> STRING .)
    ELSE            reduce using rule 37 (DATASTRING -> STRING .)
    FOR             reduce using rule 37 (DATASTRING -> STRING .)
    IF              reduce using rule 37 (DATASTRING -> STRING .)
    CLOSURECB       reduce using rule 37 (DATASTRING -> STRING .)


state 93

    (38) DATASTRING -> OTHERSTRINGDECLARATION .

    PLUS            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ELSE            reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    IF              reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 38 (DATASTRING -> OTHERSTRINGDECLARATION .)


state 94

    (5) ASIGNATION -> ID ASIGN EXPRESSION .

    $end            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ID              reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    NUMBER          reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FLOAT           reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    STRING          reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LOGIC_NOT       reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    PUTS            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    GETS            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    TRUE            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FALSE           reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ALFT            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LPAREN          reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    END             reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ELSE            reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FOR             reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    IF              reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)
    CLOSURECB       reduce using rule 5 (ASIGNATION -> ID ASIGN EXPRESSION .)


state 95

    (21) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .

    $end            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ID              reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    NUMBER          reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FLOAT           reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    STRING          reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LOGIC_NOT       reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    PUTS            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    GETS            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    TRUE            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FALSE           reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ALFT            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LPAREN          reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    END             reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ELSE            reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FOR             reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    IF              reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    CLOSURECB       reduce using rule 21 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)


state 96

    (39) FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .

    $end            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ID              reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    NUMBER          reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FLOAT           reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    STRING          reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    OTHERSTRINGDECLARATION reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    LOGIC_NOT       reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    PUTS            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    GETS            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    TRUE            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FALSE           reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ALFT            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    LPAREN          reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    END             reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ELSE            reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FOR             reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    IF              reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    CLOSURECB       reduce using rule 39 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)


state 97

    (40) FUNCTIONS_ALLOWED_STRING -> INCLUDE . QUESTION DATASTRING

    QUESTION        shift and go to state 114


state 98

    (41) FUNCTIONS_ALLOWED_STRING -> EMPTY . QUESTION

    QUESTION        shift and go to state 115


state 99

    (42) FUNCTIONS_ALLOWED_STRING -> UPCASE .

    $end            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ID              reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    NUMBER          reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FLOAT           reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    STRING          reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    OTHERSTRINGDECLARATION reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    LOGIC_NOT       reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    PUTS            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    GETS            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    TRUE            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FALSE           reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ALFT            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    LPAREN          reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    END             reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ELSE            reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FOR             reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    IF              reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    CLOSURECB       reduce using rule 42 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)


state 100

    (27) EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .

    $end            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ID              reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    NUMBER          reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FLOAT           reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    STRING          reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LOGIC_NOT       reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    PUTS            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    GETS            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    TRUE            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FALSE           reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ALFT            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LPAREN          reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    END             reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ELSE            reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FOR             reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    IF              reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    CLOSURECB       reduce using rule 27 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)


state 101

    (53) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .

    $end            reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    NUMBER          reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FLOAT           reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    STRING          reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    PUTS            reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    GETS            reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ID              reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    TRUE            reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FALSE           reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ALFT            reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LPAREN          reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FOR             reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    IF              reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    CLOSURECB       reduce using rule 53 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)


state 102

    (57) DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .

    END             reduce using rule 57 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .)


state 103

    (63) DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT .

    END             reduce using rule 63 (DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT .)


state 104

    (64) DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE . DATA_ALLOWED_IN_IF
    (65) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (66) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID

    ID              shift and go to state 17
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27

    DATA_ALLOWED_IN_IF             shift and go to state 116
    ASIGNATION                     shift and go to state 117
    EXPRESSION                     shift and go to state 118
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21

state 105

    (60) STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .

    $end            reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    NUMBER          reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FLOAT           reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    STRING          reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    PUTS            reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    GETS            reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    ID              reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    TRUE            reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FALSE           reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    ALFT            reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    LPAREN          reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FOR             reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    IF              reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    CLOSURECB       reduce using rule 60 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)


state 106

    (43) ARRAY -> ALFT DATA ARGT .

    POINT           reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    $end            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    PLUS            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    ID              reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    NUMBER          reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    FLOAT           reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    STRING          reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    OTHERSTRINGDECLARATION reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    LOGIC_NOT       reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    PUTS            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    GETS            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    TRUE            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    FALSE           reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    ALFT            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    LPAREN          reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    END             reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    ELSE            reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    FOR             reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    IF              reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    CLOSURECB       reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)
    DO              reduce using rule 43 (ARRAY -> ALFT DATA ARGT .)


state 107

    (71) DATA -> DATA COMMA . DATA
    (67) DATA -> . NUMBER
    (68) DATA -> . FLOAT
    (69) DATA -> . BOOLEAN
    (70) DATA -> . STRING
    (71) DATA -> . DATA COMMA DATA
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 74
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LOGIC_NOT       shift and go to state 75

    DATA                           shift and go to state 119
    BOOLEAN                        shift and go to state 73

state 108

    (74) BOOLEAN -> LOGIC_NOT TRUE .

    ARGT            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    COMMA           reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    $end            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    ID              reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    NUMBER          reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    FLOAT           reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    STRING          reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    LOGIC_NOT       reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    PUTS            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    GETS            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    TRUE            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    FALSE           reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    ALFT            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    LPAREN          reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    END             reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    ELSE            reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    FOR             reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    IF              reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    CLOSURECB       reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)
    RPAREN          reduce using rule 74 (BOOLEAN -> LOGIC_NOT TRUE .)


state 109

    (75) BOOLEAN -> LOGIC_NOT FALSE .

    ARGT            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    COMMA           reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    $end            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    ID              reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    NUMBER          reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    FLOAT           reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    STRING          reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    LOGIC_NOT       reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    PUTS            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    GETS            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    TRUE            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    FALSE           reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    ALFT            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    LPAREN          reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    END             reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    ELSE            reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    FOR             reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    IF              reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    CLOSURECB       reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)
    RPAREN          reduce using rule 75 (BOOLEAN -> LOGIC_NOT FALSE .)


state 110

    (29) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .

    PLUS            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    MINUS           reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TIMES           reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    DIVIDE          reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    EXPONENTIATION  reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    $end            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ID              reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    NUMBER          reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FLOAT           reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    STRING          reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LOGIC_NOT       reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    PUTS            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    GETS            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TRUE            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FALSE           reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ALFT            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LPAREN          reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    END             reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ELSE            reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FOR             reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    IF              reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    CLOSURECB       reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    RPAREN          reduce using rule 29 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)


state 111

    (54) STRUCTURE_IN_FOR -> FOR ID IN . ARRAY DO
    (55) STRUCTURE_IN_FOR -> FOR ID IN . ID DO
    (43) ARRAY -> . ALFT DATA ARGT

    ID              shift and go to state 120
    ALFT            shift and go to state 26

    ARRAY                          shift and go to state 121

state 112

    (61) STRUCTURE_IN_IF -> IF LPAREN BOOLEAN . RPAREN

    RPAREN          shift and go to state 122


state 113

    (48) MAP_ARRAY -> MAP OPENINGCB . PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 123


state 114

    (40) FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION . DATASTRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION

    STRING          shift and go to state 92
    OTHERSTRINGDECLARATION shift and go to state 93

    DATASTRING                     shift and go to state 124

state 115

    (41) FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .

    $end            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ID              reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    NUMBER          reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FLOAT           reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    STRING          reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    OTHERSTRINGDECLARATION reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    LOGIC_NOT       reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    PUTS            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    GETS            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    TRUE            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FALSE           reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ALFT            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    LPAREN          reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    END             reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ELSE            reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FOR             reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    IF              reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    CLOSURECB       reduce using rule 41 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)


state 116

    (64) DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF .

    END             reduce using rule 64 (DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF .)


state 117

    (65) DATA_ALLOWED_IN_IF -> ASIGNATION .

    END             reduce using rule 65 (DATA_ALLOWED_IN_IF -> ASIGNATION .)


state 118

    (66) DATA_ALLOWED_IN_IF -> EXPRESSION .

    END             reduce using rule 66 (DATA_ALLOWED_IN_IF -> EXPRESSION .)


state 119

    (71) DATA -> DATA COMMA DATA .
    (71) DATA -> DATA . COMMA DATA

  ! shift/reduce conflict for COMMA resolved as shift
    ARGT            reduce using rule 71 (DATA -> DATA COMMA DATA .)
    COMMA           shift and go to state 107

  ! COMMA           [ reduce using rule 71 (DATA -> DATA COMMA DATA .) ]


state 120

    (55) STRUCTURE_IN_FOR -> FOR ID IN ID . DO

    DO              shift and go to state 125


state 121

    (54) STRUCTURE_IN_FOR -> FOR ID IN ARRAY . DO

    DO              shift and go to state 126


state 122

    (61) STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .

    ID              reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    NUMBER          reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    FLOAT           reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    STRING          reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    LOGIC_NOT       reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    PUTS            reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    GETS            reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    TRUE            reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    FALSE           reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    ALFT            reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    LPAREN          reduce using rule 61 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)


state 123

    (48) MAP_ARRAY -> MAP OPENINGCB PIPE . ID PIPE DATA_REPEAT_MAP CLOSURECB

    ID              shift and go to state 127


state 124

    (40) FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .

    $end            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ID              reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    NUMBER          reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FLOAT           reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    STRING          reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    LOGIC_NOT       reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    PUTS            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    GETS            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    TRUE            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FALSE           reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ALFT            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    LPAREN          reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    END             reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ELSE            reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FOR             reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    IF              reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    CLOSURECB       reduce using rule 40 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)


state 125

    (55) STRUCTURE_IN_FOR -> FOR ID IN ID DO .

    ID              reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    NUMBER          reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FLOAT           reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    STRING          reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    OTHERSTRINGDECLARATION reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LOGIC_NOT       reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    PUTS            reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    GETS            reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    TRUE            reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FALSE           reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    ALFT            reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LPAREN          reduce using rule 55 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)


state 126

    (54) STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .

    ID              reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    NUMBER          reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FLOAT           reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    STRING          reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    OTHERSTRINGDECLARATION reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LOGIC_NOT       reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    PUTS            reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    GETS            reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    TRUE            reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FALSE           reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    ALFT            reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LPAREN          reduce using rule 54 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)


state 127

    (48) MAP_ARRAY -> MAP OPENINGCB PIPE ID . PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 128


state 128

    (48) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE . DATA_REPEAT_MAP CLOSURECB
    (49) DATA_REPEAT_MAP -> . STATEMENT
    (50) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (53) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (60) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID
    (54) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (55) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (61) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN

    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    ID              shift and go to state 17
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    DATA_REPEAT_MAP                shift and go to state 129
    STATEMENT                      shift and go to state 130
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21
    STRUCTURE_IN_FOR               shift and go to state 22
    STRUCTURE_IN_IF                shift and go to state 23

state 129

    (48) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP . CLOSURECB

    CLOSURECB       shift and go to state 131


state 130

    (49) DATA_REPEAT_MAP -> STATEMENT .
    (50) DATA_REPEAT_MAP -> STATEMENT . DATA_REPEAT_MAP
    (49) DATA_REPEAT_MAP -> . STATEMENT
    (50) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (6) EXPRESSION -> . NUMBER
    (7) EXPRESSION -> . FLOAT
    (8) EXPRESSION -> . BOOLEAN
    (9) EXPRESSION -> . STRING
    (10) EXPRESSION -> . OTHERSTRINGDECLARATION
    (11) EXPRESSION -> . ARRAY
    (12) EXPRESSION -> . FUNTIONS_ARRAY
    (13) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION_MAT
    (15) EXPRESSION -> . EXPRESSION_CONCAT
    (16) EXPRESSION -> . PUTS EXPRESSION
    (17) EXPRESSION -> . PUTS ID
    (18) EXPRESSION -> . GETS EXPRESSION
    (19) EXPRESSION -> . FUNCTIONS_STRING
    (20) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (21) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (27) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (5) ASIGNATION -> . ID ASIGN EXPRESSION
    (53) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (60) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (72) BOOLEAN -> . TRUE
    (73) BOOLEAN -> . FALSE
    (74) BOOLEAN -> . LOGIC_NOT TRUE
    (75) BOOLEAN -> . LOGIC_NOT FALSE
    (43) ARRAY -> . ALFT DATA ARGT
    (44) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (28) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (29) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (30) EXPRESSION_MAT -> . DATANF
    (34) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (35) EXPRESSION_CONCAT -> . DATASTRING
    (36) EXPRESSION_CONCAT -> . ARRAY
    (39) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (37) DATASTRING -> . STRING
    (38) DATASTRING -> . OTHERSTRINGDECLARATION
    (31) DATANF -> . NUMBER
    (32) DATANF -> . FLOAT
    (33) DATANF -> . ID
    (54) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (55) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (61) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN

    CLOSURECB       reduce using rule 49 (DATA_REPEAT_MAP -> STATEMENT .)
    NUMBER          shift and go to state 6
    FLOAT           shift and go to state 7
    STRING          shift and go to state 9
    OTHERSTRINGDECLARATION shift and go to state 10
    LOGIC_NOT       shift and go to state 13
    PUTS            shift and go to state 16
    GETS            shift and go to state 18
    ID              shift and go to state 17
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    ALFT            shift and go to state 26
    LPAREN          shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    STATEMENT                      shift and go to state 130
    DATA_REPEAT_MAP                shift and go to state 132
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    BOOLEAN                        shift and go to state 8
    ARRAY                          shift and go to state 11
    FUNTIONS_ARRAY                 shift and go to state 12
    EXPRESSION_MAT                 shift and go to state 14
    EXPRESSION_CONCAT              shift and go to state 15
    FUNCTIONS_STRING               shift and go to state 19
    DATASTRING                     shift and go to state 20
    DATANF                         shift and go to state 21
    STRUCTURE_IN_FOR               shift and go to state 22
    STRUCTURE_IN_IF                shift and go to state 23

state 131

    (48) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .

    $end            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ID              reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    NUMBER          reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FLOAT           reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    STRING          reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    OTHERSTRINGDECLARATION reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LOGIC_NOT       reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    PUTS            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    GETS            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    TRUE            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FALSE           reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ALFT            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LPAREN          reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    END             reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ELSE            reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FOR             reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    IF              reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    CLOSURECB       reduce using rule 48 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)


state 132

    (50) DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .

    CLOSURECB       reduce using rule 50 (DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIATION in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (EXPRESSION -> NUMBER)
WARNING: rejected rule (DATANF -> NUMBER) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (EXPRESSION -> FLOAT)
WARNING: rejected rule (DATANF -> FLOAT) in state 7
WARNING: reduce/reduce conflict in state 9 resolved using rule (EXPRESSION -> STRING)
WARNING: rejected rule (DATASTRING -> STRING) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (EXPRESSION -> OTHERSTRINGDECLARATION)
WARNING: rejected rule (DATASTRING -> OTHERSTRINGDECLARATION) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (EXPRESSION -> ARRAY)
WARNING: rejected rule (EXPRESSION_CONCAT -> ARRAY) in state 11
WARNING: reduce/reduce conflict in state 38 resolved using rule (BOOLEAN -> TRUE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT TRUE) in state 38
WARNING: reduce/reduce conflict in state 39 resolved using rule (BOOLEAN -> FALSE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT FALSE) in state 39
WARNING: reduce/reduce conflict in state 49 resolved using rule (EXPRESSION -> PUTS ID)
WARNING: rejected rule (DATANF -> ID) in state 49
WARNING: reduce/reduce conflict in state 67 resolved using rule (DATA_ALLOWED_IN_FOR -> ASIGNATION)
WARNING: rejected rule (DATA_ALLOWED_IN_IF -> ASIGNATION) in state 67
WARNING: reduce/reduce conflict in state 68 resolved using rule (DATA_ALLOWED_IN_FOR -> EXPRESSION)
WARNING: rejected rule (DATA_ALLOWED_IN_IF -> EXPRESSION) in state 68
