Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> EXPRESSION
Rule 2     STATEMENT -> ASIGNATION
Rule 3     STATEMENT -> STRUCTURE_FOR
Rule 4     STATEMENT -> STRUCTURE_IF
Rule 5     STATEMENT -> STRUCTURE_WHILE
Rule 6     ASIGNATION -> ID ASIGN EXPRESSION
Rule 7     EXPRESSION -> NUMBER
Rule 8     EXPRESSION -> FLOAT
Rule 9     EXPRESSION -> BOOLEAN
Rule 10    EXPRESSION -> STRING
Rule 11    EXPRESSION -> OTHERSTRINGDECLARATION
Rule 12    EXPRESSION -> ARRAY
Rule 13    EXPRESSION -> HASH
Rule 14    EXPRESSION -> FUNTIONS_ARRAY
Rule 15    EXPRESSION -> FUNTIONS_HASH
Rule 16    EXPRESSION -> LOGIC_NOT EXPRESSION
Rule 17    EXPRESSION -> EXPRESSION_MAT
Rule 18    EXPRESSION -> EXPRESSION_CONCAT
Rule 19    EXPRESSION -> PUTS EXPRESSION
Rule 20    EXPRESSION -> PUTS ID
Rule 21    EXPRESSION -> GETS EXPRESSION
Rule 22    EXPRESSION -> FUNCTIONS_STRING
Rule 23    EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
Rule 24    EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
Rule 25    OPERATOR_COMP_BOOLEAN -> EQUAL
Rule 26    OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT
Rule 27    OPERATOR_COMP_BOOLEAN -> LOGIC_AND
Rule 28    OPERATOR_COMP_BOOLEAN -> LOGIC_OR
Rule 29    OPERATOR_COMP_BOOLEAN -> PIPE
Rule 30    EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF
Rule 31    EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
Rule 32    EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN
Rule 33    EXPRESSION_MAT -> DATANF
Rule 34    DATANF -> NUMBER
Rule 35    DATANF -> FLOAT
Rule 36    DATANF -> ID
Rule 37    EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
Rule 38    EXPRESSION_CONCAT -> DATASTRING
Rule 39    EXPRESSION_CONCAT -> ARRAY
Rule 40    DATASTRING -> STRING
Rule 41    DATASTRING -> OTHERSTRINGDECLARATION
Rule 42    FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING
Rule 43    FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING
Rule 44    FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION
Rule 45    FUNCTIONS_ALLOWED_STRING -> UPCASE
Rule 46    ARRAY -> ALFT DATA ARGT
Rule 47    FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY
Rule 48    FUNTIONS_ALLOWED_ARRAY -> MIN
Rule 49    FUNTIONS_ALLOWED_ARRAY -> FIRST
Rule 50    FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY
Rule 51    MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB
Rule 52    DATA_REPEAT_MAP -> STATEMENT
Rule 53    DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP
Rule 54    DATA_ALLOWED_IN_MAP -> ASIGNATION
Rule 55    DATA_ALLOWED_IN_MAP -> EXPRESSION
Rule 56    HASH -> OPENINGCB REGISTRY CLOSURECB
Rule 57    REGISTRY -> STRING HASHROCKET KEY
Rule 58    KEY -> NUMBER
Rule 59    KEY -> STRING
Rule 60    FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH
Rule 61    FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY
Rule 62    FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN
Rule 63    FUNTIONS_ALLOWED_HASH -> SIZE
Rule 64    REGISTRY -> REGISTRY COMMA REGISTRY
Rule 65    STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END
Rule 66    STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO
Rule 67    STRUCTURE_IN_FOR -> FOR ID IN ID DO
Rule 68    DATA_REPEAT -> DATA_ALLOWED_IN_FOR
Rule 69    DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT
Rule 70    DATA_ALLOWED_IN_FOR -> ASIGNATION
Rule 71    DATA_ALLOWED_IN_FOR -> EXPRESSION
Rule 72    STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END
Rule 73    STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN
Rule 74    DATA_REPEAT -> DATA_ALLOWED_IN_IF
Rule 75    DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT
Rule 76    DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
Rule 77    DATA_ALLOWED_IN_IF -> ASIGNATION
Rule 78    DATA_ALLOWED_IN_IF -> EXPRESSION
Rule 79    STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END
Rule 80    STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN
Rule 81    DATA_REPEAT -> DATA_ALLOWED_IN_WHILE
Rule 82    DATA_REPEAT -> DATA_ALLOWED_IN_WHILE DATA_REPEAT
Rule 83    DATA_ALLOWED_IN_WHILE -> ASIGNATION
Rule 84    DATA_ALLOWED_IN_WHILE -> EXPRESSION
Rule 85    DATA -> NUMBER
Rule 86    DATA -> FLOAT
Rule 87    DATA -> BOOLEAN
Rule 88    DATA -> STRING
Rule 89    DATA -> DATA COMMA DATA
Rule 90    BOOLEAN -> TRUE
Rule 91    BOOLEAN -> FALSE
Rule 92    BOOLEAN -> LOGIC_NOT TRUE
Rule 93    BOOLEAN -> LOGIC_NOT FALSE
Rule 94    OPERATOR_MAT -> PLUS
Rule 95    OPERATOR_MAT -> MINUS
Rule 96    OPERATOR_MAT -> TIMES
Rule 97    OPERATOR_MAT -> DIVIDE
Rule 98    OPERATOR_MAT -> EXPONENTIATION
Rule 99    OPERATOR_COMP_MAT -> EQUAL
Rule 100   OPERATOR_COMP_MAT -> EQUAL_STRICT
Rule 101   OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL
Rule 102   OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL
Rule 103   OPERATOR_COMP_MAT -> MINOR
Rule 104   OPERATOR_COMP_MAT -> GREATER
Rule 105   OPERATOR_COMP_MAT -> LOGIC_AND
Rule 106   OPERATOR_COMP_MAT -> LOGIC_OR
Rule 107   OPERATOR_COMP_MAT -> PIPE

Terminals, with rules where they appear

ALFT                 : 46
AND                  : 
ARGT                 : 46
ASIGN                : 6
CLOSURECB            : 51 56
COMMA                : 64 89
DIVIDE               : 97
DO                   : 66 67
ELSE                 : 76
EMPTY                : 44
END                  : 65 72 79
EQUAL                : 25 99
EQUAL_STRICT         : 26 100
EXPONENTIATION       : 98
FALSE                : 91 93
FIRST                : 49
FLOAT                : 8 35 86
FOR                  : 66 67
GETS                 : 21
GREATER              : 104
GREATER_THAN_OR_EQUAL : 101
HASHROCKET           : 57
HAS_VALUE            : 61
ID                   : 6 20 36 51 66 67 67
IF                   : 73
IN                   : 66 67
INCLUDE              : 43
LOGIC_AND            : 27 105
LOGIC_NOT            : 16 92 93
LOGIC_OR             : 28 106
LPAREN               : 32 62 73 80
MAP                  : 51
MERGE                : 62
MIN                  : 48
MINOR                : 103
MINOR_THAN_OR_EQUAL  : 102
MINUS                : 95
NUMBER               : 7 34 58 85
OPENINGCB            : 51 56
OR                   : 
OTHERSTRINGDECLARATION : 11 41
PIPE                 : 29 51 51 107
PLUS                 : 37 94
POINT                : 42 47 60
PUTS                 : 19 20
QUESTION             : 43 44 61
RPAREN               : 32 62 73 80
SIZE                 : 63
STRING               : 10 40 57 59 88
TIMES                : 96
TRUE                 : 80 90 92
UPCASE               : 45
WHILE                : 80
error                : 

Nonterminals, with rules where they appear

ARRAY                : 12 39 47 66
ASIGNATION           : 2 54 70 77 83
BOOLEAN              : 9 23 23 73 87
DATA                 : 46 89 89
DATANF               : 30 30 33
DATASTRING           : 24 24 38 42 43
DATA_ALLOWED_IN_FOR  : 68 69
DATA_ALLOWED_IN_IF   : 74 75 76 76
DATA_ALLOWED_IN_MAP  : 
DATA_ALLOWED_IN_WHILE : 81 82
DATA_REPEAT          : 65 69 72 75 79 82
DATA_REPEAT_MAP      : 51 53
EXPRESSION           : 1 6 16 19 21 55 71 78 84
EXPRESSION_CONCAT    : 18 37 37
EXPRESSION_MAT       : 17 31 31 32
FUNCTIONS_ALLOWED_STRING : 42
FUNCTIONS_STRING     : 22
FUNTIONS_ALLOWED_ARRAY : 47
FUNTIONS_ALLOWED_HASH : 60
FUNTIONS_ARRAY       : 14
FUNTIONS_HASH        : 15
HASH                 : 13 60 62
KEY                  : 57 61
MAP_ARRAY            : 50
OPERATOR_COMP_BOOLEAN : 23 24
OPERATOR_COMP_MAT    : 30
OPERATOR_MAT         : 31
REGISTRY             : 56 64 64
STATEMENT            : 52 53 0
STRUCTURE_FOR        : 3
STRUCTURE_IF         : 4
STRUCTURE_IN_FOR     : 65
STRUCTURE_IN_IF      : 72
STRUCTURE_IN_WHILE   : 79
STRUCTURE_WHILE      : 5

Parsing method: LALR

state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (5) STATEMENT -> . STRUCTURE_WHILE
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (65) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (72) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (79) STRUCTURE_WHILE -> . STRUCTURE_IN_WHILE DATA_REPEAT END
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID
    (66) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (67) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (73) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN
    (80) STRUCTURE_IN_WHILE -> . WHILE LPAREN TRUE RPAREN

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    ID              shift and go to state 20
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35

    STATEMENT                      shift and go to state 1
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    STRUCTURE_WHILE                shift and go to state 6
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24
    STRUCTURE_IN_FOR               shift and go to state 25
    STRUCTURE_IN_IF                shift and go to state 26
    STRUCTURE_IN_WHILE             shift and go to state 27

state 1

    (0) S' -> STATEMENT .



state 2

    (1) STATEMENT -> EXPRESSION .

    $end            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    NUMBER          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FLOAT           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    STRING          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 1 (STATEMENT -> EXPRESSION .)
    PUTS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    GETS            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ID              reduce using rule 1 (STATEMENT -> EXPRESSION .)
    TRUE            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FALSE           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    ALFT            reduce using rule 1 (STATEMENT -> EXPRESSION .)
    OPENINGCB       reduce using rule 1 (STATEMENT -> EXPRESSION .)
    LPAREN          reduce using rule 1 (STATEMENT -> EXPRESSION .)
    FOR             reduce using rule 1 (STATEMENT -> EXPRESSION .)
    IF              reduce using rule 1 (STATEMENT -> EXPRESSION .)
    WHILE           reduce using rule 1 (STATEMENT -> EXPRESSION .)
    CLOSURECB       reduce using rule 1 (STATEMENT -> EXPRESSION .)


state 3

    (2) STATEMENT -> ASIGNATION .

    $end            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    NUMBER          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FLOAT           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    STRING          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 2 (STATEMENT -> ASIGNATION .)
    PUTS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    GETS            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ID              reduce using rule 2 (STATEMENT -> ASIGNATION .)
    TRUE            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FALSE           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    ALFT            reduce using rule 2 (STATEMENT -> ASIGNATION .)
    OPENINGCB       reduce using rule 2 (STATEMENT -> ASIGNATION .)
    LPAREN          reduce using rule 2 (STATEMENT -> ASIGNATION .)
    FOR             reduce using rule 2 (STATEMENT -> ASIGNATION .)
    IF              reduce using rule 2 (STATEMENT -> ASIGNATION .)
    WHILE           reduce using rule 2 (STATEMENT -> ASIGNATION .)
    CLOSURECB       reduce using rule 2 (STATEMENT -> ASIGNATION .)


state 4

    (3) STATEMENT -> STRUCTURE_FOR .

    $end            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    NUMBER          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FLOAT           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    STRING          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    OTHERSTRINGDECLARATION reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LOGIC_NOT       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    PUTS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    GETS            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ID              reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    TRUE            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FALSE           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    ALFT            reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    OPENINGCB       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    LPAREN          reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    FOR             reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    IF              reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    WHILE           reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)
    CLOSURECB       reduce using rule 3 (STATEMENT -> STRUCTURE_FOR .)


state 5

    (4) STATEMENT -> STRUCTURE_IF .

    $end            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    NUMBER          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FLOAT           reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    STRING          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    OTHERSTRINGDECLARATION reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    LOGIC_NOT       reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    PUTS            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    GETS            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    ID              reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    TRUE            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FALSE           reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    ALFT            reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    OPENINGCB       reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    LPAREN          reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    FOR             reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    IF              reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    WHILE           reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)
    CLOSURECB       reduce using rule 4 (STATEMENT -> STRUCTURE_IF .)


state 6

    (5) STATEMENT -> STRUCTURE_WHILE .

    $end            reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    NUMBER          reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    FLOAT           reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    STRING          reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    OTHERSTRINGDECLARATION reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    LOGIC_NOT       reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    PUTS            reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    GETS            reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    ID              reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    TRUE            reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    FALSE           reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    ALFT            reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    OPENINGCB       reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    LPAREN          reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    FOR             reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    IF              reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    WHILE           reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)
    CLOSURECB       reduce using rule 5 (STATEMENT -> STRUCTURE_WHILE .)


state 7

    (7) EXPRESSION -> NUMBER .
    (34) DATANF -> NUMBER .

  ! reduce/reduce conflict for $end resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ID resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for GETS resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ALFT resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (EXPRESSION -> NUMBER .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 7 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 7 (EXPRESSION -> NUMBER .)
    ID              reduce using rule 7 (EXPRESSION -> NUMBER .)
    NUMBER          reduce using rule 7 (EXPRESSION -> NUMBER .)
    FLOAT           reduce using rule 7 (EXPRESSION -> NUMBER .)
    STRING          reduce using rule 7 (EXPRESSION -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 7 (EXPRESSION -> NUMBER .)
    LOGIC_NOT       reduce using rule 7 (EXPRESSION -> NUMBER .)
    PUTS            reduce using rule 7 (EXPRESSION -> NUMBER .)
    GETS            reduce using rule 7 (EXPRESSION -> NUMBER .)
    TRUE            reduce using rule 7 (EXPRESSION -> NUMBER .)
    FALSE           reduce using rule 7 (EXPRESSION -> NUMBER .)
    ALFT            reduce using rule 7 (EXPRESSION -> NUMBER .)
    OPENINGCB       reduce using rule 7 (EXPRESSION -> NUMBER .)
    LPAREN          reduce using rule 7 (EXPRESSION -> NUMBER .)
    END             reduce using rule 7 (EXPRESSION -> NUMBER .)
    ELSE            reduce using rule 7 (EXPRESSION -> NUMBER .)
    FOR             reduce using rule 7 (EXPRESSION -> NUMBER .)
    IF              reduce using rule 7 (EXPRESSION -> NUMBER .)
    WHILE           reduce using rule 7 (EXPRESSION -> NUMBER .)
    CLOSURECB       reduce using rule 7 (EXPRESSION -> NUMBER .)
    EQUAL           reduce using rule 34 (DATANF -> NUMBER .)
    EQUAL_STRICT    reduce using rule 34 (DATANF -> NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 34 (DATANF -> NUMBER .)
    MINOR_THAN_OR_EQUAL reduce using rule 34 (DATANF -> NUMBER .)
    MINOR           reduce using rule 34 (DATANF -> NUMBER .)
    GREATER         reduce using rule 34 (DATANF -> NUMBER .)
    LOGIC_AND       reduce using rule 34 (DATANF -> NUMBER .)
    LOGIC_OR        reduce using rule 34 (DATANF -> NUMBER .)
    PIPE            reduce using rule 34 (DATANF -> NUMBER .)
    PLUS            reduce using rule 34 (DATANF -> NUMBER .)
    MINUS           reduce using rule 34 (DATANF -> NUMBER .)
    TIMES           reduce using rule 34 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 34 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 34 (DATANF -> NUMBER .)

  ! $end            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! ID              [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! STRING          [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! LOGIC_NOT       [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! PUTS            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! GETS            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! TRUE            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! FALSE           [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! ALFT            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! OPENINGCB       [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! END             [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! ELSE            [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! FOR             [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! IF              [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! WHILE           [ reduce using rule 34 (DATANF -> NUMBER .) ]
  ! CLOSURECB       [ reduce using rule 34 (DATANF -> NUMBER .) ]


state 8

    (8) EXPRESSION -> FLOAT .
    (35) DATANF -> FLOAT .

  ! reduce/reduce conflict for $end resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ID resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for NUMBER resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for GETS resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ALFT resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for WHILE resolved using rule 8 (EXPRESSION -> FLOAT .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 8 (EXPRESSION -> FLOAT .)
    $end            reduce using rule 8 (EXPRESSION -> FLOAT .)
    ID              reduce using rule 8 (EXPRESSION -> FLOAT .)
    NUMBER          reduce using rule 8 (EXPRESSION -> FLOAT .)
    FLOAT           reduce using rule 8 (EXPRESSION -> FLOAT .)
    STRING          reduce using rule 8 (EXPRESSION -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 8 (EXPRESSION -> FLOAT .)
    LOGIC_NOT       reduce using rule 8 (EXPRESSION -> FLOAT .)
    PUTS            reduce using rule 8 (EXPRESSION -> FLOAT .)
    GETS            reduce using rule 8 (EXPRESSION -> FLOAT .)
    TRUE            reduce using rule 8 (EXPRESSION -> FLOAT .)
    FALSE           reduce using rule 8 (EXPRESSION -> FLOAT .)
    ALFT            reduce using rule 8 (EXPRESSION -> FLOAT .)
    OPENINGCB       reduce using rule 8 (EXPRESSION -> FLOAT .)
    LPAREN          reduce using rule 8 (EXPRESSION -> FLOAT .)
    END             reduce using rule 8 (EXPRESSION -> FLOAT .)
    ELSE            reduce using rule 8 (EXPRESSION -> FLOAT .)
    FOR             reduce using rule 8 (EXPRESSION -> FLOAT .)
    IF              reduce using rule 8 (EXPRESSION -> FLOAT .)
    WHILE           reduce using rule 8 (EXPRESSION -> FLOAT .)
    CLOSURECB       reduce using rule 8 (EXPRESSION -> FLOAT .)
    EQUAL           reduce using rule 35 (DATANF -> FLOAT .)
    EQUAL_STRICT    reduce using rule 35 (DATANF -> FLOAT .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (DATANF -> FLOAT .)
    MINOR_THAN_OR_EQUAL reduce using rule 35 (DATANF -> FLOAT .)
    MINOR           reduce using rule 35 (DATANF -> FLOAT .)
    GREATER         reduce using rule 35 (DATANF -> FLOAT .)
    LOGIC_AND       reduce using rule 35 (DATANF -> FLOAT .)
    LOGIC_OR        reduce using rule 35 (DATANF -> FLOAT .)
    PIPE            reduce using rule 35 (DATANF -> FLOAT .)
    PLUS            reduce using rule 35 (DATANF -> FLOAT .)
    MINUS           reduce using rule 35 (DATANF -> FLOAT .)
    TIMES           reduce using rule 35 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 35 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 35 (DATANF -> FLOAT .)

  ! $end            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! ID              [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! NUMBER          [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! STRING          [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! LOGIC_NOT       [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! PUTS            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! GETS            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! TRUE            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! FALSE           [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! ALFT            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! OPENINGCB       [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! LPAREN          [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! END             [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! ELSE            [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! FOR             [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! IF              [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! WHILE           [ reduce using rule 35 (DATANF -> FLOAT .) ]
  ! CLOSURECB       [ reduce using rule 35 (DATANF -> FLOAT .) ]


state 9

    (9) EXPRESSION -> BOOLEAN .
    (23) EXPRESSION -> BOOLEAN . OPERATOR_COMP_BOOLEAN BOOLEAN
    (25) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (26) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (27) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (28) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (29) OPERATOR_COMP_BOOLEAN -> . PIPE

    $end            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    ID              reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    NUMBER          reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    FLOAT           reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    STRING          reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    LOGIC_NOT       reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    PUTS            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    GETS            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    TRUE            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    FALSE           reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    ALFT            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    OPENINGCB       reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    LPAREN          reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    END             reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    ELSE            reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    FOR             reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    IF              reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    WHILE           reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    CLOSURECB       reduce using rule 9 (EXPRESSION -> BOOLEAN .)
    EQUAL           shift and go to state 37
    EQUAL_STRICT    shift and go to state 38
    LOGIC_AND       shift and go to state 39
    LOGIC_OR        shift and go to state 40
    PIPE            shift and go to state 41

    OPERATOR_COMP_BOOLEAN          shift and go to state 36

state 10

    (10) EXPRESSION -> STRING .
    (40) DATASTRING -> STRING .

  ! reduce/reduce conflict for $end resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ID resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for PUTS resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for GETS resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ALFT resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for END resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (EXPRESSION -> STRING .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 10 (EXPRESSION -> STRING .)
    $end            reduce using rule 10 (EXPRESSION -> STRING .)
    ID              reduce using rule 10 (EXPRESSION -> STRING .)
    NUMBER          reduce using rule 10 (EXPRESSION -> STRING .)
    FLOAT           reduce using rule 10 (EXPRESSION -> STRING .)
    STRING          reduce using rule 10 (EXPRESSION -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 10 (EXPRESSION -> STRING .)
    LOGIC_NOT       reduce using rule 10 (EXPRESSION -> STRING .)
    PUTS            reduce using rule 10 (EXPRESSION -> STRING .)
    GETS            reduce using rule 10 (EXPRESSION -> STRING .)
    TRUE            reduce using rule 10 (EXPRESSION -> STRING .)
    FALSE           reduce using rule 10 (EXPRESSION -> STRING .)
    ALFT            reduce using rule 10 (EXPRESSION -> STRING .)
    OPENINGCB       reduce using rule 10 (EXPRESSION -> STRING .)
    LPAREN          reduce using rule 10 (EXPRESSION -> STRING .)
    END             reduce using rule 10 (EXPRESSION -> STRING .)
    ELSE            reduce using rule 10 (EXPRESSION -> STRING .)
    FOR             reduce using rule 10 (EXPRESSION -> STRING .)
    IF              reduce using rule 10 (EXPRESSION -> STRING .)
    WHILE           reduce using rule 10 (EXPRESSION -> STRING .)
    CLOSURECB       reduce using rule 10 (EXPRESSION -> STRING .)
    POINT           reduce using rule 40 (DATASTRING -> STRING .)
    EQUAL           reduce using rule 40 (DATASTRING -> STRING .)
    EQUAL_STRICT    reduce using rule 40 (DATASTRING -> STRING .)
    LOGIC_AND       reduce using rule 40 (DATASTRING -> STRING .)
    LOGIC_OR        reduce using rule 40 (DATASTRING -> STRING .)
    PIPE            reduce using rule 40 (DATASTRING -> STRING .)
    PLUS            reduce using rule 40 (DATASTRING -> STRING .)

  ! $end            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! ID              [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! NUMBER          [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! FLOAT           [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! STRING          [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! LOGIC_NOT       [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! PUTS            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! GETS            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! TRUE            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! FALSE           [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! ALFT            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! OPENINGCB       [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! LPAREN          [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! END             [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! ELSE            [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! FOR             [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! IF              [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! WHILE           [ reduce using rule 40 (DATASTRING -> STRING .) ]
  ! CLOSURECB       [ reduce using rule 40 (DATASTRING -> STRING .) ]


state 11

    (11) EXPRESSION -> OTHERSTRINGDECLARATION .
    (41) DATASTRING -> OTHERSTRINGDECLARATION .

  ! reduce/reduce conflict for $end resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ID resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for GETS resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for END resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for IF resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    OPENINGCB       reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    ELSE            reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    IF              reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    WHILE           reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 11 (EXPRESSION -> OTHERSTRINGDECLARATION .)
    POINT           reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    EQUAL           reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    EQUAL_STRICT    reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_AND       reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_OR        reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PIPE            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PLUS            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)

  ! $end            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ID              [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! NUMBER          [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FLOAT           [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! STRING          [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LOGIC_NOT       [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! PUTS            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! GETS            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! TRUE            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FALSE           [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ALFT            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! OPENINGCB       [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! LPAREN          [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! END             [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! ELSE            [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! FOR             [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! IF              [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! WHILE           [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]
  ! CLOSURECB       [ reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .) ]


state 12

    (12) EXPRESSION -> ARRAY .
    (47) FUNTIONS_ARRAY -> ARRAY . POINT FUNTIONS_ALLOWED_ARRAY
    (39) EXPRESSION_CONCAT -> ARRAY .

  ! reduce/reduce conflict for $end resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ID resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for GETS resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ALFT resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for LPAREN resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for END resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for IF resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (EXPRESSION -> ARRAY .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 12 (EXPRESSION -> ARRAY .)
    $end            reduce using rule 12 (EXPRESSION -> ARRAY .)
    ID              reduce using rule 12 (EXPRESSION -> ARRAY .)
    NUMBER          reduce using rule 12 (EXPRESSION -> ARRAY .)
    FLOAT           reduce using rule 12 (EXPRESSION -> ARRAY .)
    STRING          reduce using rule 12 (EXPRESSION -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 12 (EXPRESSION -> ARRAY .)
    LOGIC_NOT       reduce using rule 12 (EXPRESSION -> ARRAY .)
    PUTS            reduce using rule 12 (EXPRESSION -> ARRAY .)
    GETS            reduce using rule 12 (EXPRESSION -> ARRAY .)
    TRUE            reduce using rule 12 (EXPRESSION -> ARRAY .)
    FALSE           reduce using rule 12 (EXPRESSION -> ARRAY .)
    ALFT            reduce using rule 12 (EXPRESSION -> ARRAY .)
    OPENINGCB       reduce using rule 12 (EXPRESSION -> ARRAY .)
    LPAREN          reduce using rule 12 (EXPRESSION -> ARRAY .)
    END             reduce using rule 12 (EXPRESSION -> ARRAY .)
    ELSE            reduce using rule 12 (EXPRESSION -> ARRAY .)
    FOR             reduce using rule 12 (EXPRESSION -> ARRAY .)
    IF              reduce using rule 12 (EXPRESSION -> ARRAY .)
    WHILE           reduce using rule 12 (EXPRESSION -> ARRAY .)
    CLOSURECB       reduce using rule 12 (EXPRESSION -> ARRAY .)
    POINT           shift and go to state 42
    PLUS            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)

  ! $end            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ID              [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! NUMBER          [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FLOAT           [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! STRING          [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LOGIC_NOT       [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! PUTS            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! GETS            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! TRUE            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FALSE           [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ALFT            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! OPENINGCB       [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! LPAREN          [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! END             [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! ELSE            [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! FOR             [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! IF              [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! WHILE           [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]
  ! CLOSURECB       [ reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .) ]


state 13

    (13) EXPRESSION -> HASH .
    (60) FUNTIONS_HASH -> HASH . POINT FUNTIONS_ALLOWED_HASH

    $end            reduce using rule 13 (EXPRESSION -> HASH .)
    ID              reduce using rule 13 (EXPRESSION -> HASH .)
    NUMBER          reduce using rule 13 (EXPRESSION -> HASH .)
    FLOAT           reduce using rule 13 (EXPRESSION -> HASH .)
    STRING          reduce using rule 13 (EXPRESSION -> HASH .)
    OTHERSTRINGDECLARATION reduce using rule 13 (EXPRESSION -> HASH .)
    LOGIC_NOT       reduce using rule 13 (EXPRESSION -> HASH .)
    PUTS            reduce using rule 13 (EXPRESSION -> HASH .)
    GETS            reduce using rule 13 (EXPRESSION -> HASH .)
    TRUE            reduce using rule 13 (EXPRESSION -> HASH .)
    FALSE           reduce using rule 13 (EXPRESSION -> HASH .)
    ALFT            reduce using rule 13 (EXPRESSION -> HASH .)
    OPENINGCB       reduce using rule 13 (EXPRESSION -> HASH .)
    LPAREN          reduce using rule 13 (EXPRESSION -> HASH .)
    END             reduce using rule 13 (EXPRESSION -> HASH .)
    ELSE            reduce using rule 13 (EXPRESSION -> HASH .)
    FOR             reduce using rule 13 (EXPRESSION -> HASH .)
    IF              reduce using rule 13 (EXPRESSION -> HASH .)
    WHILE           reduce using rule 13 (EXPRESSION -> HASH .)
    CLOSURECB       reduce using rule 13 (EXPRESSION -> HASH .)
    POINT           shift and go to state 43


state 14

    (14) EXPRESSION -> FUNTIONS_ARRAY .

    $end            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    ID              reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    NUMBER          reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    FLOAT           reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    STRING          reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    LOGIC_NOT       reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    PUTS            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    GETS            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    TRUE            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    FALSE           reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    ALFT            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    OPENINGCB       reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    LPAREN          reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    END             reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    ELSE            reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    FOR             reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    IF              reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    WHILE           reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)
    CLOSURECB       reduce using rule 14 (EXPRESSION -> FUNTIONS_ARRAY .)


state 15

    (15) EXPRESSION -> FUNTIONS_HASH .

    $end            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    ID              reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    NUMBER          reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    FLOAT           reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    STRING          reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    OTHERSTRINGDECLARATION reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    LOGIC_NOT       reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    PUTS            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    GETS            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    TRUE            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    FALSE           reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    ALFT            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    OPENINGCB       reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    LPAREN          reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    END             reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    ELSE            reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    FOR             reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    IF              reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    WHILE           reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)
    CLOSURECB       reduce using rule 15 (EXPRESSION -> FUNTIONS_HASH .)


state 16

    (16) EXPRESSION -> LOGIC_NOT . EXPRESSION
    (92) BOOLEAN -> LOGIC_NOT . TRUE
    (93) BOOLEAN -> LOGIC_NOT . FALSE
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 47

    EXPRESSION                     shift and go to state 44
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 17

    (17) EXPRESSION -> EXPRESSION_MAT .
    (31) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (94) OPERATOR_MAT -> . PLUS
    (95) OPERATOR_MAT -> . MINUS
    (96) OPERATOR_MAT -> . TIMES
    (97) OPERATOR_MAT -> . DIVIDE
    (98) OPERATOR_MAT -> . EXPONENTIATION

    $end            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    ID              reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    NUMBER          reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    FLOAT           reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    STRING          reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    PUTS            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    GETS            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    TRUE            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    FALSE           reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    ALFT            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    OPENINGCB       reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    LPAREN          reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    END             reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    ELSE            reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    FOR             reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    IF              reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    WHILE           reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 17 (EXPRESSION -> EXPRESSION_MAT .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    EXPONENTIATION  shift and go to state 53

    OPERATOR_MAT                   shift and go to state 48

state 18

    (18) EXPRESSION -> EXPRESSION_CONCAT .
    (37) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

    $end            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    ID              reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    STRING          reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    PUTS            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    GETS            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    TRUE            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    FALSE           reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    ALFT            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    OPENINGCB       reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    END             reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    ELSE            reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    FOR             reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    IF              reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    WHILE           reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 18 (EXPRESSION -> EXPRESSION_CONCAT .)
    PLUS            shift and go to state 54


state 19

    (19) EXPRESSION -> PUTS . EXPRESSION
    (20) EXPRESSION -> PUTS . ID
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    ID              shift and go to state 56
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    EXPRESSION                     shift and go to state 55
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 20

    (6) ASIGNATION -> ID . ASIGN EXPRESSION
    (36) DATANF -> ID .

    ASIGN           shift and go to state 57
    EQUAL           reduce using rule 36 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 36 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR           reduce using rule 36 (DATANF -> ID .)
    GREATER         reduce using rule 36 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 36 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 36 (DATANF -> ID .)
    PIPE            reduce using rule 36 (DATANF -> ID .)
    PLUS            reduce using rule 36 (DATANF -> ID .)
    MINUS           reduce using rule 36 (DATANF -> ID .)
    TIMES           reduce using rule 36 (DATANF -> ID .)
    DIVIDE          reduce using rule 36 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 36 (DATANF -> ID .)
    $end            reduce using rule 36 (DATANF -> ID .)
    ID              reduce using rule 36 (DATANF -> ID .)
    NUMBER          reduce using rule 36 (DATANF -> ID .)
    FLOAT           reduce using rule 36 (DATANF -> ID .)
    STRING          reduce using rule 36 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 36 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 36 (DATANF -> ID .)
    PUTS            reduce using rule 36 (DATANF -> ID .)
    GETS            reduce using rule 36 (DATANF -> ID .)
    TRUE            reduce using rule 36 (DATANF -> ID .)
    FALSE           reduce using rule 36 (DATANF -> ID .)
    ALFT            reduce using rule 36 (DATANF -> ID .)
    OPENINGCB       reduce using rule 36 (DATANF -> ID .)
    LPAREN          reduce using rule 36 (DATANF -> ID .)
    END             reduce using rule 36 (DATANF -> ID .)
    ELSE            reduce using rule 36 (DATANF -> ID .)
    FOR             reduce using rule 36 (DATANF -> ID .)
    IF              reduce using rule 36 (DATANF -> ID .)
    WHILE           reduce using rule 36 (DATANF -> ID .)
    CLOSURECB       reduce using rule 36 (DATANF -> ID .)


state 21

    (21) EXPRESSION -> GETS . EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 47

    EXPRESSION                     shift and go to state 58
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 22

    (22) EXPRESSION -> FUNCTIONS_STRING .

    $end            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    ID              reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    NUMBER          reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    FLOAT           reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    STRING          reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    OTHERSTRINGDECLARATION reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    LOGIC_NOT       reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    PUTS            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    GETS            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    TRUE            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    FALSE           reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    ALFT            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    OPENINGCB       reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    LPAREN          reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    END             reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    ELSE            reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    FOR             reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    IF              reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    WHILE           reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)
    CLOSURECB       reduce using rule 22 (EXPRESSION -> FUNCTIONS_STRING .)


state 23

    (24) EXPRESSION -> DATASTRING . OPERATOR_COMP_BOOLEAN DATASTRING
    (38) EXPRESSION_CONCAT -> DATASTRING .
    (42) FUNCTIONS_STRING -> DATASTRING . POINT FUNCTIONS_ALLOWED_STRING
    (25) OPERATOR_COMP_BOOLEAN -> . EQUAL
    (26) OPERATOR_COMP_BOOLEAN -> . EQUAL_STRICT
    (27) OPERATOR_COMP_BOOLEAN -> . LOGIC_AND
    (28) OPERATOR_COMP_BOOLEAN -> . LOGIC_OR
    (29) OPERATOR_COMP_BOOLEAN -> . PIPE

    PLUS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    OPENINGCB       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ELSE            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    IF              reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    WHILE           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    POINT           shift and go to state 60
    EQUAL           shift and go to state 37
    EQUAL_STRICT    shift and go to state 38
    LOGIC_AND       shift and go to state 39
    LOGIC_OR        shift and go to state 40
    PIPE            shift and go to state 41

    OPERATOR_COMP_BOOLEAN          shift and go to state 59

state 24

    (30) EXPRESSION -> DATANF . OPERATOR_COMP_MAT DATANF
    (33) EXPRESSION_MAT -> DATANF .
    (99) OPERATOR_COMP_MAT -> . EQUAL
    (100) OPERATOR_COMP_MAT -> . EQUAL_STRICT
    (101) OPERATOR_COMP_MAT -> . GREATER_THAN_OR_EQUAL
    (102) OPERATOR_COMP_MAT -> . MINOR_THAN_OR_EQUAL
    (103) OPERATOR_COMP_MAT -> . MINOR
    (104) OPERATOR_COMP_MAT -> . GREATER
    (105) OPERATOR_COMP_MAT -> . LOGIC_AND
    (106) OPERATOR_COMP_MAT -> . LOGIC_OR
    (107) OPERATOR_COMP_MAT -> . PIPE

    PLUS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    OPENINGCB       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ELSE            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    IF              reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    WHILE           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    EQUAL           shift and go to state 62
    EQUAL_STRICT    shift and go to state 63
    GREATER_THAN_OR_EQUAL shift and go to state 64
    MINOR_THAN_OR_EQUAL shift and go to state 65
    MINOR           shift and go to state 66
    GREATER         shift and go to state 67
    LOGIC_AND       shift and go to state 68
    LOGIC_OR        shift and go to state 69
    PIPE            shift and go to state 70

    OPERATOR_COMP_MAT              shift and go to state 61

state 25

    (65) STRUCTURE_FOR -> STRUCTURE_IN_FOR . DATA_REPEAT END
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_REPEAT                    shift and go to state 71
    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_ALLOWED_IN_IF             shift and go to state 73
    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 26

    (72) STRUCTURE_IF -> STRUCTURE_IN_IF . DATA_REPEAT END
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_REPEAT                    shift and go to state 77
    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_ALLOWED_IN_IF             shift and go to state 73
    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 27

    (79) STRUCTURE_WHILE -> STRUCTURE_IN_WHILE . DATA_REPEAT END
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_REPEAT                    shift and go to state 78
    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_ALLOWED_IN_IF             shift and go to state 73
    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 28

    (90) BOOLEAN -> TRUE .

    EQUAL           reduce using rule 90 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 90 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 90 (BOOLEAN -> TRUE .)
    $end            reduce using rule 90 (BOOLEAN -> TRUE .)
    ID              reduce using rule 90 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 90 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 90 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 90 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 90 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 90 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 90 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 90 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 90 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 90 (BOOLEAN -> TRUE .)
    OPENINGCB       reduce using rule 90 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 90 (BOOLEAN -> TRUE .)
    END             reduce using rule 90 (BOOLEAN -> TRUE .)
    ELSE            reduce using rule 90 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 90 (BOOLEAN -> TRUE .)
    IF              reduce using rule 90 (BOOLEAN -> TRUE .)
    WHILE           reduce using rule 90 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 90 (BOOLEAN -> TRUE .)
    ARGT            reduce using rule 90 (BOOLEAN -> TRUE .)
    COMMA           reduce using rule 90 (BOOLEAN -> TRUE .)
    RPAREN          reduce using rule 90 (BOOLEAN -> TRUE .)


state 29

    (91) BOOLEAN -> FALSE .

    EQUAL           reduce using rule 91 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 91 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 91 (BOOLEAN -> FALSE .)
    $end            reduce using rule 91 (BOOLEAN -> FALSE .)
    ID              reduce using rule 91 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 91 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 91 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 91 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 91 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 91 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 91 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 91 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 91 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 91 (BOOLEAN -> FALSE .)
    OPENINGCB       reduce using rule 91 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 91 (BOOLEAN -> FALSE .)
    END             reduce using rule 91 (BOOLEAN -> FALSE .)
    ELSE            reduce using rule 91 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 91 (BOOLEAN -> FALSE .)
    IF              reduce using rule 91 (BOOLEAN -> FALSE .)
    WHILE           reduce using rule 91 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 91 (BOOLEAN -> FALSE .)
    ARGT            reduce using rule 91 (BOOLEAN -> FALSE .)
    COMMA           reduce using rule 91 (BOOLEAN -> FALSE .)
    RPAREN          reduce using rule 91 (BOOLEAN -> FALSE .)


state 30

    (46) ARRAY -> ALFT . DATA ARGT
    (85) DATA -> . NUMBER
    (86) DATA -> . FLOAT
    (87) DATA -> . BOOLEAN
    (88) DATA -> . STRING
    (89) DATA -> . DATA COMMA DATA
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 80
    FLOAT           shift and go to state 81
    STRING          shift and go to state 83
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LOGIC_NOT       shift and go to state 84

    DATA                           shift and go to state 79
    BOOLEAN                        shift and go to state 82

state 31

    (56) HASH -> OPENINGCB . REGISTRY CLOSURECB
    (57) REGISTRY -> . STRING HASHROCKET KEY
    (64) REGISTRY -> . REGISTRY COMMA REGISTRY

    STRING          shift and go to state 86

    REGISTRY                       shift and go to state 85

state 32

    (32) EXPRESSION_MAT -> LPAREN . EXPRESSION_MAT RPAREN
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 89
    FLOAT           shift and go to state 90
    ID              shift and go to state 47

    EXPRESSION_MAT                 shift and go to state 87
    DATANF                         shift and go to state 88

state 33

    (66) STRUCTURE_IN_FOR -> FOR . ID IN ARRAY DO
    (67) STRUCTURE_IN_FOR -> FOR . ID IN ID DO

    ID              shift and go to state 91


state 34

    (73) STRUCTURE_IN_IF -> IF . LPAREN BOOLEAN RPAREN

    LPAREN          shift and go to state 92


state 35

    (80) STRUCTURE_IN_WHILE -> WHILE . LPAREN TRUE RPAREN

    LPAREN          shift and go to state 93


state 36

    (23) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN . BOOLEAN
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LOGIC_NOT       shift and go to state 84

    BOOLEAN                        shift and go to state 94

state 37

    (25) OPERATOR_COMP_BOOLEAN -> EQUAL .

    TRUE            reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    FALSE           reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    LOGIC_NOT       reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    STRING          reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> EQUAL .)
    OTHERSTRINGDECLARATION reduce using rule 25 (OPERATOR_COMP_BOOLEAN -> EQUAL .)


state 38

    (26) OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .

    TRUE            reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    FALSE           reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    LOGIC_NOT       reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    STRING          reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)
    OTHERSTRINGDECLARATION reduce using rule 26 (OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT .)


state 39

    (27) OPERATOR_COMP_BOOLEAN -> LOGIC_AND .

    TRUE            reduce using rule 27 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    FALSE           reduce using rule 27 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    LOGIC_NOT       reduce using rule 27 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    STRING          reduce using rule 27 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)
    OTHERSTRINGDECLARATION reduce using rule 27 (OPERATOR_COMP_BOOLEAN -> LOGIC_AND .)


state 40

    (28) OPERATOR_COMP_BOOLEAN -> LOGIC_OR .

    TRUE            reduce using rule 28 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    FALSE           reduce using rule 28 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    LOGIC_NOT       reduce using rule 28 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    STRING          reduce using rule 28 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)
    OTHERSTRINGDECLARATION reduce using rule 28 (OPERATOR_COMP_BOOLEAN -> LOGIC_OR .)


state 41

    (29) OPERATOR_COMP_BOOLEAN -> PIPE .

    TRUE            reduce using rule 29 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    FALSE           reduce using rule 29 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    LOGIC_NOT       reduce using rule 29 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    STRING          reduce using rule 29 (OPERATOR_COMP_BOOLEAN -> PIPE .)
    OTHERSTRINGDECLARATION reduce using rule 29 (OPERATOR_COMP_BOOLEAN -> PIPE .)


state 42

    (47) FUNTIONS_ARRAY -> ARRAY POINT . FUNTIONS_ALLOWED_ARRAY
    (48) FUNTIONS_ALLOWED_ARRAY -> . MIN
    (49) FUNTIONS_ALLOWED_ARRAY -> . FIRST
    (50) FUNTIONS_ALLOWED_ARRAY -> . MAP_ARRAY
    (51) MAP_ARRAY -> . MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    MIN             shift and go to state 96
    FIRST           shift and go to state 97
    MAP             shift and go to state 99

    FUNTIONS_ALLOWED_ARRAY         shift and go to state 95
    MAP_ARRAY                      shift and go to state 98

state 43

    (60) FUNTIONS_HASH -> HASH POINT . FUNTIONS_ALLOWED_HASH
    (61) FUNTIONS_ALLOWED_HASH -> . HAS_VALUE QUESTION KEY
    (62) FUNTIONS_ALLOWED_HASH -> . MERGE LPAREN HASH RPAREN
    (63) FUNTIONS_ALLOWED_HASH -> . SIZE

    HAS_VALUE       shift and go to state 101
    MERGE           shift and go to state 102
    SIZE            shift and go to state 103

    FUNTIONS_ALLOWED_HASH          shift and go to state 100

state 44

    (16) EXPRESSION -> LOGIC_NOT EXPRESSION .

    $end            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ID              reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    NUMBER          reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FLOAT           reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    STRING          reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LOGIC_NOT       reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    PUTS            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    GETS            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    TRUE            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FALSE           reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ALFT            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    OPENINGCB       reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    LPAREN          reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    END             reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    ELSE            reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    FOR             reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    IF              reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    WHILE           reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)
    CLOSURECB       reduce using rule 16 (EXPRESSION -> LOGIC_NOT EXPRESSION .)


state 45

    (92) BOOLEAN -> LOGIC_NOT TRUE .
    (90) BOOLEAN -> TRUE .

  ! reduce/reduce conflict for EQUAL resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PIPE resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ID resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for STRING resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for PUTS resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for GETS resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ALFT resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for END resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for ELSE resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 90 (BOOLEAN -> TRUE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 90 (BOOLEAN -> TRUE .)
    EQUAL           reduce using rule 90 (BOOLEAN -> TRUE .)
    EQUAL_STRICT    reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_AND       reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_OR        reduce using rule 90 (BOOLEAN -> TRUE .)
    PIPE            reduce using rule 90 (BOOLEAN -> TRUE .)
    $end            reduce using rule 90 (BOOLEAN -> TRUE .)
    ID              reduce using rule 90 (BOOLEAN -> TRUE .)
    NUMBER          reduce using rule 90 (BOOLEAN -> TRUE .)
    FLOAT           reduce using rule 90 (BOOLEAN -> TRUE .)
    STRING          reduce using rule 90 (BOOLEAN -> TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 90 (BOOLEAN -> TRUE .)
    LOGIC_NOT       reduce using rule 90 (BOOLEAN -> TRUE .)
    PUTS            reduce using rule 90 (BOOLEAN -> TRUE .)
    GETS            reduce using rule 90 (BOOLEAN -> TRUE .)
    TRUE            reduce using rule 90 (BOOLEAN -> TRUE .)
    FALSE           reduce using rule 90 (BOOLEAN -> TRUE .)
    ALFT            reduce using rule 90 (BOOLEAN -> TRUE .)
    OPENINGCB       reduce using rule 90 (BOOLEAN -> TRUE .)
    LPAREN          reduce using rule 90 (BOOLEAN -> TRUE .)
    END             reduce using rule 90 (BOOLEAN -> TRUE .)
    ELSE            reduce using rule 90 (BOOLEAN -> TRUE .)
    FOR             reduce using rule 90 (BOOLEAN -> TRUE .)
    IF              reduce using rule 90 (BOOLEAN -> TRUE .)
    WHILE           reduce using rule 90 (BOOLEAN -> TRUE .)
    CLOSURECB       reduce using rule 90 (BOOLEAN -> TRUE .)

  ! EQUAL           [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! EQUAL_STRICT    [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_AND       [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_OR        [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PIPE            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! $end            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ID              [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! NUMBER          [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FLOAT           [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! STRING          [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LOGIC_NOT       [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! PUTS            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! GETS            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! TRUE            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FALSE           [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ALFT            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! OPENINGCB       [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! LPAREN          [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! END             [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! ELSE            [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! FOR             [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! IF              [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! WHILE           [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]
  ! CLOSURECB       [ reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .) ]


state 46

    (93) BOOLEAN -> LOGIC_NOT FALSE .
    (91) BOOLEAN -> FALSE .

  ! reduce/reduce conflict for EQUAL resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for EQUAL_STRICT resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PIPE resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ID resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for STRING resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for PUTS resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for GETS resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ALFT resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for END resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for ELSE resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 91 (BOOLEAN -> FALSE .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 91 (BOOLEAN -> FALSE .)
    EQUAL           reduce using rule 91 (BOOLEAN -> FALSE .)
    EQUAL_STRICT    reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_AND       reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_OR        reduce using rule 91 (BOOLEAN -> FALSE .)
    PIPE            reduce using rule 91 (BOOLEAN -> FALSE .)
    $end            reduce using rule 91 (BOOLEAN -> FALSE .)
    ID              reduce using rule 91 (BOOLEAN -> FALSE .)
    NUMBER          reduce using rule 91 (BOOLEAN -> FALSE .)
    FLOAT           reduce using rule 91 (BOOLEAN -> FALSE .)
    STRING          reduce using rule 91 (BOOLEAN -> FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 91 (BOOLEAN -> FALSE .)
    LOGIC_NOT       reduce using rule 91 (BOOLEAN -> FALSE .)
    PUTS            reduce using rule 91 (BOOLEAN -> FALSE .)
    GETS            reduce using rule 91 (BOOLEAN -> FALSE .)
    TRUE            reduce using rule 91 (BOOLEAN -> FALSE .)
    FALSE           reduce using rule 91 (BOOLEAN -> FALSE .)
    ALFT            reduce using rule 91 (BOOLEAN -> FALSE .)
    OPENINGCB       reduce using rule 91 (BOOLEAN -> FALSE .)
    LPAREN          reduce using rule 91 (BOOLEAN -> FALSE .)
    END             reduce using rule 91 (BOOLEAN -> FALSE .)
    ELSE            reduce using rule 91 (BOOLEAN -> FALSE .)
    FOR             reduce using rule 91 (BOOLEAN -> FALSE .)
    IF              reduce using rule 91 (BOOLEAN -> FALSE .)
    WHILE           reduce using rule 91 (BOOLEAN -> FALSE .)
    CLOSURECB       reduce using rule 91 (BOOLEAN -> FALSE .)

  ! EQUAL           [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! EQUAL_STRICT    [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_AND       [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_OR        [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PIPE            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! $end            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ID              [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! NUMBER          [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FLOAT           [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! STRING          [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LOGIC_NOT       [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! PUTS            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! GETS            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! TRUE            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FALSE           [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ALFT            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! OPENINGCB       [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! LPAREN          [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! END             [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! ELSE            [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! FOR             [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! IF              [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! WHILE           [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]
  ! CLOSURECB       [ reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .) ]


state 47

    (36) DATANF -> ID .

    EQUAL           reduce using rule 36 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 36 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR           reduce using rule 36 (DATANF -> ID .)
    GREATER         reduce using rule 36 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 36 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 36 (DATANF -> ID .)
    PIPE            reduce using rule 36 (DATANF -> ID .)
    PLUS            reduce using rule 36 (DATANF -> ID .)
    MINUS           reduce using rule 36 (DATANF -> ID .)
    TIMES           reduce using rule 36 (DATANF -> ID .)
    DIVIDE          reduce using rule 36 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 36 (DATANF -> ID .)
    $end            reduce using rule 36 (DATANF -> ID .)
    ID              reduce using rule 36 (DATANF -> ID .)
    NUMBER          reduce using rule 36 (DATANF -> ID .)
    FLOAT           reduce using rule 36 (DATANF -> ID .)
    STRING          reduce using rule 36 (DATANF -> ID .)
    OTHERSTRINGDECLARATION reduce using rule 36 (DATANF -> ID .)
    LOGIC_NOT       reduce using rule 36 (DATANF -> ID .)
    PUTS            reduce using rule 36 (DATANF -> ID .)
    GETS            reduce using rule 36 (DATANF -> ID .)
    TRUE            reduce using rule 36 (DATANF -> ID .)
    FALSE           reduce using rule 36 (DATANF -> ID .)
    ALFT            reduce using rule 36 (DATANF -> ID .)
    OPENINGCB       reduce using rule 36 (DATANF -> ID .)
    LPAREN          reduce using rule 36 (DATANF -> ID .)
    END             reduce using rule 36 (DATANF -> ID .)
    ELSE            reduce using rule 36 (DATANF -> ID .)
    FOR             reduce using rule 36 (DATANF -> ID .)
    IF              reduce using rule 36 (DATANF -> ID .)
    WHILE           reduce using rule 36 (DATANF -> ID .)
    CLOSURECB       reduce using rule 36 (DATANF -> ID .)
    RPAREN          reduce using rule 36 (DATANF -> ID .)


state 48

    (31) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT . EXPRESSION_MAT
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 89
    FLOAT           shift and go to state 90
    ID              shift and go to state 47

    EXPRESSION_MAT                 shift and go to state 104
    DATANF                         shift and go to state 88

state 49

    (94) OPERATOR_MAT -> PLUS .

    LPAREN          reduce using rule 94 (OPERATOR_MAT -> PLUS .)
    NUMBER          reduce using rule 94 (OPERATOR_MAT -> PLUS .)
    FLOAT           reduce using rule 94 (OPERATOR_MAT -> PLUS .)
    ID              reduce using rule 94 (OPERATOR_MAT -> PLUS .)


state 50

    (95) OPERATOR_MAT -> MINUS .

    LPAREN          reduce using rule 95 (OPERATOR_MAT -> MINUS .)
    NUMBER          reduce using rule 95 (OPERATOR_MAT -> MINUS .)
    FLOAT           reduce using rule 95 (OPERATOR_MAT -> MINUS .)
    ID              reduce using rule 95 (OPERATOR_MAT -> MINUS .)


state 51

    (96) OPERATOR_MAT -> TIMES .

    LPAREN          reduce using rule 96 (OPERATOR_MAT -> TIMES .)
    NUMBER          reduce using rule 96 (OPERATOR_MAT -> TIMES .)
    FLOAT           reduce using rule 96 (OPERATOR_MAT -> TIMES .)
    ID              reduce using rule 96 (OPERATOR_MAT -> TIMES .)


state 52

    (97) OPERATOR_MAT -> DIVIDE .

    LPAREN          reduce using rule 97 (OPERATOR_MAT -> DIVIDE .)
    NUMBER          reduce using rule 97 (OPERATOR_MAT -> DIVIDE .)
    FLOAT           reduce using rule 97 (OPERATOR_MAT -> DIVIDE .)
    ID              reduce using rule 97 (OPERATOR_MAT -> DIVIDE .)


state 53

    (98) OPERATOR_MAT -> EXPONENTIATION .

    LPAREN          reduce using rule 98 (OPERATOR_MAT -> EXPONENTIATION .)
    NUMBER          reduce using rule 98 (OPERATOR_MAT -> EXPONENTIATION .)
    FLOAT           reduce using rule 98 (OPERATOR_MAT -> EXPONENTIATION .)
    ID              reduce using rule 98 (OPERATOR_MAT -> EXPONENTIATION .)


state 54

    (37) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS . EXPRESSION_CONCAT
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (46) ARRAY -> . ALFT DATA ARGT

    STRING          shift and go to state 108
    OTHERSTRINGDECLARATION shift and go to state 109
    ALFT            shift and go to state 30

    EXPRESSION_CONCAT              shift and go to state 105
    DATASTRING                     shift and go to state 106
    ARRAY                          shift and go to state 107

state 55

    (19) EXPRESSION -> PUTS EXPRESSION .

    $end            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    ID              reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    NUMBER          reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    FLOAT           reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    STRING          reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    LOGIC_NOT       reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    PUTS            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    GETS            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    TRUE            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    FALSE           reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    ALFT            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    OPENINGCB       reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    LPAREN          reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    END             reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    ELSE            reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    FOR             reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    IF              reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    WHILE           reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)
    CLOSURECB       reduce using rule 19 (EXPRESSION -> PUTS EXPRESSION .)


state 56

    (20) EXPRESSION -> PUTS ID .
    (36) DATANF -> ID .

  ! reduce/reduce conflict for $end resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ID resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for STRING resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for PUTS resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for GETS resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ALFT resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for END resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for FOR resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for IF resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (EXPRESSION -> PUTS ID .)
  ! reduce/reduce conflict for CLOSURECB resolved using rule 20 (EXPRESSION -> PUTS ID .)
    $end            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    ID              reduce using rule 20 (EXPRESSION -> PUTS ID .)
    NUMBER          reduce using rule 20 (EXPRESSION -> PUTS ID .)
    FLOAT           reduce using rule 20 (EXPRESSION -> PUTS ID .)
    STRING          reduce using rule 20 (EXPRESSION -> PUTS ID .)
    OTHERSTRINGDECLARATION reduce using rule 20 (EXPRESSION -> PUTS ID .)
    LOGIC_NOT       reduce using rule 20 (EXPRESSION -> PUTS ID .)
    PUTS            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    GETS            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    TRUE            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    FALSE           reduce using rule 20 (EXPRESSION -> PUTS ID .)
    ALFT            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    OPENINGCB       reduce using rule 20 (EXPRESSION -> PUTS ID .)
    LPAREN          reduce using rule 20 (EXPRESSION -> PUTS ID .)
    END             reduce using rule 20 (EXPRESSION -> PUTS ID .)
    ELSE            reduce using rule 20 (EXPRESSION -> PUTS ID .)
    FOR             reduce using rule 20 (EXPRESSION -> PUTS ID .)
    IF              reduce using rule 20 (EXPRESSION -> PUTS ID .)
    WHILE           reduce using rule 20 (EXPRESSION -> PUTS ID .)
    CLOSURECB       reduce using rule 20 (EXPRESSION -> PUTS ID .)
    EQUAL           reduce using rule 36 (DATANF -> ID .)
    EQUAL_STRICT    reduce using rule 36 (DATANF -> ID .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR_THAN_OR_EQUAL reduce using rule 36 (DATANF -> ID .)
    MINOR           reduce using rule 36 (DATANF -> ID .)
    GREATER         reduce using rule 36 (DATANF -> ID .)
    LOGIC_AND       reduce using rule 36 (DATANF -> ID .)
    LOGIC_OR        reduce using rule 36 (DATANF -> ID .)
    PIPE            reduce using rule 36 (DATANF -> ID .)
    PLUS            reduce using rule 36 (DATANF -> ID .)
    MINUS           reduce using rule 36 (DATANF -> ID .)
    TIMES           reduce using rule 36 (DATANF -> ID .)
    DIVIDE          reduce using rule 36 (DATANF -> ID .)
    EXPONENTIATION  reduce using rule 36 (DATANF -> ID .)

  ! $end            [ reduce using rule 36 (DATANF -> ID .) ]
  ! ID              [ reduce using rule 36 (DATANF -> ID .) ]
  ! NUMBER          [ reduce using rule 36 (DATANF -> ID .) ]
  ! FLOAT           [ reduce using rule 36 (DATANF -> ID .) ]
  ! STRING          [ reduce using rule 36 (DATANF -> ID .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 36 (DATANF -> ID .) ]
  ! LOGIC_NOT       [ reduce using rule 36 (DATANF -> ID .) ]
  ! PUTS            [ reduce using rule 36 (DATANF -> ID .) ]
  ! GETS            [ reduce using rule 36 (DATANF -> ID .) ]
  ! TRUE            [ reduce using rule 36 (DATANF -> ID .) ]
  ! FALSE           [ reduce using rule 36 (DATANF -> ID .) ]
  ! ALFT            [ reduce using rule 36 (DATANF -> ID .) ]
  ! OPENINGCB       [ reduce using rule 36 (DATANF -> ID .) ]
  ! LPAREN          [ reduce using rule 36 (DATANF -> ID .) ]
  ! END             [ reduce using rule 36 (DATANF -> ID .) ]
  ! ELSE            [ reduce using rule 36 (DATANF -> ID .) ]
  ! FOR             [ reduce using rule 36 (DATANF -> ID .) ]
  ! IF              [ reduce using rule 36 (DATANF -> ID .) ]
  ! WHILE           [ reduce using rule 36 (DATANF -> ID .) ]
  ! CLOSURECB       [ reduce using rule 36 (DATANF -> ID .) ]


state 57

    (6) ASIGNATION -> ID ASIGN . EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    ID              shift and go to state 47

    EXPRESSION                     shift and go to state 110
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 58

    (21) EXPRESSION -> GETS EXPRESSION .

    $end            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    ID              reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    NUMBER          reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    FLOAT           reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    STRING          reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    LOGIC_NOT       reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    PUTS            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    GETS            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    TRUE            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    FALSE           reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    ALFT            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    OPENINGCB       reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    LPAREN          reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    END             reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    ELSE            reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    FOR             reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    IF              reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    WHILE           reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)
    CLOSURECB       reduce using rule 21 (EXPRESSION -> GETS EXPRESSION .)


state 59

    (24) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN . DATASTRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION

    STRING          shift and go to state 108
    OTHERSTRINGDECLARATION shift and go to state 109

    DATASTRING                     shift and go to state 111

state 60

    (42) FUNCTIONS_STRING -> DATASTRING POINT . FUNCTIONS_ALLOWED_STRING
    (43) FUNCTIONS_ALLOWED_STRING -> . INCLUDE QUESTION DATASTRING
    (44) FUNCTIONS_ALLOWED_STRING -> . EMPTY QUESTION
    (45) FUNCTIONS_ALLOWED_STRING -> . UPCASE

    INCLUDE         shift and go to state 113
    EMPTY           shift and go to state 114
    UPCASE          shift and go to state 115

    FUNCTIONS_ALLOWED_STRING       shift and go to state 112

state 61

    (30) EXPRESSION -> DATANF OPERATOR_COMP_MAT . DATANF
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    NUMBER          shift and go to state 89
    FLOAT           shift and go to state 90
    ID              shift and go to state 47

    DATANF                         shift and go to state 116

state 62

    (99) OPERATOR_COMP_MAT -> EQUAL .

    NUMBER          reduce using rule 99 (OPERATOR_COMP_MAT -> EQUAL .)
    FLOAT           reduce using rule 99 (OPERATOR_COMP_MAT -> EQUAL .)
    ID              reduce using rule 99 (OPERATOR_COMP_MAT -> EQUAL .)


state 63

    (100) OPERATOR_COMP_MAT -> EQUAL_STRICT .

    NUMBER          reduce using rule 100 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    FLOAT           reduce using rule 100 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)
    ID              reduce using rule 100 (OPERATOR_COMP_MAT -> EQUAL_STRICT .)


state 64

    (101) OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .

    NUMBER          reduce using rule 101 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 101 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)
    ID              reduce using rule 101 (OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL .)


state 65

    (102) OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .

    NUMBER          reduce using rule 102 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    FLOAT           reduce using rule 102 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)
    ID              reduce using rule 102 (OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL .)


state 66

    (103) OPERATOR_COMP_MAT -> MINOR .

    NUMBER          reduce using rule 103 (OPERATOR_COMP_MAT -> MINOR .)
    FLOAT           reduce using rule 103 (OPERATOR_COMP_MAT -> MINOR .)
    ID              reduce using rule 103 (OPERATOR_COMP_MAT -> MINOR .)


state 67

    (104) OPERATOR_COMP_MAT -> GREATER .

    NUMBER          reduce using rule 104 (OPERATOR_COMP_MAT -> GREATER .)
    FLOAT           reduce using rule 104 (OPERATOR_COMP_MAT -> GREATER .)
    ID              reduce using rule 104 (OPERATOR_COMP_MAT -> GREATER .)


state 68

    (105) OPERATOR_COMP_MAT -> LOGIC_AND .

    NUMBER          reduce using rule 105 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    FLOAT           reduce using rule 105 (OPERATOR_COMP_MAT -> LOGIC_AND .)
    ID              reduce using rule 105 (OPERATOR_COMP_MAT -> LOGIC_AND .)


state 69

    (106) OPERATOR_COMP_MAT -> LOGIC_OR .

    NUMBER          reduce using rule 106 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    FLOAT           reduce using rule 106 (OPERATOR_COMP_MAT -> LOGIC_OR .)
    ID              reduce using rule 106 (OPERATOR_COMP_MAT -> LOGIC_OR .)


state 70

    (107) OPERATOR_COMP_MAT -> PIPE .

    NUMBER          reduce using rule 107 (OPERATOR_COMP_MAT -> PIPE .)
    FLOAT           reduce using rule 107 (OPERATOR_COMP_MAT -> PIPE .)
    ID              reduce using rule 107 (OPERATOR_COMP_MAT -> PIPE .)


state 71

    (65) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT . END

    END             shift and go to state 117


state 72

    (68) DATA_REPEAT -> DATA_ALLOWED_IN_FOR .
    (69) DATA_REPEAT -> DATA_ALLOWED_IN_FOR . DATA_REPEAT
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    END             reduce using rule 68 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR .)
    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_REPEAT                    shift and go to state 118
    DATA_ALLOWED_IN_IF             shift and go to state 73
    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 73

    (74) DATA_REPEAT -> DATA_ALLOWED_IN_IF .
    (75) DATA_REPEAT -> DATA_ALLOWED_IN_IF . DATA_REPEAT
    (76) DATA_REPEAT -> DATA_ALLOWED_IN_IF . ELSE DATA_ALLOWED_IN_IF
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    END             reduce using rule 74 (DATA_REPEAT -> DATA_ALLOWED_IN_IF .)
    ELSE            shift and go to state 120
    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_ALLOWED_IN_IF             shift and go to state 73
    DATA_REPEAT                    shift and go to state 119
    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 74

    (81) DATA_REPEAT -> DATA_ALLOWED_IN_WHILE .
    (82) DATA_REPEAT -> DATA_ALLOWED_IN_WHILE . DATA_REPEAT
    (68) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR
    (69) DATA_REPEAT -> . DATA_ALLOWED_IN_FOR DATA_REPEAT
    (74) DATA_REPEAT -> . DATA_ALLOWED_IN_IF
    (75) DATA_REPEAT -> . DATA_ALLOWED_IN_IF DATA_REPEAT
    (76) DATA_REPEAT -> . DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF
    (81) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE
    (82) DATA_REPEAT -> . DATA_ALLOWED_IN_WHILE DATA_REPEAT
    (70) DATA_ALLOWED_IN_FOR -> . ASIGNATION
    (71) DATA_ALLOWED_IN_FOR -> . EXPRESSION
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (83) DATA_ALLOWED_IN_WHILE -> . ASIGNATION
    (84) DATA_ALLOWED_IN_WHILE -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    END             reduce using rule 81 (DATA_REPEAT -> DATA_ALLOWED_IN_WHILE .)
    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_ALLOWED_IN_WHILE          shift and go to state 74
    DATA_REPEAT                    shift and go to state 121
    DATA_ALLOWED_IN_FOR            shift and go to state 72
    DATA_ALLOWED_IN_IF             shift and go to state 73
    ASIGNATION                     shift and go to state 75
    EXPRESSION                     shift and go to state 76
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 75

    (70) DATA_ALLOWED_IN_FOR -> ASIGNATION .
    (77) DATA_ALLOWED_IN_IF -> ASIGNATION .
    (83) DATA_ALLOWED_IN_WHILE -> ASIGNATION .

  ! reduce/reduce conflict for ID resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for STRING resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for GETS resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for END resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for ID resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for STRING resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for PUTS resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for GETS resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for TRUE resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for FALSE resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for ALFT resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
  ! reduce/reduce conflict for END resolved using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ID              reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    NUMBER          reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FLOAT           reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    STRING          reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    OTHERSTRINGDECLARATION reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LOGIC_NOT       reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    PUTS            reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    GETS            reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    TRUE            reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    FALSE           reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ALFT            reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    OPENINGCB       reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    LPAREN          reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    END             reduce using rule 70 (DATA_ALLOWED_IN_FOR -> ASIGNATION .)
    ELSE            reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .)

  ! ID              [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! NUMBER          [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! FLOAT           [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! STRING          [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! LOGIC_NOT       [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! PUTS            [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! GETS            [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! TRUE            [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! FALSE           [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! ALFT            [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! OPENINGCB       [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! LPAREN          [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! END             [ reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .) ]
  ! ID              [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! NUMBER          [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! FLOAT           [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! STRING          [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! LOGIC_NOT       [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! PUTS            [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! GETS            [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! TRUE            [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! FALSE           [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! ALFT            [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! OPENINGCB       [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! LPAREN          [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]
  ! END             [ reduce using rule 83 (DATA_ALLOWED_IN_WHILE -> ASIGNATION .) ]


state 76

    (71) DATA_ALLOWED_IN_FOR -> EXPRESSION .
    (78) DATA_ALLOWED_IN_IF -> EXPRESSION .
    (84) DATA_ALLOWED_IN_WHILE -> EXPRESSION .

  ! reduce/reduce conflict for ID resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for STRING resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for PUTS resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for GETS resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for TRUE resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FALSE resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for ALFT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for END resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for ID resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for NUMBER resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FLOAT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for STRING resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for OTHERSTRINGDECLARATION resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LOGIC_NOT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for PUTS resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for GETS resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for TRUE resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for FALSE resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for ALFT resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for OPENINGCB resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for LPAREN resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
  ! reduce/reduce conflict for END resolved using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ID              reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    NUMBER          reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FLOAT           reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    STRING          reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LOGIC_NOT       reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    PUTS            reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    GETS            reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    TRUE            reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    FALSE           reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ALFT            reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    OPENINGCB       reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    LPAREN          reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    END             reduce using rule 71 (DATA_ALLOWED_IN_FOR -> EXPRESSION .)
    ELSE            reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .)

  ! ID              [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! NUMBER          [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! FLOAT           [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! STRING          [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! LOGIC_NOT       [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! PUTS            [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! GETS            [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! TRUE            [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! FALSE           [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! ALFT            [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! OPENINGCB       [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! LPAREN          [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! END             [ reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .) ]
  ! ID              [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! NUMBER          [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! FLOAT           [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! STRING          [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! OTHERSTRINGDECLARATION [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! LOGIC_NOT       [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! PUTS            [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! GETS            [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! TRUE            [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! FALSE           [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! ALFT            [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! OPENINGCB       [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! LPAREN          [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]
  ! END             [ reduce using rule 84 (DATA_ALLOWED_IN_WHILE -> EXPRESSION .) ]


state 77

    (72) STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT . END

    END             shift and go to state 122


state 78

    (79) STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT . END

    END             shift and go to state 123


state 79

    (46) ARRAY -> ALFT DATA . ARGT
    (89) DATA -> DATA . COMMA DATA

    ARGT            shift and go to state 124
    COMMA           shift and go to state 125


state 80

    (85) DATA -> NUMBER .

    ARGT            reduce using rule 85 (DATA -> NUMBER .)
    COMMA           reduce using rule 85 (DATA -> NUMBER .)


state 81

    (86) DATA -> FLOAT .

    ARGT            reduce using rule 86 (DATA -> FLOAT .)
    COMMA           reduce using rule 86 (DATA -> FLOAT .)


state 82

    (87) DATA -> BOOLEAN .

    ARGT            reduce using rule 87 (DATA -> BOOLEAN .)
    COMMA           reduce using rule 87 (DATA -> BOOLEAN .)


state 83

    (88) DATA -> STRING .

    ARGT            reduce using rule 88 (DATA -> STRING .)
    COMMA           reduce using rule 88 (DATA -> STRING .)


state 84

    (92) BOOLEAN -> LOGIC_NOT . TRUE
    (93) BOOLEAN -> LOGIC_NOT . FALSE

    TRUE            shift and go to state 126
    FALSE           shift and go to state 127


state 85

    (56) HASH -> OPENINGCB REGISTRY . CLOSURECB
    (64) REGISTRY -> REGISTRY . COMMA REGISTRY

    CLOSURECB       shift and go to state 128
    COMMA           shift and go to state 129


state 86

    (57) REGISTRY -> STRING . HASHROCKET KEY

    HASHROCKET      shift and go to state 130


state 87

    (32) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT . RPAREN
    (31) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (94) OPERATOR_MAT -> . PLUS
    (95) OPERATOR_MAT -> . MINUS
    (96) OPERATOR_MAT -> . TIMES
    (97) OPERATOR_MAT -> . DIVIDE
    (98) OPERATOR_MAT -> . EXPONENTIATION

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    EXPONENTIATION  shift and go to state 53

    OPERATOR_MAT                   shift and go to state 48

state 88

    (33) EXPRESSION_MAT -> DATANF .

    RPAREN          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    PLUS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    MINUS           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    TIMES           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    DIVIDE          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    EXPONENTIATION  reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    $end            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ID              reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    NUMBER          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FLOAT           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    STRING          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    LOGIC_NOT       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    PUTS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    GETS            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    TRUE            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FALSE           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ALFT            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    OPENINGCB       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    LPAREN          reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    END             reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    ELSE            reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    FOR             reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    IF              reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    WHILE           reduce using rule 33 (EXPRESSION_MAT -> DATANF .)
    CLOSURECB       reduce using rule 33 (EXPRESSION_MAT -> DATANF .)


state 89

    (34) DATANF -> NUMBER .

    RPAREN          reduce using rule 34 (DATANF -> NUMBER .)
    PLUS            reduce using rule 34 (DATANF -> NUMBER .)
    MINUS           reduce using rule 34 (DATANF -> NUMBER .)
    TIMES           reduce using rule 34 (DATANF -> NUMBER .)
    DIVIDE          reduce using rule 34 (DATANF -> NUMBER .)
    EXPONENTIATION  reduce using rule 34 (DATANF -> NUMBER .)
    $end            reduce using rule 34 (DATANF -> NUMBER .)
    ID              reduce using rule 34 (DATANF -> NUMBER .)
    NUMBER          reduce using rule 34 (DATANF -> NUMBER .)
    FLOAT           reduce using rule 34 (DATANF -> NUMBER .)
    STRING          reduce using rule 34 (DATANF -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 34 (DATANF -> NUMBER .)
    LOGIC_NOT       reduce using rule 34 (DATANF -> NUMBER .)
    PUTS            reduce using rule 34 (DATANF -> NUMBER .)
    GETS            reduce using rule 34 (DATANF -> NUMBER .)
    TRUE            reduce using rule 34 (DATANF -> NUMBER .)
    FALSE           reduce using rule 34 (DATANF -> NUMBER .)
    ALFT            reduce using rule 34 (DATANF -> NUMBER .)
    OPENINGCB       reduce using rule 34 (DATANF -> NUMBER .)
    LPAREN          reduce using rule 34 (DATANF -> NUMBER .)
    END             reduce using rule 34 (DATANF -> NUMBER .)
    ELSE            reduce using rule 34 (DATANF -> NUMBER .)
    FOR             reduce using rule 34 (DATANF -> NUMBER .)
    IF              reduce using rule 34 (DATANF -> NUMBER .)
    WHILE           reduce using rule 34 (DATANF -> NUMBER .)
    CLOSURECB       reduce using rule 34 (DATANF -> NUMBER .)


state 90

    (35) DATANF -> FLOAT .

    RPAREN          reduce using rule 35 (DATANF -> FLOAT .)
    PLUS            reduce using rule 35 (DATANF -> FLOAT .)
    MINUS           reduce using rule 35 (DATANF -> FLOAT .)
    TIMES           reduce using rule 35 (DATANF -> FLOAT .)
    DIVIDE          reduce using rule 35 (DATANF -> FLOAT .)
    EXPONENTIATION  reduce using rule 35 (DATANF -> FLOAT .)
    $end            reduce using rule 35 (DATANF -> FLOAT .)
    ID              reduce using rule 35 (DATANF -> FLOAT .)
    NUMBER          reduce using rule 35 (DATANF -> FLOAT .)
    FLOAT           reduce using rule 35 (DATANF -> FLOAT .)
    STRING          reduce using rule 35 (DATANF -> FLOAT .)
    OTHERSTRINGDECLARATION reduce using rule 35 (DATANF -> FLOAT .)
    LOGIC_NOT       reduce using rule 35 (DATANF -> FLOAT .)
    PUTS            reduce using rule 35 (DATANF -> FLOAT .)
    GETS            reduce using rule 35 (DATANF -> FLOAT .)
    TRUE            reduce using rule 35 (DATANF -> FLOAT .)
    FALSE           reduce using rule 35 (DATANF -> FLOAT .)
    ALFT            reduce using rule 35 (DATANF -> FLOAT .)
    OPENINGCB       reduce using rule 35 (DATANF -> FLOAT .)
    LPAREN          reduce using rule 35 (DATANF -> FLOAT .)
    END             reduce using rule 35 (DATANF -> FLOAT .)
    ELSE            reduce using rule 35 (DATANF -> FLOAT .)
    FOR             reduce using rule 35 (DATANF -> FLOAT .)
    IF              reduce using rule 35 (DATANF -> FLOAT .)
    WHILE           reduce using rule 35 (DATANF -> FLOAT .)
    CLOSURECB       reduce using rule 35 (DATANF -> FLOAT .)


state 91

    (66) STRUCTURE_IN_FOR -> FOR ID . IN ARRAY DO
    (67) STRUCTURE_IN_FOR -> FOR ID . IN ID DO

    IN              shift and go to state 132


state 92

    (73) STRUCTURE_IN_IF -> IF LPAREN . BOOLEAN RPAREN
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LOGIC_NOT       shift and go to state 84

    BOOLEAN                        shift and go to state 133

state 93

    (80) STRUCTURE_IN_WHILE -> WHILE LPAREN . TRUE RPAREN

    TRUE            shift and go to state 134


state 94

    (23) EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .

    $end            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ID              reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    NUMBER          reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FLOAT           reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    STRING          reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    OTHERSTRINGDECLARATION reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LOGIC_NOT       reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    PUTS            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    GETS            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    TRUE            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FALSE           reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ALFT            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    OPENINGCB       reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    LPAREN          reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    END             reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    ELSE            reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    FOR             reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    IF              reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    WHILE           reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)
    CLOSURECB       reduce using rule 23 (EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN .)


state 95

    (47) FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .

    $end            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ID              reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    NUMBER          reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FLOAT           reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    STRING          reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LOGIC_NOT       reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    PUTS            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    GETS            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    TRUE            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FALSE           reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ALFT            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    OPENINGCB       reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    LPAREN          reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    END             reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    ELSE            reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    FOR             reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    IF              reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    WHILE           reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)
    CLOSURECB       reduce using rule 47 (FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY .)


state 96

    (48) FUNTIONS_ALLOWED_ARRAY -> MIN .

    $end            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ID              reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    NUMBER          reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FLOAT           reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    STRING          reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    OTHERSTRINGDECLARATION reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LOGIC_NOT       reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    PUTS            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    GETS            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    TRUE            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FALSE           reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ALFT            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    OPENINGCB       reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    LPAREN          reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    END             reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    ELSE            reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    FOR             reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    IF              reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    WHILE           reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)
    CLOSURECB       reduce using rule 48 (FUNTIONS_ALLOWED_ARRAY -> MIN .)


state 97

    (49) FUNTIONS_ALLOWED_ARRAY -> FIRST .

    $end            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ID              reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    NUMBER          reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FLOAT           reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    STRING          reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    OTHERSTRINGDECLARATION reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LOGIC_NOT       reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    PUTS            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    GETS            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    TRUE            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FALSE           reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ALFT            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    OPENINGCB       reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    LPAREN          reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    END             reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    ELSE            reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    FOR             reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    IF              reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    WHILE           reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)
    CLOSURECB       reduce using rule 49 (FUNTIONS_ALLOWED_ARRAY -> FIRST .)


state 98

    (50) FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .

    $end            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ID              reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    NUMBER          reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FLOAT           reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    STRING          reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LOGIC_NOT       reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    PUTS            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    GETS            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    TRUE            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FALSE           reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ALFT            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    OPENINGCB       reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    LPAREN          reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    END             reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    ELSE            reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    FOR             reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    IF              reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    WHILE           reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)
    CLOSURECB       reduce using rule 50 (FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY .)


state 99

    (51) MAP_ARRAY -> MAP . OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    OPENINGCB       shift and go to state 135


state 100

    (60) FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .

    $end            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    ID              reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    NUMBER          reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    FLOAT           reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    STRING          reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    OTHERSTRINGDECLARATION reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    LOGIC_NOT       reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    PUTS            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    GETS            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    TRUE            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    FALSE           reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    ALFT            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    OPENINGCB       reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    LPAREN          reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    END             reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    ELSE            reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    FOR             reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    IF              reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    WHILE           reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)
    CLOSURECB       reduce using rule 60 (FUNTIONS_HASH -> HASH POINT FUNTIONS_ALLOWED_HASH .)


state 101

    (61) FUNTIONS_ALLOWED_HASH -> HAS_VALUE . QUESTION KEY

    QUESTION        shift and go to state 136


state 102

    (62) FUNTIONS_ALLOWED_HASH -> MERGE . LPAREN HASH RPAREN

    LPAREN          shift and go to state 137


state 103

    (63) FUNTIONS_ALLOWED_HASH -> SIZE .

    $end            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    ID              reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    NUMBER          reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    FLOAT           reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    STRING          reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    OTHERSTRINGDECLARATION reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    LOGIC_NOT       reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    PUTS            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    GETS            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    TRUE            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    FALSE           reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    ALFT            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    OPENINGCB       reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    LPAREN          reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    END             reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    ELSE            reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    FOR             reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    IF              reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    WHILE           reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)
    CLOSURECB       reduce using rule 63 (FUNTIONS_ALLOWED_HASH -> SIZE .)


state 104

    (31) EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .
    (31) EXPRESSION_MAT -> EXPRESSION_MAT . OPERATOR_MAT EXPRESSION_MAT
    (94) OPERATOR_MAT -> . PLUS
    (95) OPERATOR_MAT -> . MINUS
    (96) OPERATOR_MAT -> . TIMES
    (97) OPERATOR_MAT -> . DIVIDE
    (98) OPERATOR_MAT -> . EXPONENTIATION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENTIATION resolved as shift
    $end            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ID              reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    NUMBER          reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FLOAT           reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    STRING          reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    OTHERSTRINGDECLARATION reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LOGIC_NOT       reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PUTS            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    GETS            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    TRUE            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FALSE           reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ALFT            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    OPENINGCB       reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    LPAREN          reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    END             reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    ELSE            reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    FOR             reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    IF              reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    WHILE           reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    CLOSURECB       reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    RPAREN          reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    EXPONENTIATION  shift and go to state 53

  ! PLUS            [ reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! MINUS           [ reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! TIMES           [ reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! DIVIDE          [ reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]
  ! EXPONENTIATION  [ reduce using rule 31 (EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT .) ]

    OPERATOR_MAT                   shift and go to state 48

state 105

    (37) EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .
    (37) EXPRESSION_CONCAT -> EXPRESSION_CONCAT . PLUS EXPRESSION_CONCAT

  ! shift/reduce conflict for PLUS resolved as shift
    $end            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ID              reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    NUMBER          reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FLOAT           reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    STRING          reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    OTHERSTRINGDECLARATION reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LOGIC_NOT       reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PUTS            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    GETS            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    TRUE            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FALSE           reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ALFT            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    OPENINGCB       reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    LPAREN          reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    END             reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    ELSE            reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    FOR             reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    IF              reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    WHILE           reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    CLOSURECB       reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .)
    PLUS            shift and go to state 54

  ! PLUS            [ reduce using rule 37 (EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT .) ]


state 106

    (38) EXPRESSION_CONCAT -> DATASTRING .

    PLUS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    $end            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ID              reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    NUMBER          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FLOAT           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    STRING          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    LOGIC_NOT       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    PUTS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    GETS            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    TRUE            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FALSE           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ALFT            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    OPENINGCB       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    LPAREN          reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    END             reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    ELSE            reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    FOR             reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    IF              reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    WHILE           reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)
    CLOSURECB       reduce using rule 38 (EXPRESSION_CONCAT -> DATASTRING .)


state 107

    (39) EXPRESSION_CONCAT -> ARRAY .

    PLUS            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    $end            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    ID              reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    NUMBER          reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    FLOAT           reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    STRING          reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    OTHERSTRINGDECLARATION reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    LOGIC_NOT       reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    PUTS            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    GETS            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    TRUE            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    FALSE           reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    ALFT            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    OPENINGCB       reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    LPAREN          reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    END             reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    ELSE            reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    FOR             reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    IF              reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    WHILE           reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)
    CLOSURECB       reduce using rule 39 (EXPRESSION_CONCAT -> ARRAY .)


state 108

    (40) DATASTRING -> STRING .

    PLUS            reduce using rule 40 (DATASTRING -> STRING .)
    $end            reduce using rule 40 (DATASTRING -> STRING .)
    ID              reduce using rule 40 (DATASTRING -> STRING .)
    NUMBER          reduce using rule 40 (DATASTRING -> STRING .)
    FLOAT           reduce using rule 40 (DATASTRING -> STRING .)
    STRING          reduce using rule 40 (DATASTRING -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 40 (DATASTRING -> STRING .)
    LOGIC_NOT       reduce using rule 40 (DATASTRING -> STRING .)
    PUTS            reduce using rule 40 (DATASTRING -> STRING .)
    GETS            reduce using rule 40 (DATASTRING -> STRING .)
    TRUE            reduce using rule 40 (DATASTRING -> STRING .)
    FALSE           reduce using rule 40 (DATASTRING -> STRING .)
    ALFT            reduce using rule 40 (DATASTRING -> STRING .)
    OPENINGCB       reduce using rule 40 (DATASTRING -> STRING .)
    LPAREN          reduce using rule 40 (DATASTRING -> STRING .)
    END             reduce using rule 40 (DATASTRING -> STRING .)
    ELSE            reduce using rule 40 (DATASTRING -> STRING .)
    FOR             reduce using rule 40 (DATASTRING -> STRING .)
    IF              reduce using rule 40 (DATASTRING -> STRING .)
    WHILE           reduce using rule 40 (DATASTRING -> STRING .)
    CLOSURECB       reduce using rule 40 (DATASTRING -> STRING .)


state 109

    (41) DATASTRING -> OTHERSTRINGDECLARATION .

    PLUS            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    $end            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ID              reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    NUMBER          reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FLOAT           reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    STRING          reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    OTHERSTRINGDECLARATION reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LOGIC_NOT       reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    PUTS            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    GETS            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    TRUE            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FALSE           reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ALFT            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    OPENINGCB       reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    LPAREN          reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    END             reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    ELSE            reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    FOR             reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    IF              reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    WHILE           reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)
    CLOSURECB       reduce using rule 41 (DATASTRING -> OTHERSTRINGDECLARATION .)


state 110

    (6) ASIGNATION -> ID ASIGN EXPRESSION .

    $end            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ID              reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    NUMBER          reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FLOAT           reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    STRING          reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    OTHERSTRINGDECLARATION reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LOGIC_NOT       reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    PUTS            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    GETS            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    TRUE            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FALSE           reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ALFT            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    OPENINGCB       reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    LPAREN          reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    END             reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    ELSE            reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    FOR             reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    IF              reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    WHILE           reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)
    CLOSURECB       reduce using rule 6 (ASIGNATION -> ID ASIGN EXPRESSION .)


state 111

    (24) EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .

    $end            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ID              reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    NUMBER          reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FLOAT           reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    STRING          reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LOGIC_NOT       reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    PUTS            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    GETS            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    TRUE            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FALSE           reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ALFT            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    OPENINGCB       reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    LPAREN          reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    END             reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    ELSE            reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    FOR             reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    IF              reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    WHILE           reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)
    CLOSURECB       reduce using rule 24 (EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING .)


state 112

    (42) FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .

    $end            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ID              reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    NUMBER          reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FLOAT           reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    STRING          reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    OTHERSTRINGDECLARATION reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    LOGIC_NOT       reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    PUTS            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    GETS            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    TRUE            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FALSE           reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ALFT            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    OPENINGCB       reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    LPAREN          reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    END             reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    ELSE            reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    FOR             reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    IF              reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    WHILE           reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)
    CLOSURECB       reduce using rule 42 (FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING .)


state 113

    (43) FUNCTIONS_ALLOWED_STRING -> INCLUDE . QUESTION DATASTRING

    QUESTION        shift and go to state 138


state 114

    (44) FUNCTIONS_ALLOWED_STRING -> EMPTY . QUESTION

    QUESTION        shift and go to state 139


state 115

    (45) FUNCTIONS_ALLOWED_STRING -> UPCASE .

    $end            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ID              reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    NUMBER          reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FLOAT           reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    STRING          reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    OTHERSTRINGDECLARATION reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    LOGIC_NOT       reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    PUTS            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    GETS            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    TRUE            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FALSE           reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ALFT            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    OPENINGCB       reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    LPAREN          reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    END             reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    ELSE            reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    FOR             reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    IF              reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    WHILE           reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)
    CLOSURECB       reduce using rule 45 (FUNCTIONS_ALLOWED_STRING -> UPCASE .)


state 116

    (30) EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .

    $end            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ID              reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    NUMBER          reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FLOAT           reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    STRING          reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    OTHERSTRINGDECLARATION reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LOGIC_NOT       reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    PUTS            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    GETS            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    TRUE            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FALSE           reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ALFT            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    OPENINGCB       reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    LPAREN          reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    END             reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    ELSE            reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    FOR             reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    IF              reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    WHILE           reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)
    CLOSURECB       reduce using rule 30 (EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF .)


state 117

    (65) STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .

    $end            reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    NUMBER          reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FLOAT           reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    STRING          reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    PUTS            reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    GETS            reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ID              reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    TRUE            reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FALSE           reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    ALFT            reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    OPENINGCB       reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    LPAREN          reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    FOR             reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    IF              reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    WHILE           reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)
    CLOSURECB       reduce using rule 65 (STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END .)


state 118

    (69) DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .

    END             reduce using rule 69 (DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT .)


state 119

    (75) DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT .

    END             reduce using rule 75 (DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT .)


state 120

    (76) DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE . DATA_ALLOWED_IN_IF
    (77) DATA_ALLOWED_IN_IF -> . ASIGNATION
    (78) DATA_ALLOWED_IN_IF -> . EXPRESSION
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID

    ID              shift and go to state 20
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32

    DATA_ALLOWED_IN_IF             shift and go to state 140
    ASIGNATION                     shift and go to state 141
    EXPRESSION                     shift and go to state 142
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24

state 121

    (82) DATA_REPEAT -> DATA_ALLOWED_IN_WHILE DATA_REPEAT .

    END             reduce using rule 82 (DATA_REPEAT -> DATA_ALLOWED_IN_WHILE DATA_REPEAT .)


state 122

    (72) STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .

    $end            reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    NUMBER          reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FLOAT           reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    STRING          reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    PUTS            reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    GETS            reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    ID              reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    TRUE            reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FALSE           reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    ALFT            reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    OPENINGCB       reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    LPAREN          reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    FOR             reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    IF              reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    WHILE           reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)
    CLOSURECB       reduce using rule 72 (STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END .)


state 123

    (79) STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .

    $end            reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    NUMBER          reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    FLOAT           reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    STRING          reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    OTHERSTRINGDECLARATION reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    LOGIC_NOT       reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    PUTS            reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    GETS            reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    ID              reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    TRUE            reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    FALSE           reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    ALFT            reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    OPENINGCB       reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    LPAREN          reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    FOR             reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    IF              reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    WHILE           reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)
    CLOSURECB       reduce using rule 79 (STRUCTURE_WHILE -> STRUCTURE_IN_WHILE DATA_REPEAT END .)


state 124

    (46) ARRAY -> ALFT DATA ARGT .

    POINT           reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    $end            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    PLUS            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    ID              reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    NUMBER          reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    FLOAT           reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    STRING          reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    OTHERSTRINGDECLARATION reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    LOGIC_NOT       reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    PUTS            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    GETS            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    TRUE            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    FALSE           reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    ALFT            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    OPENINGCB       reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    LPAREN          reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    END             reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    ELSE            reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    FOR             reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    IF              reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    WHILE           reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    CLOSURECB       reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)
    DO              reduce using rule 46 (ARRAY -> ALFT DATA ARGT .)


state 125

    (89) DATA -> DATA COMMA . DATA
    (85) DATA -> . NUMBER
    (86) DATA -> . FLOAT
    (87) DATA -> . BOOLEAN
    (88) DATA -> . STRING
    (89) DATA -> . DATA COMMA DATA
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE

    NUMBER          shift and go to state 80
    FLOAT           shift and go to state 81
    STRING          shift and go to state 83
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LOGIC_NOT       shift and go to state 84

    DATA                           shift and go to state 143
    BOOLEAN                        shift and go to state 82

state 126

    (92) BOOLEAN -> LOGIC_NOT TRUE .

    ARGT            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    COMMA           reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    $end            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    ID              reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    NUMBER          reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    FLOAT           reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    STRING          reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    OTHERSTRINGDECLARATION reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    LOGIC_NOT       reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    PUTS            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    GETS            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    TRUE            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    FALSE           reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    ALFT            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    OPENINGCB       reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    LPAREN          reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    END             reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    ELSE            reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    FOR             reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    IF              reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    WHILE           reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    CLOSURECB       reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)
    RPAREN          reduce using rule 92 (BOOLEAN -> LOGIC_NOT TRUE .)


state 127

    (93) BOOLEAN -> LOGIC_NOT FALSE .

    ARGT            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    COMMA           reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    $end            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    ID              reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    NUMBER          reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    FLOAT           reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    STRING          reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    OTHERSTRINGDECLARATION reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    LOGIC_NOT       reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    PUTS            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    GETS            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    TRUE            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    FALSE           reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    ALFT            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    OPENINGCB       reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    LPAREN          reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    END             reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    ELSE            reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    FOR             reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    IF              reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    WHILE           reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    CLOSURECB       reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)
    RPAREN          reduce using rule 93 (BOOLEAN -> LOGIC_NOT FALSE .)


state 128

    (56) HASH -> OPENINGCB REGISTRY CLOSURECB .

    POINT           reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    $end            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    ID              reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    NUMBER          reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    FLOAT           reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    STRING          reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    OTHERSTRINGDECLARATION reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    LOGIC_NOT       reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    PUTS            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    GETS            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    TRUE            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    FALSE           reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    ALFT            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    OPENINGCB       reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    LPAREN          reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    END             reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    ELSE            reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    FOR             reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    IF              reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    WHILE           reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    CLOSURECB       reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)
    RPAREN          reduce using rule 56 (HASH -> OPENINGCB REGISTRY CLOSURECB .)


state 129

    (64) REGISTRY -> REGISTRY COMMA . REGISTRY
    (57) REGISTRY -> . STRING HASHROCKET KEY
    (64) REGISTRY -> . REGISTRY COMMA REGISTRY

    STRING          shift and go to state 86

    REGISTRY                       shift and go to state 144

state 130

    (57) REGISTRY -> STRING HASHROCKET . KEY
    (58) KEY -> . NUMBER
    (59) KEY -> . STRING

    NUMBER          shift and go to state 147
    STRING          shift and go to state 145

    KEY                            shift and go to state 146

state 131

    (32) EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .

    PLUS            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    MINUS           reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TIMES           reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    DIVIDE          reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    EXPONENTIATION  reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    $end            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ID              reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    NUMBER          reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FLOAT           reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    STRING          reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LOGIC_NOT       reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    PUTS            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    GETS            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    TRUE            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FALSE           reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ALFT            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    OPENINGCB       reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    LPAREN          reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    END             reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    ELSE            reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    FOR             reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    IF              reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    WHILE           reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    CLOSURECB       reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)
    RPAREN          reduce using rule 32 (EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN .)


state 132

    (66) STRUCTURE_IN_FOR -> FOR ID IN . ARRAY DO
    (67) STRUCTURE_IN_FOR -> FOR ID IN . ID DO
    (46) ARRAY -> . ALFT DATA ARGT

    ID              shift and go to state 148
    ALFT            shift and go to state 30

    ARRAY                          shift and go to state 149

state 133

    (73) STRUCTURE_IN_IF -> IF LPAREN BOOLEAN . RPAREN

    RPAREN          shift and go to state 150


state 134

    (80) STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE . RPAREN

    RPAREN          shift and go to state 151


state 135

    (51) MAP_ARRAY -> MAP OPENINGCB . PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 152


state 136

    (61) FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION . KEY
    (58) KEY -> . NUMBER
    (59) KEY -> . STRING

    NUMBER          shift and go to state 147
    STRING          shift and go to state 145

    KEY                            shift and go to state 153

state 137

    (62) FUNTIONS_ALLOWED_HASH -> MERGE LPAREN . HASH RPAREN
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB

    OPENINGCB       shift and go to state 31

    HASH                           shift and go to state 154

state 138

    (43) FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION . DATASTRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION

    STRING          shift and go to state 108
    OTHERSTRINGDECLARATION shift and go to state 109

    DATASTRING                     shift and go to state 155

state 139

    (44) FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .

    $end            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ID              reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    NUMBER          reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FLOAT           reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    STRING          reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    OTHERSTRINGDECLARATION reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    LOGIC_NOT       reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    PUTS            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    GETS            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    TRUE            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FALSE           reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ALFT            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    OPENINGCB       reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    LPAREN          reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    END             reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    ELSE            reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    FOR             reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    IF              reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    WHILE           reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)
    CLOSURECB       reduce using rule 44 (FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION .)


state 140

    (76) DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF .

    END             reduce using rule 76 (DATA_REPEAT -> DATA_ALLOWED_IN_IF ELSE DATA_ALLOWED_IN_IF .)


state 141

    (77) DATA_ALLOWED_IN_IF -> ASIGNATION .

    END             reduce using rule 77 (DATA_ALLOWED_IN_IF -> ASIGNATION .)


state 142

    (78) DATA_ALLOWED_IN_IF -> EXPRESSION .

    END             reduce using rule 78 (DATA_ALLOWED_IN_IF -> EXPRESSION .)


state 143

    (89) DATA -> DATA COMMA DATA .
    (89) DATA -> DATA . COMMA DATA

  ! shift/reduce conflict for COMMA resolved as shift
    ARGT            reduce using rule 89 (DATA -> DATA COMMA DATA .)
    COMMA           shift and go to state 125

  ! COMMA           [ reduce using rule 89 (DATA -> DATA COMMA DATA .) ]


state 144

    (64) REGISTRY -> REGISTRY COMMA REGISTRY .
    (64) REGISTRY -> REGISTRY . COMMA REGISTRY

  ! shift/reduce conflict for COMMA resolved as shift
    CLOSURECB       reduce using rule 64 (REGISTRY -> REGISTRY COMMA REGISTRY .)
    COMMA           shift and go to state 129

  ! COMMA           [ reduce using rule 64 (REGISTRY -> REGISTRY COMMA REGISTRY .) ]


state 145

    (59) KEY -> STRING .

    CLOSURECB       reduce using rule 59 (KEY -> STRING .)
    COMMA           reduce using rule 59 (KEY -> STRING .)
    $end            reduce using rule 59 (KEY -> STRING .)
    ID              reduce using rule 59 (KEY -> STRING .)
    NUMBER          reduce using rule 59 (KEY -> STRING .)
    FLOAT           reduce using rule 59 (KEY -> STRING .)
    STRING          reduce using rule 59 (KEY -> STRING .)
    OTHERSTRINGDECLARATION reduce using rule 59 (KEY -> STRING .)
    LOGIC_NOT       reduce using rule 59 (KEY -> STRING .)
    PUTS            reduce using rule 59 (KEY -> STRING .)
    GETS            reduce using rule 59 (KEY -> STRING .)
    TRUE            reduce using rule 59 (KEY -> STRING .)
    FALSE           reduce using rule 59 (KEY -> STRING .)
    ALFT            reduce using rule 59 (KEY -> STRING .)
    OPENINGCB       reduce using rule 59 (KEY -> STRING .)
    LPAREN          reduce using rule 59 (KEY -> STRING .)
    END             reduce using rule 59 (KEY -> STRING .)
    ELSE            reduce using rule 59 (KEY -> STRING .)
    FOR             reduce using rule 59 (KEY -> STRING .)
    IF              reduce using rule 59 (KEY -> STRING .)
    WHILE           reduce using rule 59 (KEY -> STRING .)


state 146

    (57) REGISTRY -> STRING HASHROCKET KEY .

    CLOSURECB       reduce using rule 57 (REGISTRY -> STRING HASHROCKET KEY .)
    COMMA           reduce using rule 57 (REGISTRY -> STRING HASHROCKET KEY .)


state 147

    (58) KEY -> NUMBER .

    CLOSURECB       reduce using rule 58 (KEY -> NUMBER .)
    COMMA           reduce using rule 58 (KEY -> NUMBER .)
    $end            reduce using rule 58 (KEY -> NUMBER .)
    ID              reduce using rule 58 (KEY -> NUMBER .)
    NUMBER          reduce using rule 58 (KEY -> NUMBER .)
    FLOAT           reduce using rule 58 (KEY -> NUMBER .)
    STRING          reduce using rule 58 (KEY -> NUMBER .)
    OTHERSTRINGDECLARATION reduce using rule 58 (KEY -> NUMBER .)
    LOGIC_NOT       reduce using rule 58 (KEY -> NUMBER .)
    PUTS            reduce using rule 58 (KEY -> NUMBER .)
    GETS            reduce using rule 58 (KEY -> NUMBER .)
    TRUE            reduce using rule 58 (KEY -> NUMBER .)
    FALSE           reduce using rule 58 (KEY -> NUMBER .)
    ALFT            reduce using rule 58 (KEY -> NUMBER .)
    OPENINGCB       reduce using rule 58 (KEY -> NUMBER .)
    LPAREN          reduce using rule 58 (KEY -> NUMBER .)
    END             reduce using rule 58 (KEY -> NUMBER .)
    ELSE            reduce using rule 58 (KEY -> NUMBER .)
    FOR             reduce using rule 58 (KEY -> NUMBER .)
    IF              reduce using rule 58 (KEY -> NUMBER .)
    WHILE           reduce using rule 58 (KEY -> NUMBER .)


state 148

    (67) STRUCTURE_IN_FOR -> FOR ID IN ID . DO

    DO              shift and go to state 156


state 149

    (66) STRUCTURE_IN_FOR -> FOR ID IN ARRAY . DO

    DO              shift and go to state 157


state 150

    (73) STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .

    ID              reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    NUMBER          reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    FLOAT           reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    STRING          reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    LOGIC_NOT       reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    PUTS            reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    GETS            reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    TRUE            reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    FALSE           reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    ALFT            reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    OPENINGCB       reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)
    LPAREN          reduce using rule 73 (STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN .)


state 151

    (80) STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .

    ID              reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    NUMBER          reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    FLOAT           reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    STRING          reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    LOGIC_NOT       reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    PUTS            reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    GETS            reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    TRUE            reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    FALSE           reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    ALFT            reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    OPENINGCB       reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)
    LPAREN          reduce using rule 80 (STRUCTURE_IN_WHILE -> WHILE LPAREN TRUE RPAREN .)


state 152

    (51) MAP_ARRAY -> MAP OPENINGCB PIPE . ID PIPE DATA_REPEAT_MAP CLOSURECB

    ID              shift and go to state 158


state 153

    (61) FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .

    $end            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    ID              reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    NUMBER          reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    FLOAT           reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    STRING          reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    OTHERSTRINGDECLARATION reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    LOGIC_NOT       reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    PUTS            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    GETS            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    TRUE            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    FALSE           reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    ALFT            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    OPENINGCB       reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    LPAREN          reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    END             reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    ELSE            reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    FOR             reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    IF              reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    WHILE           reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)
    CLOSURECB       reduce using rule 61 (FUNTIONS_ALLOWED_HASH -> HAS_VALUE QUESTION KEY .)


state 154

    (62) FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH . RPAREN

    RPAREN          shift and go to state 159


state 155

    (43) FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .

    $end            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ID              reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    NUMBER          reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FLOAT           reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    STRING          reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    OTHERSTRINGDECLARATION reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    LOGIC_NOT       reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    PUTS            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    GETS            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    TRUE            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FALSE           reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ALFT            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    OPENINGCB       reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    LPAREN          reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    END             reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    ELSE            reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    FOR             reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    IF              reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    WHILE           reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)
    CLOSURECB       reduce using rule 43 (FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING .)


state 156

    (67) STRUCTURE_IN_FOR -> FOR ID IN ID DO .

    ID              reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    NUMBER          reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FLOAT           reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    STRING          reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    OTHERSTRINGDECLARATION reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LOGIC_NOT       reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    PUTS            reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    GETS            reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    TRUE            reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    FALSE           reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    ALFT            reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    OPENINGCB       reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)
    LPAREN          reduce using rule 67 (STRUCTURE_IN_FOR -> FOR ID IN ID DO .)


state 157

    (66) STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .

    ID              reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    NUMBER          reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FLOAT           reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    STRING          reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    OTHERSTRINGDECLARATION reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LOGIC_NOT       reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    PUTS            reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    GETS            reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    TRUE            reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    FALSE           reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    ALFT            reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    OPENINGCB       reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)
    LPAREN          reduce using rule 66 (STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO .)


state 158

    (51) MAP_ARRAY -> MAP OPENINGCB PIPE ID . PIPE DATA_REPEAT_MAP CLOSURECB

    PIPE            shift and go to state 160


state 159

    (62) FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .

    $end            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    ID              reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    NUMBER          reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    FLOAT           reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    STRING          reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    OTHERSTRINGDECLARATION reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    LOGIC_NOT       reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    PUTS            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    GETS            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    TRUE            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    FALSE           reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    ALFT            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    OPENINGCB       reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    LPAREN          reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    END             reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    ELSE            reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    FOR             reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    IF              reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    WHILE           reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)
    CLOSURECB       reduce using rule 62 (FUNTIONS_ALLOWED_HASH -> MERGE LPAREN HASH RPAREN .)


state 160

    (51) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE . DATA_REPEAT_MAP CLOSURECB
    (52) DATA_REPEAT_MAP -> . STATEMENT
    (53) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (5) STATEMENT -> . STRUCTURE_WHILE
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (65) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (72) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (79) STRUCTURE_WHILE -> . STRUCTURE_IN_WHILE DATA_REPEAT END
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID
    (66) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (67) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (73) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN
    (80) STRUCTURE_IN_WHILE -> . WHILE LPAREN TRUE RPAREN

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    ID              shift and go to state 20
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35

    DATA_REPEAT_MAP                shift and go to state 161
    STATEMENT                      shift and go to state 162
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    STRUCTURE_WHILE                shift and go to state 6
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24
    STRUCTURE_IN_FOR               shift and go to state 25
    STRUCTURE_IN_IF                shift and go to state 26
    STRUCTURE_IN_WHILE             shift and go to state 27

state 161

    (51) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP . CLOSURECB

    CLOSURECB       shift and go to state 163


state 162

    (52) DATA_REPEAT_MAP -> STATEMENT .
    (53) DATA_REPEAT_MAP -> STATEMENT . DATA_REPEAT_MAP
    (52) DATA_REPEAT_MAP -> . STATEMENT
    (53) DATA_REPEAT_MAP -> . STATEMENT DATA_REPEAT_MAP
    (1) STATEMENT -> . EXPRESSION
    (2) STATEMENT -> . ASIGNATION
    (3) STATEMENT -> . STRUCTURE_FOR
    (4) STATEMENT -> . STRUCTURE_IF
    (5) STATEMENT -> . STRUCTURE_WHILE
    (7) EXPRESSION -> . NUMBER
    (8) EXPRESSION -> . FLOAT
    (9) EXPRESSION -> . BOOLEAN
    (10) EXPRESSION -> . STRING
    (11) EXPRESSION -> . OTHERSTRINGDECLARATION
    (12) EXPRESSION -> . ARRAY
    (13) EXPRESSION -> . HASH
    (14) EXPRESSION -> . FUNTIONS_ARRAY
    (15) EXPRESSION -> . FUNTIONS_HASH
    (16) EXPRESSION -> . LOGIC_NOT EXPRESSION
    (17) EXPRESSION -> . EXPRESSION_MAT
    (18) EXPRESSION -> . EXPRESSION_CONCAT
    (19) EXPRESSION -> . PUTS EXPRESSION
    (20) EXPRESSION -> . PUTS ID
    (21) EXPRESSION -> . GETS EXPRESSION
    (22) EXPRESSION -> . FUNCTIONS_STRING
    (23) EXPRESSION -> . BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN
    (24) EXPRESSION -> . DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING
    (30) EXPRESSION -> . DATANF OPERATOR_COMP_MAT DATANF
    (6) ASIGNATION -> . ID ASIGN EXPRESSION
    (65) STRUCTURE_FOR -> . STRUCTURE_IN_FOR DATA_REPEAT END
    (72) STRUCTURE_IF -> . STRUCTURE_IN_IF DATA_REPEAT END
    (79) STRUCTURE_WHILE -> . STRUCTURE_IN_WHILE DATA_REPEAT END
    (90) BOOLEAN -> . TRUE
    (91) BOOLEAN -> . FALSE
    (92) BOOLEAN -> . LOGIC_NOT TRUE
    (93) BOOLEAN -> . LOGIC_NOT FALSE
    (46) ARRAY -> . ALFT DATA ARGT
    (56) HASH -> . OPENINGCB REGISTRY CLOSURECB
    (47) FUNTIONS_ARRAY -> . ARRAY POINT FUNTIONS_ALLOWED_ARRAY
    (60) FUNTIONS_HASH -> . HASH POINT FUNTIONS_ALLOWED_HASH
    (31) EXPRESSION_MAT -> . EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT
    (32) EXPRESSION_MAT -> . LPAREN EXPRESSION_MAT RPAREN
    (33) EXPRESSION_MAT -> . DATANF
    (37) EXPRESSION_CONCAT -> . EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT
    (38) EXPRESSION_CONCAT -> . DATASTRING
    (39) EXPRESSION_CONCAT -> . ARRAY
    (42) FUNCTIONS_STRING -> . DATASTRING POINT FUNCTIONS_ALLOWED_STRING
    (40) DATASTRING -> . STRING
    (41) DATASTRING -> . OTHERSTRINGDECLARATION
    (34) DATANF -> . NUMBER
    (35) DATANF -> . FLOAT
    (36) DATANF -> . ID
    (66) STRUCTURE_IN_FOR -> . FOR ID IN ARRAY DO
    (67) STRUCTURE_IN_FOR -> . FOR ID IN ID DO
    (73) STRUCTURE_IN_IF -> . IF LPAREN BOOLEAN RPAREN
    (80) STRUCTURE_IN_WHILE -> . WHILE LPAREN TRUE RPAREN

    CLOSURECB       reduce using rule 52 (DATA_REPEAT_MAP -> STATEMENT .)
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 10
    OTHERSTRINGDECLARATION shift and go to state 11
    LOGIC_NOT       shift and go to state 16
    PUTS            shift and go to state 19
    GETS            shift and go to state 21
    ID              shift and go to state 20
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    ALFT            shift and go to state 30
    OPENINGCB       shift and go to state 31
    LPAREN          shift and go to state 32
    FOR             shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35

    STATEMENT                      shift and go to state 162
    DATA_REPEAT_MAP                shift and go to state 164
    EXPRESSION                     shift and go to state 2
    ASIGNATION                     shift and go to state 3
    STRUCTURE_FOR                  shift and go to state 4
    STRUCTURE_IF                   shift and go to state 5
    STRUCTURE_WHILE                shift and go to state 6
    BOOLEAN                        shift and go to state 9
    ARRAY                          shift and go to state 12
    HASH                           shift and go to state 13
    FUNTIONS_ARRAY                 shift and go to state 14
    FUNTIONS_HASH                  shift and go to state 15
    EXPRESSION_MAT                 shift and go to state 17
    EXPRESSION_CONCAT              shift and go to state 18
    FUNCTIONS_STRING               shift and go to state 22
    DATASTRING                     shift and go to state 23
    DATANF                         shift and go to state 24
    STRUCTURE_IN_FOR               shift and go to state 25
    STRUCTURE_IN_IF                shift and go to state 26
    STRUCTURE_IN_WHILE             shift and go to state 27

state 163

    (51) MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .

    $end            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ID              reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    NUMBER          reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FLOAT           reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    STRING          reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    OTHERSTRINGDECLARATION reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LOGIC_NOT       reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    PUTS            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    GETS            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    TRUE            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FALSE           reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ALFT            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    OPENINGCB       reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    LPAREN          reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    END             reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    ELSE            reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    FOR             reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    IF              reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    WHILE           reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)
    CLOSURECB       reduce using rule 51 (MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB .)


state 164

    (53) DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .

    CLOSURECB       reduce using rule 53 (DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for EXPONENTIATION in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 143 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 144 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (EXPRESSION -> NUMBER)
WARNING: rejected rule (DATANF -> NUMBER) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (EXPRESSION -> FLOAT)
WARNING: rejected rule (DATANF -> FLOAT) in state 8
WARNING: reduce/reduce conflict in state 10 resolved using rule (EXPRESSION -> STRING)
WARNING: rejected rule (DATASTRING -> STRING) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (EXPRESSION -> OTHERSTRINGDECLARATION)
WARNING: rejected rule (DATASTRING -> OTHERSTRINGDECLARATION) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (EXPRESSION -> ARRAY)
WARNING: rejected rule (EXPRESSION_CONCAT -> ARRAY) in state 12
WARNING: reduce/reduce conflict in state 45 resolved using rule (BOOLEAN -> TRUE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT TRUE) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (BOOLEAN -> FALSE)
WARNING: rejected rule (BOOLEAN -> LOGIC_NOT FALSE) in state 46
WARNING: reduce/reduce conflict in state 56 resolved using rule (EXPRESSION -> PUTS ID)
WARNING: rejected rule (DATANF -> ID) in state 56
WARNING: reduce/reduce conflict in state 75 resolved using rule (DATA_ALLOWED_IN_FOR -> ASIGNATION)
WARNING: rejected rule (DATA_ALLOWED_IN_IF -> ASIGNATION) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (DATA_ALLOWED_IN_FOR -> ASIGNATION)
WARNING: rejected rule (DATA_ALLOWED_IN_WHILE -> ASIGNATION) in state 75
WARNING: reduce/reduce conflict in state 76 resolved using rule (DATA_ALLOWED_IN_FOR -> EXPRESSION)
WARNING: rejected rule (DATA_ALLOWED_IN_IF -> EXPRESSION) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (DATA_ALLOWED_IN_FOR -> EXPRESSION)
WARNING: rejected rule (DATA_ALLOWED_IN_WHILE -> EXPRESSION) in state 76
WARNING: Rule (DATA_ALLOWED_IN_WHILE -> ASIGNATION) is never reduced
WARNING: Rule (DATA_ALLOWED_IN_WHILE -> EXPRESSION) is never reduced
