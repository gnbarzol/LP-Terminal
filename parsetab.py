
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALFT AND ARGT ASIGN CLOSURECB COMMA DIVIDE DO ELSE EMPTY END EQUAL EQUAL_STRICT EXPONENTIATION FALSE FIRST FLOAT FOR GETS GREATER GREATER_THAN_OR_EQUAL HASHROCKET HAS_VALUE ID IF IN INCLUDE LOGIC_AND LOGIC_NOT LOGIC_OR LPAREN MAP MERGE MIN MINOR MINOR_THAN_OR_EQUAL MINUS NUMBER OPENINGCB OR OTHERSTRINGDECLARATION PIPE PLUS POINT PUTS QUESTION RPAREN SIZE STRING TIMES TRUE UPCASE WHILE STATEMENT : EXPRESSION\n                | ASIGNATION\n                | STRUCTURE_FOR\n  ASIGNATION : ID ASIGN EXPRESSION EXPRESSION : NUMBER\n                | FLOAT\n                | BOOLEAN\n                | STRING\n                | OTHERSTRINGDECLARATION\n                | ARRAY\n                | FUNTIONS_ARRAY\n                | LOGIC_NOT EXPRESSION\n                | EXPRESSION_MAT\n                | EXPRESSION_CONCAT\n                | PUTS EXPRESSION\n                | PUTS ID\n                | GETS EXPRESSION\n                | FUNCTIONS_STRING\n   EXPRESSION : BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN\n                | DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING\n  OPERATOR_COMP_BOOLEAN : EQUAL\n                          | EQUAL_STRICT\n                          | LOGIC_AND\n                          | LOGIC_OR\n                          | PIPE\n\n  EXPRESSION : DATANF OPERATOR_COMP_MAT DATANF EXPRESSION_MAT : EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT\n                    | LPAREN EXPRESSION_MAT RPAREN\n      EXPRESSION_MAT : DATANF\n  DATANF : NUMBER\n            | FLOAT\n            | ID\n   EXPRESSION_CONCAT : EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT\n      EXPRESSION_CONCAT : DATASTRING\n                        | ARRAY\n  DATASTRING : STRING\n                | OTHERSTRINGDECLARATION\n  \n  FUNCTIONS_STRING : DATASTRING POINT FUNCTIONS_ALLOWED_STRING\n\n  FUNCTIONS_ALLOWED_STRING : INCLUDE QUESTION DATASTRING\n                            | EMPTY QUESTION\n                            | UPCASE\n  ARRAY : ALFT DATA ARGTFUNTIONS_ARRAY : ARRAY POINT FUNTIONS_ALLOWED_ARRAY\n\n    FUNTIONS_ALLOWED_ARRAY : MIN\n                          | FIRST\n                          | MAP_ARRAY\n  MAP_ARRAY : MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB\n\n    DATA_REPEAT_MAP : STATEMENT\n                    | STATEMENT DATA_REPEAT_MAP\n\n    DATA_ALLOWED_IN_MAP : ASIGNATION\n                        | EXPRESSION\n   STRUCTURE_FOR : STRUCTURE_IN_FOR DATA_REPEAT END\n\n      STRUCTURE_IN_FOR : FOR ID IN ARRAY DO\n                    | FOR ID IN ID DO\n\n      DATA_REPEAT : DATA_ALLOWED_IN_FOR\n                  | DATA_ALLOWED_IN_FOR DATA_REPEAT\n\n      DATA_ALLOWED_IN_FOR : ASIGNATION\n                          | EXPRESSION\n  DATA : NUMBER\n          | FLOAT\n          | BOOLEAN\n          | STRING\n  DATA : DATA COMMA DATABOOLEAN : TRUE\n            | FALSE\n            | LOGIC_NOT TRUE\n            | LOGIC_NOT FALSE\n  OPERATOR_MAT : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | EXPONENTIATION\n  OPERATOR_COMP_MAT : EQUAL\n                      | EQUAL_STRICT\n                      | GREATER_THAN_OR_EQUAL\n                      | MINOR_THAN_OR_EQUAL\n                      | MINOR\n                      | GREATER\n                      | LOGIC_AND\n                      | LOGIC_OR\n                      | PIPE\n  '
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,34,35,36,37,38,39,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,60,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,105,110,111,112,114,116,117,],[5,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,5,-13,-14,5,-32,5,-18,-34,-29,5,-64,-65,66,73,-12,-64,-65,-32,73,-68,-69,-70,-71,-72,-15,-16,5,-17,73,-73,-74,-75,-76,-77,-78,-79,-80,-81,5,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,66,-66,-67,-28,-40,-39,-54,-53,5,5,-47,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,34,35,36,37,38,39,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,60,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,105,110,111,112,114,116,117,],[6,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,6,-13,-14,6,-32,6,-18,-34,-29,6,-64,-65,67,74,-12,-64,-65,-32,74,-68,-69,-70,-71,-72,-15,-16,6,-17,74,-73,-74,-75,-76,-77,-78,-79,-80,-81,6,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,67,-66,-67,-28,-40,-39,-54,-53,6,6,-47,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,34,35,36,37,44,45,46,47,48,49,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,104,105,110,111,112,114,116,117,],[8,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,8,-13,-14,8,-32,8,-18,-34,-29,8,-64,-65,69,-21,-22,-23,-24,-25,-12,-64,-65,-32,86,-15,-16,8,-17,86,8,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,69,-66,-67,-28,86,-40,-39,-54,-53,8,8,-47,]),'OTHERSTRINGDECLARATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,28,29,30,31,32,34,35,36,37,44,45,46,47,48,49,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,104,105,110,111,112,114,116,117,],[9,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,9,-13,-14,9,-32,9,-18,-34,-29,9,-64,-65,-21,-22,-23,-24,-25,-12,-64,-65,-32,87,-15,-16,9,-17,87,9,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,87,-40,-39,-54,-53,9,9,-47,]),'LOGIC_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,34,35,36,37,45,46,47,48,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,105,110,111,112,114,116,117,],[12,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,12,-13,-14,12,-32,12,-18,-34,-29,12,-64,-65,70,70,-21,-22,-23,-24,-25,-12,-64,-65,-32,-15,-16,12,-17,12,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,70,-66,-67,-28,-40,-39,-54,-53,12,12,-47,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,35,36,37,45,46,47,48,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,111,112,114,116,117,],[15,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,15,-13,-14,15,-32,15,-18,-34,-29,15,-64,-65,-12,-64,-65,-32,-15,-16,15,-17,15,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,-54,-53,15,15,-47,]),'GETS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,35,36,37,45,46,47,48,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,111,112,114,116,117,],[17,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,17,-13,-14,17,-32,17,-18,-34,-29,17,-64,-65,-12,-64,-65,-32,-15,-16,17,-17,17,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,-54,-53,17,17,-47,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,34,35,36,37,38,39,40,41,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,60,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,102,105,109,110,111,112,114,116,117,],[16,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,37,-13,-14,46,-32,37,-18,-34,-29,16,-64,-65,37,75,-12,-64,-65,-32,37,-68,-69,-70,-71,-72,-15,-16,37,-17,37,-73,-74,-75,-76,-77,-78,-79,-80,-81,16,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,107,-40,113,-39,-54,-53,16,16,-47,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,34,35,36,37,45,46,47,48,62,63,64,70,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,105,110,111,112,114,116,117,],[22,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,35,-13,-14,22,-32,22,-18,-34,-29,22,-64,-65,22,22,-21,-22,-23,-24,-25,-12,-64,-65,-32,-15,-16,22,-17,22,-57,-58,99,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,22,-66,-67,-28,-40,-39,-54,-53,22,22,-47,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,34,35,36,37,45,46,47,48,62,63,64,70,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,98,99,100,101,105,110,111,112,114,116,117,],[23,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,36,-13,-14,23,-32,23,-18,-34,-29,23,-64,-65,23,23,-21,-22,-23,-24,-25,-12,-64,-65,-32,-15,-16,23,-17,23,-57,-58,100,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,23,-66,-67,-28,-40,-39,-54,-53,23,23,-47,]),'ALFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,35,36,37,44,45,46,47,48,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,102,105,110,111,112,114,116,117,],[24,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,24,-13,-14,24,-32,24,-18,-34,-29,24,-64,-65,-12,-64,-65,-32,24,-15,-16,24,-17,24,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,24,-40,-39,-54,-53,24,24,-47,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,34,35,36,37,38,39,40,41,42,43,45,46,47,48,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,111,112,114,116,117,],[25,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,25,-13,-14,25,-32,25,-18,-34,-29,25,-64,-65,25,-12,-64,-65,-32,25,-68,-69,-70,-71,-72,-15,-16,25,-17,25,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,-54,-53,25,25,-47,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,34,35,36,37,45,46,48,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,114,116,117,],[26,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-32,-18,-34,-29,-64,-65,-12,-64,-65,-32,-15,-16,-17,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,26,26,-47,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,34,35,36,37,45,46,48,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,117,],[0,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-32,-18,-34,-29,-64,-65,-12,-64,-65,-32,-15,-16,-17,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,-47,]),'CLOSURECB':([2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,34,35,36,37,45,46,48,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,95,97,99,100,101,105,110,115,116,117,118,],[-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-32,-18,-34,-29,-64,-65,-12,-64,-65,-32,-15,-16,-17,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-52,-42,-66,-67,-28,-40,-39,117,-48,-47,-49,]),'END':([5,6,7,8,9,10,11,13,14,16,18,19,20,22,23,34,35,36,37,45,46,48,61,62,63,64,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,93,94,96,97,99,100,101,105,110,117,],[-5,-6,-7,-8,-9,-10,-11,-13,-14,-32,-18,-34,-29,-64,-65,-12,-64,-65,-32,-15,-16,-17,95,-55,-57,-58,-29,-30,-31,-19,-43,-44,-45,-46,-27,-33,-34,-35,-36,-37,-4,-20,-38,-41,-26,-56,-42,-66,-67,-28,-40,-39,-47,]),'EQUAL':([5,6,7,8,9,16,19,20,22,23,35,36,37,46,],[-30,-31,28,-36,-37,-32,28,52,-64,-65,-64,-65,-32,-32,]),'EQUAL_STRICT':([5,6,7,8,9,16,19,20,22,23,35,36,37,46,],[-30,-31,29,-36,-37,-32,29,53,-64,-65,-64,-65,-32,-32,]),'GREATER_THAN_OR_EQUAL':([5,6,16,20,37,46,],[-30,-31,-32,54,-32,-32,]),'MINOR_THAN_OR_EQUAL':([5,6,16,20,37,46,],[-30,-31,-32,55,-32,-32,]),'MINOR':([5,6,16,20,37,46,],[-30,-31,-32,56,-32,-32,]),'GREATER':([5,6,16,20,37,46,],[-30,-31,-32,57,-32,-32,]),'LOGIC_AND':([5,6,7,8,9,16,19,20,22,23,35,36,37,46,],[-30,-31,30,-36,-37,-32,30,58,-64,-65,-64,-65,-32,-32,]),'LOGIC_OR':([5,6,7,8,9,16,19,20,22,23,35,36,37,46,],[-30,-31,31,-36,-37,-32,31,59,-64,-65,-64,-65,-32,-32,]),'PIPE':([5,6,7,8,9,16,19,20,22,23,35,36,37,46,103,113,],[-30,-31,32,-36,-37,-32,32,60,-64,-65,-64,-65,-32,-32,109,114,]),'PLUS':([5,6,8,9,10,13,14,16,19,20,37,46,71,72,73,74,82,83,84,85,86,87,97,101,],[-30,-31,-36,-37,-35,39,44,-32,-34,-29,-32,-32,39,-29,-30,-31,39,44,-34,-35,-36,-37,-42,-28,]),'MINUS':([5,6,13,16,20,37,46,71,72,73,74,82,101,],[-30,-31,40,-32,-29,-32,-32,40,-29,-30,-31,40,-28,]),'TIMES':([5,6,13,16,20,37,46,71,72,73,74,82,101,],[-30,-31,41,-32,-29,-32,-32,41,-29,-30,-31,41,-28,]),'DIVIDE':([5,6,13,16,20,37,46,71,72,73,74,82,101,],[-30,-31,42,-32,-29,-32,-32,42,-29,-30,-31,42,-28,]),'EXPONENTIATION':([5,6,13,16,20,37,46,71,72,73,74,82,101,],[-30,-31,43,-32,-29,-32,-32,43,-29,-30,-31,43,-28,]),'POINT':([8,9,10,19,97,],[-36,-37,33,50,-42,]),'ASIGN':([16,],[47,]),'ARGT':([22,23,65,66,67,68,69,99,100,106,],[-64,-65,97,-59,-60,-61,-62,-66,-67,-63,]),'COMMA':([22,23,65,66,67,68,69,99,100,106,],[-64,-65,98,-59,-60,-61,-62,-66,-67,98,]),'MIN':([33,],[78,]),'FIRST':([33,],[79,]),'MAP':([33,],[81,]),'RPAREN':([37,71,72,73,74,82,101,],[-32,101,-29,-30,-31,-27,-28,]),'INCLUDE':([50,],[91,]),'EMPTY':([50,],[92,]),'UPCASE':([50,],[93,]),'IN':([75,],[102,]),'OPENINGCB':([81,],[103,]),'QUESTION':([91,92,],[104,105,]),'DO':([97,107,108,],[-42,111,112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STATEMENT':([0,114,116,],[1,116,116,]),'EXPRESSION':([0,12,15,17,21,47,62,114,116,],[2,34,45,48,64,88,64,2,2,]),'ASIGNATION':([0,21,62,114,116,],[3,63,63,3,3,]),'STRUCTURE_FOR':([0,114,116,],[4,4,4,]),'BOOLEAN':([0,12,15,17,21,24,27,47,62,98,114,116,],[7,7,7,7,7,68,76,7,7,68,7,7,]),'ARRAY':([0,12,15,17,21,44,47,62,102,114,116,],[10,10,10,10,10,85,10,10,108,10,10,]),'FUNTIONS_ARRAY':([0,12,15,17,21,47,62,114,116,],[11,11,11,11,11,11,11,11,11,]),'EXPRESSION_MAT':([0,12,15,17,21,25,38,47,62,114,116,],[13,13,13,13,13,71,82,13,13,13,13,]),'EXPRESSION_CONCAT':([0,12,15,17,21,44,47,62,114,116,],[14,14,14,14,14,83,14,14,14,14,]),'FUNCTIONS_STRING':([0,12,15,17,21,47,62,114,116,],[18,18,18,18,18,18,18,18,18,]),'DATASTRING':([0,12,15,17,21,44,47,49,62,104,114,116,],[19,19,19,19,19,84,19,89,19,110,19,19,]),'DATANF':([0,12,15,17,21,25,38,47,51,62,114,116,],[20,20,20,20,20,72,72,20,94,20,20,20,]),'STRUCTURE_IN_FOR':([0,114,116,],[21,21,21,]),'OPERATOR_COMP_BOOLEAN':([7,19,],[27,49,]),'OPERATOR_MAT':([13,71,82,],[38,38,38,]),'OPERATOR_COMP_MAT':([20,],[51,]),'DATA_REPEAT':([21,62,],[61,96,]),'DATA_ALLOWED_IN_FOR':([21,62,],[62,62,]),'DATA':([24,98,],[65,106,]),'FUNTIONS_ALLOWED_ARRAY':([33,],[77,]),'MAP_ARRAY':([33,],[80,]),'FUNCTIONS_ALLOWED_STRING':([50,],[90,]),'DATA_REPEAT_MAP':([114,116,],[115,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> STATEMENT","S'",1,None,None,None),
  ('STATEMENT -> EXPRESSION','STATEMENT',1,'p_STATEMENT','sintactico.py',7),
  ('STATEMENT -> ASIGNATION','STATEMENT',1,'p_STATEMENT','sintactico.py',8),
  ('STATEMENT -> STRUCTURE_FOR','STATEMENT',1,'p_STATEMENT','sintactico.py',9),
  ('ASIGNATION -> ID ASIGN EXPRESSION','ASIGNATION',3,'p_ASIGNATION','sintactico.py',13),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_EXPRESSION','sintactico.py',17),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',18),
  ('EXPRESSION -> BOOLEAN','EXPRESSION',1,'p_EXPRESSION','sintactico.py',19),
  ('EXPRESSION -> STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',20),
  ('EXPRESSION -> OTHERSTRINGDECLARATION','EXPRESSION',1,'p_EXPRESSION','sintactico.py',21),
  ('EXPRESSION -> ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',22),
  ('EXPRESSION -> FUNTIONS_ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',23),
  ('EXPRESSION -> LOGIC_NOT EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',24),
  ('EXPRESSION -> EXPRESSION_MAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',25),
  ('EXPRESSION -> EXPRESSION_CONCAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',26),
  ('EXPRESSION -> PUTS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',27),
  ('EXPRESSION -> PUTS ID','EXPRESSION',2,'p_EXPRESSION','sintactico.py',28),
  ('EXPRESSION -> GETS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',29),
  ('EXPRESSION -> FUNCTIONS_STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',30),
  ('EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',36),
  ('EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',37),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',42),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',43),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_AND','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',44),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_OR','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',45),
  ('OPERATOR_COMP_BOOLEAN -> PIPE','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',46),
  ('EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF','EXPRESSION',3,'p_EXPRESSION_COMP_MAT','sintactico.py',53),
  ('EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',58),
  ('EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',59),
  ('EXPRESSION_MAT -> DATANF','EXPRESSION_MAT',1,'p_EXPRESSION_MAT','sintactico.py',60),
  ('DATANF -> NUMBER','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',65),
  ('DATANF -> FLOAT','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',66),
  ('DATANF -> ID','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',67),
  ('EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT','EXPRESSION_CONCAT',3,'p_EXPRESSION_CONCAT','sintactico.py',73),
  ('EXPRESSION_CONCAT -> DATASTRING','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',74),
  ('EXPRESSION_CONCAT -> ARRAY','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',75),
  ('DATASTRING -> STRING','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',79),
  ('DATASTRING -> OTHERSTRINGDECLARATION','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',80),
  ('FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING','FUNCTIONS_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',87),
  ('FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING','FUNCTIONS_ALLOWED_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',89),
  ('FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION','FUNCTIONS_ALLOWED_STRING',2,'p_FUNCTIONS_STRING','sintactico.py',90),
  ('FUNCTIONS_ALLOWED_STRING -> UPCASE','FUNCTIONS_ALLOWED_STRING',1,'p_FUNCTIONS_STRING','sintactico.py',91),
  ('ARRAY -> ALFT DATA ARGT','ARRAY',3,'p_ARRAY','sintactico.py',96),
  ('FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY','FUNTIONS_ARRAY',3,'p_FUNTIONS_ARRAY','sintactico.py',101),
  ('FUNTIONS_ALLOWED_ARRAY -> MIN','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',103),
  ('FUNTIONS_ALLOWED_ARRAY -> FIRST','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',104),
  ('FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',105),
  ('MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB','MAP_ARRAY',7,'p_MAP_ARRAY','sintactico.py',110),
  ('DATA_REPEAT_MAP -> STATEMENT','DATA_REPEAT_MAP',1,'p_MAP_ARRAY','sintactico.py',112),
  ('DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP','DATA_REPEAT_MAP',2,'p_MAP_ARRAY','sintactico.py',113),
  ('DATA_ALLOWED_IN_MAP -> ASIGNATION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',115),
  ('DATA_ALLOWED_IN_MAP -> EXPRESSION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',116),
  ('STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END','STRUCTURE_FOR',3,'p_STRUCTURE_FOR','sintactico.py',121),
  ('STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',123),
  ('STRUCTURE_IN_FOR -> FOR ID IN ID DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',124),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR','DATA_REPEAT',1,'p_STRUCTURE_FOR','sintactico.py',126),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT','DATA_REPEAT',2,'p_STRUCTURE_FOR','sintactico.py',127),
  ('DATA_ALLOWED_IN_FOR -> ASIGNATION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',129),
  ('DATA_ALLOWED_IN_FOR -> EXPRESSION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',130),
  ('DATA -> NUMBER','DATA',1,'p_DATA','sintactico.py',134),
  ('DATA -> FLOAT','DATA',1,'p_DATA','sintactico.py',135),
  ('DATA -> BOOLEAN','DATA',1,'p_DATA','sintactico.py',136),
  ('DATA -> STRING','DATA',1,'p_DATA','sintactico.py',137),
  ('DATA -> DATA COMMA DATA','DATA',3,'p_DATA_ANY','sintactico.py',142),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',146),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',147),
  ('BOOLEAN -> LOGIC_NOT TRUE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',148),
  ('BOOLEAN -> LOGIC_NOT FALSE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',149),
  ('OPERATOR_MAT -> PLUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',154),
  ('OPERATOR_MAT -> MINUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',155),
  ('OPERATOR_MAT -> TIMES','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',156),
  ('OPERATOR_MAT -> DIVIDE','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',157),
  ('OPERATOR_MAT -> EXPONENTIATION','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',158),
  ('OPERATOR_COMP_MAT -> EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',165),
  ('OPERATOR_COMP_MAT -> EQUAL_STRICT','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',166),
  ('OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',167),
  ('OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',168),
  ('OPERATOR_COMP_MAT -> MINOR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',169),
  ('OPERATOR_COMP_MAT -> GREATER','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',170),
  ('OPERATOR_COMP_MAT -> LOGIC_AND','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',171),
  ('OPERATOR_COMP_MAT -> LOGIC_OR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',172),
  ('OPERATOR_COMP_MAT -> PIPE','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',173),
]
