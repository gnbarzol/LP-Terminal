
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALFT AND ARGT ASIGN CLOSURECB COMMA DIVIDE DO ELSE EMPTY END EQUAL EQUAL_STRICT EXPONENTIATION FALSE FIRST FLOAT FOR GETS GREATER GREATER_THAN_OR_EQUAL HASHROCKET HAS_VALUE ID IF IN INCLUDE LOGIC_AND LOGIC_NOT LOGIC_OR LPAREN MAP MERGE MIN MINOR MINOR_THAN_OR_EQUAL MINUS NUMBER OPENINGCB OR OTHERSTRINGDECLARATION PIPE PLUS POINT PUTS QUESTION RPAREN SIZE STRING TIMES TRUE UPCASE WHILE STATEMENT : EXPRESSION\n                | ASIGNATION\n                | STRUCTURE_FOR\n                | STRUCTURE_IF\n  ASIGNATION : ID ASIGN EXPRESSION EXPRESSION : NUMBER\n                | FLOAT\n                | BOOLEAN\n                | STRING\n                | OTHERSTRINGDECLARATION\n                | ARRAY\n                | FUNTIONS_ARRAY\n                | LOGIC_NOT EXPRESSION\n                | EXPRESSION_MAT\n                | EXPRESSION_CONCAT\n                | PUTS EXPRESSION\n                | PUTS ID\n                | GETS EXPRESSION\n                | FUNCTIONS_STRING\n   EXPRESSION : BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN\n                | DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING\n  OPERATOR_COMP_BOOLEAN : EQUAL\n                          | EQUAL_STRICT\n                          | LOGIC_AND\n                          | LOGIC_OR\n                          | PIPE\n\n  EXPRESSION : DATANF OPERATOR_COMP_MAT DATANF EXPRESSION_MAT : EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT\n                    | LPAREN EXPRESSION_MAT RPAREN\n      EXPRESSION_MAT : DATANF\n  DATANF : NUMBER\n            | FLOAT\n            | ID\n   EXPRESSION_CONCAT : EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT\n      EXPRESSION_CONCAT : DATASTRING\n                        | ARRAY\n  DATASTRING : STRING\n                | OTHERSTRINGDECLARATION\n  \n  FUNCTIONS_STRING : DATASTRING POINT FUNCTIONS_ALLOWED_STRING\n\n  FUNCTIONS_ALLOWED_STRING : INCLUDE QUESTION DATASTRING\n                            | EMPTY QUESTION\n                            | UPCASE\n  ARRAY : ALFT DATA ARGTFUNTIONS_ARRAY : ARRAY POINT FUNTIONS_ALLOWED_ARRAY\n\n    FUNTIONS_ALLOWED_ARRAY : MIN\n                          | FIRST\n                          | MAP_ARRAY\n  MAP_ARRAY : MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB\n\n    DATA_REPEAT_MAP : STATEMENT\n                    | STATEMENT DATA_REPEAT_MAP\n\n    DATA_ALLOWED_IN_MAP : ASIGNATION\n                        | EXPRESSION\n   STRUCTURE_FOR : STRUCTURE_IN_FOR DATA_REPEAT END\n\n      STRUCTURE_IN_FOR : FOR ID IN ARRAY DO\n                    | FOR ID IN ID DO\n\n      DATA_REPEAT : DATA_ALLOWED_IN_FOR\n                  | DATA_ALLOWED_IN_FOR DATA_REPEAT\n\n      DATA_ALLOWED_IN_FOR : ASIGNATION\n                          | EXPRESSION\n   STRUCTURE_IF : STRUCTURE_IN_IF DATA_REPEAT END\n\n      STRUCTURE_IN_IF : IF LPAREN BOOLEAN RPAREN\n\n\n      DATA_REPEAT : DATA_ALLOWED_IN_IF\n                  | DATA_ALLOWED_IN_IF DATA_REPEAT\n\n      DATA_ALLOWED_IN_IF : ASIGNATION\n                          | EXPRESSION\n  DATA : NUMBER\n          | FLOAT\n          | BOOLEAN\n          | STRING\n  DATA : DATA COMMA DATABOOLEAN : TRUE\n            | FALSE\n            | LOGIC_NOT TRUE\n            | LOGIC_NOT FALSE\n  OPERATOR_MAT : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | EXPONENTIATION\n  OPERATOR_COMP_MAT : EQUAL\n                      | EQUAL_STRICT\n                      | GREATER_THAN_OR_EQUAL\n                      | MINOR_THAN_OR_EQUAL\n                      | MINOR\n                      | GREATER\n                      | LOGIC_AND\n                      | LOGIC_OR\n                      | PIPE\n  '
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,38,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,60,61,62,63,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,114,118,120,121,122,124,126,127,],[6,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,6,-14,-15,6,-33,6,-19,-35,-30,6,6,-71,-72,71,78,-13,-71,-72,-33,78,-75,-76,-77,-78,-79,-16,-17,6,-18,78,-80,-81,-82,-83,-84,-85,-86,-87,-88,6,6,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,71,-73,-74,-29,-41,-61,-40,-55,-54,6,6,-48,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,37,38,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,60,61,62,63,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,114,118,120,121,122,124,126,127,],[7,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,7,-14,-15,7,-33,7,-19,-35,-30,7,7,-71,-72,72,79,-13,-71,-72,-33,79,-75,-76,-77,-78,-79,-16,-17,7,-18,79,-80,-81,-82,-83,-84,-85,-86,-87,-88,7,7,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,72,-73,-74,-29,-41,-61,-40,-55,-54,7,7,-48,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,32,33,34,35,37,38,39,40,47,48,49,50,51,52,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,113,114,118,120,121,122,124,126,127,],[9,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,9,-14,-15,9,-33,9,-19,-35,-30,9,9,-71,-72,74,-22,-23,-24,-25,-26,-13,-71,-72,-33,92,-16,-17,9,-18,92,9,9,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,74,-73,-74,-29,92,-41,-61,-40,-55,-54,9,9,-48,]),'OTHERSTRINGDECLARATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,31,32,33,34,35,37,38,39,40,47,48,49,50,51,52,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,113,114,118,120,121,122,124,126,127,],[10,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,10,-14,-15,10,-33,10,-19,-35,-30,10,10,-71,-72,-22,-23,-24,-25,-26,-13,-71,-72,-33,93,-16,-17,10,-18,93,10,10,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,93,-41,-61,-40,-55,-54,10,10,-48,]),'LOGIC_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,37,38,39,40,48,49,50,51,65,66,67,68,77,78,79,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,114,118,120,121,122,124,126,127,],[13,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,13,-14,-15,13,-33,13,-19,-35,-30,13,13,-71,-72,75,75,-22,-23,-24,-25,-26,-13,-71,-72,-33,-16,-17,13,-18,13,13,-58,-59,-30,-31,-32,75,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,75,-73,-74,-29,-41,-61,-40,-55,-54,13,13,-48,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,48,49,50,51,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,118,120,121,122,124,126,127,],[16,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,16,-14,-15,16,-33,16,-19,-35,-30,16,16,-71,-72,-13,-71,-72,-33,-16,-17,16,-18,16,16,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-61,-40,-55,-54,16,16,-48,]),'GETS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,48,49,50,51,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,118,120,121,122,124,126,127,],[18,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,18,-14,-15,18,-33,18,-19,-35,-30,18,18,-71,-72,-13,-71,-72,-33,-16,-17,18,-18,18,18,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-61,-40,-55,-54,18,18,-48,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,37,38,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,57,58,59,60,61,62,63,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,110,114,118,119,120,121,122,124,126,127,],[17,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,40,-14,-15,49,-33,40,-19,-35,-30,17,17,-71,-72,40,80,-13,-71,-72,-33,40,-75,-76,-77,-78,-79,-16,-17,40,-18,40,-80,-81,-82,-83,-84,-85,-86,-87,-88,17,17,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,116,-41,-61,123,-40,-55,-54,17,17,-48,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,37,38,39,40,48,49,50,51,65,66,67,68,75,77,78,79,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,114,118,120,121,122,124,126,127,],[24,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,38,-14,-15,24,-33,24,-19,-35,-30,24,24,-71,-72,24,24,-22,-23,-24,-25,-26,-13,-71,-72,-33,-16,-17,24,-18,24,24,-58,-59,107,-30,-31,-32,24,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,24,-73,-74,-29,-41,-61,-40,-55,-54,24,24,-48,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,37,38,39,40,48,49,50,51,65,66,67,68,75,77,78,79,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,114,118,120,121,122,124,126,127,],[25,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,39,-14,-15,25,-33,25,-19,-35,-30,25,25,-71,-72,25,25,-22,-23,-24,-25,-26,-13,-71,-72,-33,-16,-17,25,-18,25,25,-58,-59,108,-30,-31,-32,25,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,25,-73,-74,-29,-41,-61,-40,-55,-54,25,25,-48,]),'ALFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,47,48,49,50,51,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,110,114,118,120,121,122,124,126,127,],[26,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,26,-14,-15,26,-33,26,-19,-35,-30,26,26,-71,-72,-13,-71,-72,-33,26,-16,-17,26,-18,26,26,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,26,-41,-61,-40,-55,-54,26,26,-48,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,37,38,39,40,41,42,43,44,45,46,48,49,50,51,65,66,67,68,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,118,120,121,122,124,126,127,],[27,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,27,-14,-15,27,-33,27,-19,-35,-30,27,27,-71,-72,27,81,-13,-71,-72,-33,27,-75,-76,-77,-78,-79,-16,-17,27,-18,27,27,-58,-59,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-61,-40,-55,-54,27,27,-48,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,17,19,20,21,24,25,37,38,39,40,48,49,51,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,120,124,126,127,],[28,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-14,-15,-33,-19,-35,-30,-71,-72,-13,-71,-72,-33,-16,-17,-18,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-40,28,28,-48,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,17,19,20,21,24,25,37,38,39,40,48,49,51,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,120,124,126,127,],[29,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-14,-15,-33,-19,-35,-30,-71,-72,-13,-71,-72,-33,-16,-17,-18,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-40,29,29,-48,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,15,17,19,20,21,24,25,37,38,39,40,48,49,51,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,120,127,],[0,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-14,-15,-33,-19,-35,-30,-71,-72,-13,-71,-72,-33,-16,-17,-18,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-40,-48,]),'CLOSURECB':([2,3,4,5,6,7,8,9,10,11,12,14,15,17,19,20,21,24,25,37,38,39,40,48,49,51,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,101,104,105,107,108,109,114,120,125,126,127,128,],[-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-12,-14,-15,-33,-19,-35,-30,-71,-72,-13,-71,-72,-33,-16,-17,-18,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-53,-60,-43,-73,-74,-29,-41,-40,127,-49,-48,-50,]),'END':([6,7,8,9,10,11,12,14,15,17,19,20,21,24,25,37,38,39,40,48,49,51,64,65,66,67,68,69,77,78,79,82,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,102,103,105,107,108,109,114,120,127,],[-6,-7,-8,-9,-10,-11,-12,-14,-15,-33,-19,-35,-30,-71,-72,-13,-71,-72,-33,-16,-17,-18,101,-56,-62,-58,-59,104,-30,-31,-32,-20,-44,-45,-46,-47,-28,-34,-35,-36,-37,-38,-5,-21,-39,-42,-27,-57,-63,-43,-73,-74,-29,-41,-40,-48,]),'EQUAL':([6,7,8,9,10,17,20,21,24,25,38,39,40,49,],[-31,-32,31,-37,-38,-33,31,55,-71,-72,-71,-72,-33,-33,]),'EQUAL_STRICT':([6,7,8,9,10,17,20,21,24,25,38,39,40,49,],[-31,-32,32,-37,-38,-33,32,56,-71,-72,-71,-72,-33,-33,]),'GREATER_THAN_OR_EQUAL':([6,7,17,21,40,49,],[-31,-32,-33,57,-33,-33,]),'MINOR_THAN_OR_EQUAL':([6,7,17,21,40,49,],[-31,-32,-33,58,-33,-33,]),'MINOR':([6,7,17,21,40,49,],[-31,-32,-33,59,-33,-33,]),'GREATER':([6,7,17,21,40,49,],[-31,-32,-33,60,-33,-33,]),'LOGIC_AND':([6,7,8,9,10,17,20,21,24,25,38,39,40,49,],[-31,-32,33,-37,-38,-33,33,61,-71,-72,-71,-72,-33,-33,]),'LOGIC_OR':([6,7,8,9,10,17,20,21,24,25,38,39,40,49,],[-31,-32,34,-37,-38,-33,34,62,-71,-72,-71,-72,-33,-33,]),'PIPE':([6,7,8,9,10,17,20,21,24,25,38,39,40,49,112,123,],[-31,-32,35,-37,-38,-33,35,63,-71,-72,-71,-72,-33,-33,119,124,]),'PLUS':([6,7,9,10,11,14,15,17,20,21,40,49,76,77,78,79,88,89,90,91,92,93,105,109,],[-31,-32,-37,-38,-36,42,47,-33,-35,-30,-33,-33,42,-30,-31,-32,42,47,-35,-36,-37,-38,-43,-29,]),'MINUS':([6,7,14,17,21,40,49,76,77,78,79,88,109,],[-31,-32,43,-33,-30,-33,-33,43,-30,-31,-32,43,-29,]),'TIMES':([6,7,14,17,21,40,49,76,77,78,79,88,109,],[-31,-32,44,-33,-30,-33,-33,44,-30,-31,-32,44,-29,]),'DIVIDE':([6,7,14,17,21,40,49,76,77,78,79,88,109,],[-31,-32,45,-33,-30,-33,-33,45,-30,-31,-32,45,-29,]),'EXPONENTIATION':([6,7,14,17,21,40,49,76,77,78,79,88,109,],[-31,-32,46,-33,-30,-33,-33,46,-30,-31,-32,46,-29,]),'POINT':([9,10,11,20,105,],[-37,-38,36,53,-43,]),'ASIGN':([17,],[50,]),'ARGT':([24,25,70,71,72,73,74,107,108,115,],[-71,-72,105,-66,-67,-68,-69,-73,-74,-70,]),'COMMA':([24,25,70,71,72,73,74,107,108,115,],[-71,-72,106,-66,-67,-68,-69,-73,-74,106,]),'RPAREN':([24,25,40,76,77,78,79,88,107,108,109,111,],[-71,-72,-33,109,-30,-31,-32,-28,-73,-74,-29,118,]),'MIN':([36,],[84,]),'FIRST':([36,],[85,]),'MAP':([36,],[87,]),'INCLUDE':([53,],[97,]),'EMPTY':([53,],[98,]),'UPCASE':([53,],[99,]),'IN':([80,],[110,]),'OPENINGCB':([87,],[112,]),'QUESTION':([97,98,],[113,114,]),'DO':([105,116,117,],[-43,121,122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STATEMENT':([0,124,126,],[1,126,126,]),'EXPRESSION':([0,13,16,18,22,23,50,65,66,124,126,],[2,37,48,51,68,68,94,68,68,2,2,]),'ASIGNATION':([0,22,23,65,66,124,126,],[3,67,67,67,67,3,3,]),'STRUCTURE_FOR':([0,124,126,],[4,4,4,]),'STRUCTURE_IF':([0,124,126,],[5,5,5,]),'BOOLEAN':([0,13,16,18,22,23,26,30,50,65,66,81,106,124,126,],[8,8,8,8,8,8,73,82,8,8,8,111,73,8,8,]),'ARRAY':([0,13,16,18,22,23,47,50,65,66,110,124,126,],[11,11,11,11,11,11,91,11,11,11,117,11,11,]),'FUNTIONS_ARRAY':([0,13,16,18,22,23,50,65,66,124,126,],[12,12,12,12,12,12,12,12,12,12,12,]),'EXPRESSION_MAT':([0,13,16,18,22,23,27,41,50,65,66,124,126,],[14,14,14,14,14,14,76,88,14,14,14,14,14,]),'EXPRESSION_CONCAT':([0,13,16,18,22,23,47,50,65,66,124,126,],[15,15,15,15,15,15,89,15,15,15,15,15,]),'FUNCTIONS_STRING':([0,13,16,18,22,23,50,65,66,124,126,],[19,19,19,19,19,19,19,19,19,19,19,]),'DATASTRING':([0,13,16,18,22,23,47,50,52,65,66,113,124,126,],[20,20,20,20,20,20,90,20,95,20,20,120,20,20,]),'DATANF':([0,13,16,18,22,23,27,41,50,54,65,66,124,126,],[21,21,21,21,21,21,77,77,21,100,21,21,21,21,]),'STRUCTURE_IN_FOR':([0,124,126,],[22,22,22,]),'STRUCTURE_IN_IF':([0,124,126,],[23,23,23,]),'OPERATOR_COMP_BOOLEAN':([8,20,],[30,52,]),'OPERATOR_MAT':([14,76,88,],[41,41,41,]),'OPERATOR_COMP_MAT':([21,],[54,]),'DATA_REPEAT':([22,23,65,66,],[64,69,102,103,]),'DATA_ALLOWED_IN_FOR':([22,23,65,66,],[65,65,65,65,]),'DATA_ALLOWED_IN_IF':([22,23,65,66,],[66,66,66,66,]),'DATA':([26,106,],[70,115,]),'FUNTIONS_ALLOWED_ARRAY':([36,],[83,]),'MAP_ARRAY':([36,],[86,]),'FUNCTIONS_ALLOWED_STRING':([53,],[96,]),'DATA_REPEAT_MAP':([124,126,],[125,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> STATEMENT","S'",1,None,None,None),
  ('STATEMENT -> EXPRESSION','STATEMENT',1,'p_STATEMENT','sintactico.py',7),
  ('STATEMENT -> ASIGNATION','STATEMENT',1,'p_STATEMENT','sintactico.py',8),
  ('STATEMENT -> STRUCTURE_FOR','STATEMENT',1,'p_STATEMENT','sintactico.py',9),
  ('STATEMENT -> STRUCTURE_IF','STATEMENT',1,'p_STATEMENT','sintactico.py',10),
  ('ASIGNATION -> ID ASIGN EXPRESSION','ASIGNATION',3,'p_ASIGNATION','sintactico.py',14),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_EXPRESSION','sintactico.py',18),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',19),
  ('EXPRESSION -> BOOLEAN','EXPRESSION',1,'p_EXPRESSION','sintactico.py',20),
  ('EXPRESSION -> STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',21),
  ('EXPRESSION -> OTHERSTRINGDECLARATION','EXPRESSION',1,'p_EXPRESSION','sintactico.py',22),
  ('EXPRESSION -> ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',23),
  ('EXPRESSION -> FUNTIONS_ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',24),
  ('EXPRESSION -> LOGIC_NOT EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',25),
  ('EXPRESSION -> EXPRESSION_MAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',26),
  ('EXPRESSION -> EXPRESSION_CONCAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',27),
  ('EXPRESSION -> PUTS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',28),
  ('EXPRESSION -> PUTS ID','EXPRESSION',2,'p_EXPRESSION','sintactico.py',29),
  ('EXPRESSION -> GETS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',30),
  ('EXPRESSION -> FUNCTIONS_STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',31),
  ('EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',37),
  ('EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',38),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',43),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',44),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_AND','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',45),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_OR','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',46),
  ('OPERATOR_COMP_BOOLEAN -> PIPE','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',47),
  ('EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF','EXPRESSION',3,'p_EXPRESSION_COMP_MAT','sintactico.py',54),
  ('EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',59),
  ('EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',60),
  ('EXPRESSION_MAT -> DATANF','EXPRESSION_MAT',1,'p_EXPRESSION_MAT','sintactico.py',61),
  ('DATANF -> NUMBER','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',66),
  ('DATANF -> FLOAT','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',67),
  ('DATANF -> ID','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',68),
  ('EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT','EXPRESSION_CONCAT',3,'p_EXPRESSION_CONCAT','sintactico.py',74),
  ('EXPRESSION_CONCAT -> DATASTRING','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',75),
  ('EXPRESSION_CONCAT -> ARRAY','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',76),
  ('DATASTRING -> STRING','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',80),
  ('DATASTRING -> OTHERSTRINGDECLARATION','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',81),
  ('FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING','FUNCTIONS_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',88),
  ('FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION DATASTRING','FUNCTIONS_ALLOWED_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',90),
  ('FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION','FUNCTIONS_ALLOWED_STRING',2,'p_FUNCTIONS_STRING','sintactico.py',91),
  ('FUNCTIONS_ALLOWED_STRING -> UPCASE','FUNCTIONS_ALLOWED_STRING',1,'p_FUNCTIONS_STRING','sintactico.py',92),
  ('ARRAY -> ALFT DATA ARGT','ARRAY',3,'p_ARRAY','sintactico.py',97),
  ('FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY','FUNTIONS_ARRAY',3,'p_FUNTIONS_ARRAY','sintactico.py',102),
  ('FUNTIONS_ALLOWED_ARRAY -> MIN','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',104),
  ('FUNTIONS_ALLOWED_ARRAY -> FIRST','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',105),
  ('FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',106),
  ('MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB','MAP_ARRAY',7,'p_MAP_ARRAY','sintactico.py',111),
  ('DATA_REPEAT_MAP -> STATEMENT','DATA_REPEAT_MAP',1,'p_MAP_ARRAY','sintactico.py',113),
  ('DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP','DATA_REPEAT_MAP',2,'p_MAP_ARRAY','sintactico.py',114),
  ('DATA_ALLOWED_IN_MAP -> ASIGNATION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',116),
  ('DATA_ALLOWED_IN_MAP -> EXPRESSION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',117),
  ('STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END','STRUCTURE_FOR',3,'p_STRUCTURE_FOR','sintactico.py',122),
  ('STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',124),
  ('STRUCTURE_IN_FOR -> FOR ID IN ID DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',125),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR','DATA_REPEAT',1,'p_STRUCTURE_FOR','sintactico.py',127),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT','DATA_REPEAT',2,'p_STRUCTURE_FOR','sintactico.py',128),
  ('DATA_ALLOWED_IN_FOR -> ASIGNATION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',130),
  ('DATA_ALLOWED_IN_FOR -> EXPRESSION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',131),
  ('STRUCTURE_IF -> STRUCTURE_IN_IF DATA_REPEAT END','STRUCTURE_IF',3,'p_STRUCTURE_IF','sintactico.py',136),
  ('STRUCTURE_IN_IF -> IF LPAREN BOOLEAN RPAREN','STRUCTURE_IN_IF',4,'p_STRUCTURE_IF','sintactico.py',138),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_IF','DATA_REPEAT',1,'p_STRUCTURE_IF','sintactico.py',141),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_IF DATA_REPEAT','DATA_REPEAT',2,'p_STRUCTURE_IF','sintactico.py',142),
  ('DATA_ALLOWED_IN_IF -> ASIGNATION','DATA_ALLOWED_IN_IF',1,'p_STRUCTURE_IF','sintactico.py',144),
  ('DATA_ALLOWED_IN_IF -> EXPRESSION','DATA_ALLOWED_IN_IF',1,'p_STRUCTURE_IF','sintactico.py',145),
  ('DATA -> NUMBER','DATA',1,'p_DATA','sintactico.py',151),
  ('DATA -> FLOAT','DATA',1,'p_DATA','sintactico.py',152),
  ('DATA -> BOOLEAN','DATA',1,'p_DATA','sintactico.py',153),
  ('DATA -> STRING','DATA',1,'p_DATA','sintactico.py',154),
  ('DATA -> DATA COMMA DATA','DATA',3,'p_DATA_ANY','sintactico.py',159),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',163),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',164),
  ('BOOLEAN -> LOGIC_NOT TRUE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',165),
  ('BOOLEAN -> LOGIC_NOT FALSE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',166),
  ('OPERATOR_MAT -> PLUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',171),
  ('OPERATOR_MAT -> MINUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',172),
  ('OPERATOR_MAT -> TIMES','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',173),
  ('OPERATOR_MAT -> DIVIDE','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',174),
  ('OPERATOR_MAT -> EXPONENTIATION','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',175),
  ('OPERATOR_COMP_MAT -> EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',182),
  ('OPERATOR_COMP_MAT -> EQUAL_STRICT','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',183),
  ('OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',184),
  ('OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',185),
  ('OPERATOR_COMP_MAT -> MINOR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',186),
  ('OPERATOR_COMP_MAT -> GREATER','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',187),
  ('OPERATOR_COMP_MAT -> LOGIC_AND','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',188),
  ('OPERATOR_COMP_MAT -> LOGIC_OR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',189),
  ('OPERATOR_COMP_MAT -> PIPE','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',190),
]
