
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALFT AND ARGT ASIGN CLOSURECB COMMA DIVIDE DO ELSE EMPTY END EQUAL EQUAL_STRICT EXPONENTIATION FALSE FIRST FLOAT FOR GETS GREATER GREATER_THAN_OR_EQUAL HASHROCKET HAS_VALUE ID IF IN INCLUDE LOGIC_AND LOGIC_NOT LOGIC_OR LPAREN MAP MERGE MIN MINOR MINOR_THAN_OR_EQUAL MINUS NUMBER OPENINGCB OR OTHERSTRINGDECLARATION PIPE PLUS POINT PUTS QUESTION RPAREN SIZE STRING TIMES TRUE UPCASE WHILE STATEMENT : EXPRESSION\n                | ASIGNATION\n                | STRUCTURE_FOR\n  ASIGNATION : ID ASIGN EXPRESSION EXPRESSION : NUMBER\n                | FLOAT\n                | BOOLEAN\n                | STRING\n                | OTHERSTRINGDECLARATION\n                | ARRAY\n                | FUNTIONS_ARRAY\n                | LOGIC_NOT EXPRESSION\n                | EXPRESSION_MAT\n                | EXPRESSION_CONCAT\n                | PUTS EXPRESSION\n                | PUTS ID\n                | GETS EXPRESSION\n   EXPRESSION : BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN\n                | DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING\n  OPERATOR_COMP_BOOLEAN : EQUAL\n                          | EQUAL_STRICT\n                          | LOGIC_AND\n                          | LOGIC_OR\n                          | PIPE\n\n  EXPRESSION : DATANF OPERATOR_COMP_MAT DATANF EXPRESSION_MAT : EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT\n                    | LPAREN EXPRESSION_MAT RPAREN\n      EXPRESSION_MAT : DATANF\n  DATANF : NUMBER\n            | FLOAT\n            | ID\n   EXPRESSION_CONCAT : EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT\n      EXPRESSION_CONCAT : DATASTRING\n                        | ARRAY\n  DATASTRING : STRING\n                | OTHERSTRINGDECLARATION\n  FUNCTIONS_STRING : DATASTRING POINT FUNCTIONS_ALLOWED_STRING\n\n    FUNCTIONS_ALLOWED_STRING : INCLUDE QUESTION STRING\n                            | EMPTY QUESTION\n                            | UPCASE\n  ARRAY : ALFT DATA ARGTFUNTIONS_ARRAY : ARRAY POINT FUNTIONS_ALLOWED_ARRAY\n\n    FUNTIONS_ALLOWED_ARRAY : MIN\n                          | FIRST\n                          | MAP_ARRAY\n  MAP_ARRAY : MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB\n\n    DATA_REPEAT_MAP : STATEMENT\n                    | STATEMENT DATA_REPEAT_MAP\n\n    DATA_ALLOWED_IN_MAP : ASIGNATION\n                        | EXPRESSION\n   STRUCTURE_FOR : STRUCTURE_IN_FOR DATA_REPEAT END\n\n      STRUCTURE_IN_FOR : FOR ID IN ARRAY DO\n                    | FOR ID IN ID DO\n\n      DATA_REPEAT : DATA_ALLOWED_IN_FOR\n                  | DATA_ALLOWED_IN_FOR DATA_REPEAT\n\n      DATA_ALLOWED_IN_FOR : ASIGNATION\n                          | EXPRESSION\n  DATA : NUMBER\n          | FLOAT\n          | BOOLEAN\n          | STRING\n  DATA : DATA COMMA DATABOOLEAN : TRUE\n            | FALSE\n            | LOGIC_NOT TRUE\n            | LOGIC_NOT FALSE\n  OPERATOR_MAT : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | EXPONENTIATION\n  OPERATOR_COMP_MAT : EQUAL\n                      | EQUAL_STRICT\n                      | GREATER_THAN_OR_EQUAL\n                      | MINOR_THAN_OR_EQUAL\n                      | MINOR\n                      | GREATER\n                      | LOGIC_AND\n                      | LOGIC_OR\n                      | PIPE\n  '
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[5,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,5,-13,-14,5,-31,5,-33,-28,5,-63,-64,64,71,-12,-63,-64,-31,71,-67,-68,-69,-70,-71,-15,-16,5,-17,71,-72,-73,-74,-75,-76,-77,-78,-79,-80,5,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,64,-65,-66,-27,-53,-52,5,5,-46,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[6,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,6,-13,-14,6,-31,6,-33,-28,6,-63,-64,65,72,-12,-63,-64,-31,72,-67,-68,-69,-70,-71,-15,-16,6,-17,72,-72,-73,-74,-75,-76,-77,-78,-79,-80,6,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,65,-65,-66,-27,-53,-52,6,6,-46,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28,29,30,31,33,34,35,36,43,44,45,46,47,48,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[8,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,8,-13,-14,8,-31,8,-33,-28,8,-63,-64,67,-20,-21,-22,-23,-24,-12,-63,-64,-31,84,-15,-16,8,-17,84,8,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,67,-65,-66,-27,-53,-52,8,8,-46,]),'OTHERSTRINGDECLARATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,33,34,35,36,43,44,45,46,47,48,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,102,103,105,107,108,],[9,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,9,-13,-14,9,-31,9,-33,-28,9,-63,-64,-20,-21,-22,-23,-24,-12,-63,-64,-31,85,-15,-16,9,-17,85,9,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,-53,-52,9,9,-46,]),'LOGIC_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,47,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[12,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,12,-13,-14,12,-31,12,-33,-28,12,-63,-64,68,68,-20,-21,-22,-23,-24,-12,-63,-64,-31,-15,-16,12,-17,12,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,68,-65,-66,-27,-53,-52,12,12,-46,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,44,45,46,47,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,102,103,105,107,108,],[15,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,15,-13,-14,15,-31,15,-33,-28,15,-63,-64,-12,-63,-64,-31,-15,-16,15,-17,15,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,-53,-52,15,15,-46,]),'GETS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,44,45,46,47,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,102,103,105,107,108,],[17,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,17,-13,-14,17,-31,17,-33,-28,17,-63,-64,-12,-63,-64,-31,-15,-16,17,-17,17,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,-53,-52,17,17,-46,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,33,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,96,101,102,103,105,107,108,],[16,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,36,-13,-14,45,-31,36,-33,-28,16,-63,-64,36,73,-12,-63,-64,-31,36,-67,-68,-69,-70,-71,-15,-16,36,-17,36,-72,-73,-74,-75,-76,-77,-78,-79,-80,16,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,99,104,-53,-52,16,16,-46,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,47,60,61,62,68,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[21,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,34,-13,-14,21,-31,21,-33,-28,21,-63,-64,21,21,-20,-21,-22,-23,-24,-12,-63,-64,-31,-15,-16,21,-17,21,-56,-57,93,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,21,-65,-66,-27,-53,-52,21,21,-46,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,47,60,61,62,68,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,],[22,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,35,-13,-14,22,-31,22,-33,-28,22,-63,-64,22,22,-20,-21,-22,-23,-24,-12,-63,-64,-31,-15,-16,22,-17,22,-56,-57,94,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,22,-65,-66,-27,-53,-52,22,22,-46,]),'ALFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,43,44,45,46,47,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,96,102,103,105,107,108,],[23,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,23,-13,-14,23,-31,23,-33,-28,23,-63,-64,-12,-63,-64,-31,23,-15,-16,23,-17,23,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,23,-53,-52,23,23,-46,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,33,34,35,36,37,38,39,40,41,42,44,45,46,47,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,102,103,105,107,108,],[24,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,24,-13,-14,24,-31,24,-33,-28,24,-63,-64,24,-12,-63,-64,-31,24,-67,-68,-69,-70,-71,-15,-16,24,-17,24,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,-53,-52,24,24,-46,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,21,22,33,34,35,36,44,45,47,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,105,107,108,],[25,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-33,-28,-63,-64,-12,-63,-64,-31,-15,-16,-17,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,25,25,-46,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,21,22,33,34,35,36,44,45,47,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,108,],[0,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-33,-28,-63,-64,-12,-63,-64,-31,-15,-16,-17,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,-46,]),'CLOSURECB':([2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,21,22,33,34,35,36,44,45,47,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,93,94,95,106,107,108,109,],[-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-33,-28,-63,-64,-12,-63,-64,-31,-15,-16,-17,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-51,-41,-65,-66,-27,108,-47,-46,-48,]),'END':([5,6,7,8,9,10,11,13,14,16,18,19,21,22,33,34,35,36,44,45,47,59,60,61,62,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,90,91,93,94,95,108,],[-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-33,-28,-63,-64,-12,-63,-64,-31,-15,-16,-17,89,-54,-56,-57,-28,-29,-30,-18,-42,-43,-44,-45,-26,-32,-33,-34,-35,-36,-4,-19,-25,-55,-41,-65,-66,-27,-46,]),'EQUAL':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,27,-35,-36,-31,27,50,-63,-64,-63,-64,-31,-31,]),'EQUAL_STRICT':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,28,-35,-36,-31,28,51,-63,-64,-63,-64,-31,-31,]),'GREATER_THAN_OR_EQUAL':([5,6,16,19,36,45,],[-29,-30,-31,52,-31,-31,]),'MINOR_THAN_OR_EQUAL':([5,6,16,19,36,45,],[-29,-30,-31,53,-31,-31,]),'MINOR':([5,6,16,19,36,45,],[-29,-30,-31,54,-31,-31,]),'GREATER':([5,6,16,19,36,45,],[-29,-30,-31,55,-31,-31,]),'LOGIC_AND':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,29,-35,-36,-31,29,56,-63,-64,-63,-64,-31,-31,]),'LOGIC_OR':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,30,-35,-36,-31,30,57,-63,-64,-63,-64,-31,-31,]),'PIPE':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,97,104,],[-29,-30,31,-35,-36,-31,31,58,-63,-64,-63,-64,-31,-31,101,105,]),'PLUS':([5,6,8,9,10,13,14,16,18,19,36,45,69,70,71,72,80,81,82,83,84,85,91,95,],[-29,-30,-35,-36,-34,38,43,-31,-33,-28,-31,-31,38,-28,-29,-30,38,43,-33,-34,-35,-36,-41,-27,]),'MINUS':([5,6,13,16,19,36,45,69,70,71,72,80,95,],[-29,-30,39,-31,-28,-31,-31,39,-28,-29,-30,39,-27,]),'TIMES':([5,6,13,16,19,36,45,69,70,71,72,80,95,],[-29,-30,40,-31,-28,-31,-31,40,-28,-29,-30,40,-27,]),'DIVIDE':([5,6,13,16,19,36,45,69,70,71,72,80,95,],[-29,-30,41,-31,-28,-31,-31,41,-28,-29,-30,41,-27,]),'EXPONENTIATION':([5,6,13,16,19,36,45,69,70,71,72,80,95,],[-29,-30,42,-31,-28,-31,-31,42,-28,-29,-30,42,-27,]),'POINT':([10,91,],[32,-41,]),'ASIGN':([16,],[46,]),'ARGT':([21,22,63,64,65,66,67,93,94,98,],[-63,-64,91,-58,-59,-60,-61,-65,-66,-62,]),'COMMA':([21,22,63,64,65,66,67,93,94,98,],[-63,-64,92,-58,-59,-60,-61,-65,-66,92,]),'MIN':([32,],[76,]),'FIRST':([32,],[77,]),'MAP':([32,],[79,]),'RPAREN':([36,69,70,71,72,80,95,],[-31,95,-28,-29,-30,-26,-27,]),'IN':([73,],[96,]),'OPENINGCB':([79,],[97,]),'DO':([91,99,100,],[-41,102,103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STATEMENT':([0,105,107,],[1,107,107,]),'EXPRESSION':([0,12,15,17,20,46,60,105,107,],[2,33,44,47,62,86,62,2,2,]),'ASIGNATION':([0,20,60,105,107,],[3,61,61,3,3,]),'STRUCTURE_FOR':([0,105,107,],[4,4,4,]),'BOOLEAN':([0,12,15,17,20,23,26,46,60,92,105,107,],[7,7,7,7,7,66,74,7,7,66,7,7,]),'ARRAY':([0,12,15,17,20,43,46,60,96,105,107,],[10,10,10,10,10,83,10,10,100,10,10,]),'FUNTIONS_ARRAY':([0,12,15,17,20,46,60,105,107,],[11,11,11,11,11,11,11,11,11,]),'EXPRESSION_MAT':([0,12,15,17,20,24,37,46,60,105,107,],[13,13,13,13,13,69,80,13,13,13,13,]),'EXPRESSION_CONCAT':([0,12,15,17,20,43,46,60,105,107,],[14,14,14,14,14,81,14,14,14,14,]),'DATASTRING':([0,12,15,17,20,43,46,48,60,105,107,],[18,18,18,18,18,82,18,87,18,18,18,]),'DATANF':([0,12,15,17,20,24,37,46,49,60,105,107,],[19,19,19,19,19,70,70,19,88,19,19,19,]),'STRUCTURE_IN_FOR':([0,105,107,],[20,20,20,]),'OPERATOR_COMP_BOOLEAN':([7,18,],[26,48,]),'OPERATOR_MAT':([13,69,80,],[37,37,37,]),'OPERATOR_COMP_MAT':([19,],[49,]),'DATA_REPEAT':([20,60,],[59,90,]),'DATA_ALLOWED_IN_FOR':([20,60,],[60,60,]),'DATA':([23,92,],[63,98,]),'FUNTIONS_ALLOWED_ARRAY':([32,],[75,]),'MAP_ARRAY':([32,],[78,]),'DATA_REPEAT_MAP':([105,107,],[106,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> STATEMENT","S'",1,None,None,None),
  ('STATEMENT -> EXPRESSION','STATEMENT',1,'p_STATEMENT','sintactico.py',7),
  ('STATEMENT -> ASIGNATION','STATEMENT',1,'p_STATEMENT','sintactico.py',8),
  ('STATEMENT -> STRUCTURE_FOR','STATEMENT',1,'p_STATEMENT','sintactico.py',9),
  ('ASIGNATION -> ID ASIGN EXPRESSION','ASIGNATION',3,'p_ASIGNATION','sintactico.py',13),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_EXPRESSION','sintactico.py',17),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',18),
  ('EXPRESSION -> BOOLEAN','EXPRESSION',1,'p_EXPRESSION','sintactico.py',19),
  ('EXPRESSION -> STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',20),
  ('EXPRESSION -> OTHERSTRINGDECLARATION','EXPRESSION',1,'p_EXPRESSION','sintactico.py',21),
  ('EXPRESSION -> ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',22),
  ('EXPRESSION -> FUNTIONS_ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',23),
  ('EXPRESSION -> LOGIC_NOT EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',24),
  ('EXPRESSION -> EXPRESSION_MAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',25),
  ('EXPRESSION -> EXPRESSION_CONCAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',26),
  ('EXPRESSION -> PUTS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',27),
  ('EXPRESSION -> PUTS ID','EXPRESSION',2,'p_EXPRESSION','sintactico.py',28),
  ('EXPRESSION -> GETS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',29),
  ('EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',35),
  ('EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',36),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',41),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',42),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_AND','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',43),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_OR','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',44),
  ('OPERATOR_COMP_BOOLEAN -> PIPE','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',45),
  ('EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF','EXPRESSION',3,'p_EXPRESSION_COMP_MAT','sintactico.py',52),
  ('EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',57),
  ('EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',58),
  ('EXPRESSION_MAT -> DATANF','EXPRESSION_MAT',1,'p_EXPRESSION_MAT','sintactico.py',59),
  ('DATANF -> NUMBER','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',64),
  ('DATANF -> FLOAT','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',65),
  ('DATANF -> ID','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',66),
  ('EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT','EXPRESSION_CONCAT',3,'p_EXPRESSION_CONCAT','sintactico.py',72),
  ('EXPRESSION_CONCAT -> DATASTRING','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',73),
  ('EXPRESSION_CONCAT -> ARRAY','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',74),
  ('DATASTRING -> STRING','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',78),
  ('DATASTRING -> OTHERSTRINGDECLARATION','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',79),
  ('FUNCTIONS_STRING -> DATASTRING POINT FUNCTIONS_ALLOWED_STRING','FUNCTIONS_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',85),
  ('FUNCTIONS_ALLOWED_STRING -> INCLUDE QUESTION STRING','FUNCTIONS_ALLOWED_STRING',3,'p_FUNCTIONS_STRING','sintactico.py',87),
  ('FUNCTIONS_ALLOWED_STRING -> EMPTY QUESTION','FUNCTIONS_ALLOWED_STRING',2,'p_FUNCTIONS_STRING','sintactico.py',88),
  ('FUNCTIONS_ALLOWED_STRING -> UPCASE','FUNCTIONS_ALLOWED_STRING',1,'p_FUNCTIONS_STRING','sintactico.py',89),
  ('ARRAY -> ALFT DATA ARGT','ARRAY',3,'p_ARRAY','sintactico.py',94),
  ('FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY','FUNTIONS_ARRAY',3,'p_FUNTIONS_ARRAY','sintactico.py',99),
  ('FUNTIONS_ALLOWED_ARRAY -> MIN','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',101),
  ('FUNTIONS_ALLOWED_ARRAY -> FIRST','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',102),
  ('FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',103),
  ('MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB','MAP_ARRAY',7,'p_MAP_ARRAY','sintactico.py',108),
  ('DATA_REPEAT_MAP -> STATEMENT','DATA_REPEAT_MAP',1,'p_MAP_ARRAY','sintactico.py',110),
  ('DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP','DATA_REPEAT_MAP',2,'p_MAP_ARRAY','sintactico.py',111),
  ('DATA_ALLOWED_IN_MAP -> ASIGNATION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',113),
  ('DATA_ALLOWED_IN_MAP -> EXPRESSION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',114),
  ('STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END','STRUCTURE_FOR',3,'p_STRUCTURE_FOR','sintactico.py',119),
  ('STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',121),
  ('STRUCTURE_IN_FOR -> FOR ID IN ID DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',122),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR','DATA_REPEAT',1,'p_STRUCTURE_FOR','sintactico.py',124),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT','DATA_REPEAT',2,'p_STRUCTURE_FOR','sintactico.py',125),
  ('DATA_ALLOWED_IN_FOR -> ASIGNATION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',127),
  ('DATA_ALLOWED_IN_FOR -> EXPRESSION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',128),
  ('DATA -> NUMBER','DATA',1,'p_DATA','sintactico.py',132),
  ('DATA -> FLOAT','DATA',1,'p_DATA','sintactico.py',133),
  ('DATA -> BOOLEAN','DATA',1,'p_DATA','sintactico.py',134),
  ('DATA -> STRING','DATA',1,'p_DATA','sintactico.py',135),
  ('DATA -> DATA COMMA DATA','DATA',3,'p_DATA_ANY','sintactico.py',140),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',144),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',145),
  ('BOOLEAN -> LOGIC_NOT TRUE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',146),
  ('BOOLEAN -> LOGIC_NOT FALSE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',147),
  ('OPERATOR_MAT -> PLUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',152),
  ('OPERATOR_MAT -> MINUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',153),
  ('OPERATOR_MAT -> TIMES','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',154),
  ('OPERATOR_MAT -> DIVIDE','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',155),
  ('OPERATOR_MAT -> EXPONENTIATION','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',156),
  ('OPERATOR_COMP_MAT -> EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',163),
  ('OPERATOR_COMP_MAT -> EQUAL_STRICT','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',164),
  ('OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',165),
  ('OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',166),
  ('OPERATOR_COMP_MAT -> MINOR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',167),
  ('OPERATOR_COMP_MAT -> GREATER','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',168),
  ('OPERATOR_COMP_MAT -> LOGIC_AND','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',169),
  ('OPERATOR_COMP_MAT -> LOGIC_OR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',170),
  ('OPERATOR_COMP_MAT -> PIPE','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',171),
]
