
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALFT AND ARGT ASIGN CLOSURECB COMMA DIVIDE DO ELSE EMPTY END EQUAL EQUAL_STRICT EXPONENTIATION FALSE FIRST FLOAT FOR GETS GREATER GREATER_THAN_OR_EQUAL HASHROCKET HAS_VALUE ID IF IN INCLUDE LOGIC_AND LOGIC_NOT LOGIC_OR LPAREN MAP MERGE MIN MINOR MINOR_THAN_OR_EQUAL MINUS NUMBER OPENINGCB OR OTHERSTRINGDECLARATION PIPE PLUS POINT PUTS QUESTION RPAREN SIZE STRING TIMES TRUE UPCASE WHILE STATEMENT : EXPRESSION\n                | ASIGNATION\n                | STRUCTURE_FOR\n  ASIGNATION : ID ASIGN EXPRESSION EXPRESSION : NUMBER\n                | FLOAT\n                | BOOLEAN\n                | STRING\n                | OTHERSTRINGDECLARATION\n                | ARRAY\n                | FUNTIONS_ARRAY\n                | LOGIC_NOT EXPRESSION\n                | EXPRESSION_MAT\n                | EXPRESSION_CONCAT\n                | PUTS EXPRESSION\n                | PUTS ID\n                | GETS\n   EXPRESSION : BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN\n                | DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING\n  OPERATOR_COMP_BOOLEAN : EQUAL\n                          | EQUAL_STRICT\n                          | LOGIC_AND\n                          | LOGIC_OR\n                          | PIPE\n\n  EXPRESSION : DATANF OPERATOR_COMP_MAT DATANF EXPRESSION_MAT : EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT\n                    | LPAREN EXPRESSION_MAT RPAREN\n      EXPRESSION_MAT : DATANF\n  DATANF : NUMBER\n            | FLOAT\n            | ID\n   EXPRESSION_CONCAT : EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT\n      EXPRESSION_CONCAT : DATASTRING\n                        | ARRAY\n  ARRAY : ALFT DATA ARGTFUNTIONS_ARRAY : ARRAY POINT FUNTIONS_ALLOWED_ARRAY\n\n    FUNTIONS_ALLOWED_ARRAY : MIN\n                          | FIRST\n                          | MAP_ARRAY\n  MAP_ARRAY : MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB\n\n    DATA_REPEAT_MAP : STATEMENT\n                    | STATEMENT DATA_REPEAT_MAP\n\n    DATA_ALLOWED_IN_MAP : ASIGNATION\n                        | EXPRESSION\n   STRUCTURE_FOR : STRUCTURE_IN_FOR DATA_REPEAT END\n\n      STRUCTURE_IN_FOR : FOR ID IN ARRAY DO\n                    | FOR ID IN ID DO\n\n      DATA_REPEAT : DATA_ALLOWED_IN_FOR\n                  | DATA_ALLOWED_IN_FOR DATA_REPEAT\n\n      DATA_ALLOWED_IN_FOR : ASIGNATION\n                          | EXPRESSION\n  DATA : NUMBER\n          | FLOAT\n          | BOOLEAN\n          | STRING\n  DATA : DATA COMMA DATADATASTRING : STRING\n                | OTHERSTRINGDECLARATION\n  BOOLEAN : TRUE\n            | FALSE\n            | LOGIC_NOT TRUE\n            | LOGIC_NOT FALSE\n  OPERATOR_MAT : PLUS\n                  | MINUS\n                  | TIMES\n                  | DIVIDE\n                  | EXPONENTIATION\n  OPERATOR_COMP_MAT : EQUAL\n                      | EQUAL_STRICT\n                      | GREATER_THAN_OR_EQUAL\n                      | MINOR_THAN_OR_EQUAL\n                      | MINOR\n                      | GREATER\n                      | LOGIC_AND\n                      | LOGIC_OR\n                      | PIPE\n  '
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[5,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,5,-13,-14,5,-31,-17,-33,-28,5,-59,-60,63,70,-12,-59,-60,-31,70,-63,-64,-65,-66,-67,-15,-16,5,70,-68,-69,-70,-71,-72,-73,-74,-75,-76,5,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,63,-61,-62,-27,-47,-46,5,5,-40,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[6,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,6,-13,-14,6,-31,-17,-33,-28,6,-59,-60,64,71,-12,-59,-60,-31,71,-63,-64,-65,-66,-67,-15,-16,6,71,-68,-69,-70,-71,-72,-73,-74,-75,-76,6,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,64,-61,-62,-27,-47,-46,6,6,-40,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28,29,30,31,33,34,35,36,43,44,45,46,47,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[8,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,8,-13,-14,8,-31,-17,-33,-28,8,-59,-60,66,-20,-21,-22,-23,-24,-12,-59,-60,-31,83,-15,-16,8,83,8,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,66,-61,-62,-27,-47,-46,8,8,-40,]),'OTHERSTRINGDECLARATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,33,34,35,36,43,44,45,46,47,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,101,102,104,106,107,],[9,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,9,-13,-14,9,-31,-17,-33,-28,9,-59,-60,-20,-21,-22,-23,-24,-12,-59,-60,-31,84,-15,-16,9,84,9,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,-47,-46,9,9,-40,]),'LOGIC_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[12,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,12,-13,-14,12,-31,-17,-33,-28,12,-59,-60,67,67,-20,-21,-22,-23,-24,-12,-59,-60,-31,-15,-16,12,12,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,67,-61,-62,-27,-47,-46,12,12,-40,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,44,45,46,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,101,102,104,106,107,],[15,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,15,-13,-14,15,-31,-17,-33,-28,15,-59,-60,-12,-59,-60,-31,-15,-16,15,15,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,-47,-46,15,15,-40,]),'GETS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,44,45,46,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,101,102,104,106,107,],[17,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,17,-13,-14,17,-31,-17,-33,-28,17,-59,-60,-12,-59,-60,-31,-15,-16,17,17,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,-47,-46,17,17,-40,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,95,100,101,102,104,106,107,],[16,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,36,-13,-14,45,-31,-17,-33,-28,16,-59,-60,36,72,-12,-59,-60,-31,36,-63,-64,-65,-66,-67,-15,-16,36,36,-68,-69,-70,-71,-72,-73,-74,-75,-76,16,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,98,103,-47,-46,16,16,-40,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,59,60,61,67,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[21,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,34,-13,-14,21,-31,-17,-33,-28,21,-59,-60,21,21,-20,-21,-22,-23,-24,-12,-59,-60,-31,-15,-16,21,21,-50,-51,92,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,21,-61,-62,-27,-47,-46,21,21,-40,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,33,34,35,36,44,45,46,59,60,61,67,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,101,102,104,106,107,],[22,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,35,-13,-14,22,-31,-17,-33,-28,22,-59,-60,22,22,-20,-21,-22,-23,-24,-12,-59,-60,-31,-15,-16,22,22,-50,-51,93,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,22,-61,-62,-27,-47,-46,22,22,-40,]),'ALFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,34,35,36,43,44,45,46,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,95,101,102,104,106,107,],[23,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,23,-13,-14,23,-31,-17,-33,-28,23,-59,-60,-12,-59,-60,-31,23,-15,-16,23,23,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,23,-47,-46,23,23,-40,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,33,34,35,36,37,38,39,40,41,42,44,45,46,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,101,102,104,106,107,],[24,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,24,-13,-14,24,-31,-17,-33,-28,24,-59,-60,24,-12,-59,-60,-31,24,-63,-64,-65,-66,-67,-15,-16,24,24,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,-47,-46,24,24,-40,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,21,22,33,34,35,36,44,45,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,104,106,107,],[25,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-17,-33,-28,-59,-60,-12,-59,-60,-31,-15,-16,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,25,25,-40,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,21,22,33,34,35,36,44,45,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,107,],[0,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-17,-33,-28,-59,-60,-12,-59,-60,-31,-15,-16,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,-40,]),'CLOSURECB':([2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,21,22,33,34,35,36,44,45,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,90,92,93,94,105,106,107,108,],[-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-17,-33,-28,-59,-60,-12,-59,-60,-31,-15,-16,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-45,-35,-61,-62,-27,107,-41,-40,-42,]),'END':([5,6,7,8,9,10,11,13,14,16,17,18,19,21,22,33,34,35,36,44,45,58,59,60,61,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,89,90,92,93,94,107,],[-5,-6,-7,-8,-9,-10,-11,-13,-14,-31,-17,-33,-28,-59,-60,-12,-59,-60,-31,-15,-16,88,-48,-50,-51,-28,-29,-30,-18,-36,-37,-38,-39,-26,-32,-33,-34,-57,-58,-4,-19,-25,-49,-35,-61,-62,-27,-40,]),'EQUAL':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,27,-57,-58,-31,27,49,-59,-60,-59,-60,-31,-31,]),'EQUAL_STRICT':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,28,-57,-58,-31,28,50,-59,-60,-59,-60,-31,-31,]),'GREATER_THAN_OR_EQUAL':([5,6,16,19,36,45,],[-29,-30,-31,51,-31,-31,]),'MINOR_THAN_OR_EQUAL':([5,6,16,19,36,45,],[-29,-30,-31,52,-31,-31,]),'MINOR':([5,6,16,19,36,45,],[-29,-30,-31,53,-31,-31,]),'GREATER':([5,6,16,19,36,45,],[-29,-30,-31,54,-31,-31,]),'LOGIC_AND':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,29,-57,-58,-31,29,55,-59,-60,-59,-60,-31,-31,]),'LOGIC_OR':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,],[-29,-30,30,-57,-58,-31,30,56,-59,-60,-59,-60,-31,-31,]),'PIPE':([5,6,7,8,9,16,18,19,21,22,34,35,36,45,96,103,],[-29,-30,31,-57,-58,-31,31,57,-59,-60,-59,-60,-31,-31,100,104,]),'PLUS':([5,6,8,9,10,13,14,16,18,19,36,45,68,69,70,71,79,80,81,82,83,84,90,94,],[-29,-30,-57,-58,-34,38,43,-31,-33,-28,-31,-31,38,-28,-29,-30,38,43,-33,-34,-57,-58,-35,-27,]),'MINUS':([5,6,13,16,19,36,45,68,69,70,71,79,94,],[-29,-30,39,-31,-28,-31,-31,39,-28,-29,-30,39,-27,]),'TIMES':([5,6,13,16,19,36,45,68,69,70,71,79,94,],[-29,-30,40,-31,-28,-31,-31,40,-28,-29,-30,40,-27,]),'DIVIDE':([5,6,13,16,19,36,45,68,69,70,71,79,94,],[-29,-30,41,-31,-28,-31,-31,41,-28,-29,-30,41,-27,]),'EXPONENTIATION':([5,6,13,16,19,36,45,68,69,70,71,79,94,],[-29,-30,42,-31,-28,-31,-31,42,-28,-29,-30,42,-27,]),'POINT':([10,90,],[32,-35,]),'ASIGN':([16,],[46,]),'ARGT':([21,22,62,63,64,65,66,92,93,97,],[-59,-60,90,-52,-53,-54,-55,-61,-62,-56,]),'COMMA':([21,22,62,63,64,65,66,92,93,97,],[-59,-60,91,-52,-53,-54,-55,-61,-62,91,]),'MIN':([32,],[75,]),'FIRST':([32,],[76,]),'MAP':([32,],[78,]),'RPAREN':([36,68,69,70,71,79,94,],[-31,94,-28,-29,-30,-26,-27,]),'IN':([72,],[95,]),'OPENINGCB':([78,],[96,]),'DO':([90,98,99,],[-35,101,102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STATEMENT':([0,104,106,],[1,106,106,]),'EXPRESSION':([0,12,15,20,46,59,104,106,],[2,33,44,61,85,61,2,2,]),'ASIGNATION':([0,20,59,104,106,],[3,60,60,3,3,]),'STRUCTURE_FOR':([0,104,106,],[4,4,4,]),'BOOLEAN':([0,12,15,20,23,26,46,59,91,104,106,],[7,7,7,7,65,73,7,7,65,7,7,]),'ARRAY':([0,12,15,20,43,46,59,95,104,106,],[10,10,10,10,82,10,10,99,10,10,]),'FUNTIONS_ARRAY':([0,12,15,20,46,59,104,106,],[11,11,11,11,11,11,11,11,]),'EXPRESSION_MAT':([0,12,15,20,24,37,46,59,104,106,],[13,13,13,13,68,79,13,13,13,13,]),'EXPRESSION_CONCAT':([0,12,15,20,43,46,59,104,106,],[14,14,14,14,80,14,14,14,14,]),'DATASTRING':([0,12,15,20,43,46,47,59,104,106,],[18,18,18,18,81,18,86,18,18,18,]),'DATANF':([0,12,15,20,24,37,46,48,59,104,106,],[19,19,19,19,69,69,19,87,19,19,19,]),'STRUCTURE_IN_FOR':([0,104,106,],[20,20,20,]),'OPERATOR_COMP_BOOLEAN':([7,18,],[26,47,]),'OPERATOR_MAT':([13,68,79,],[37,37,37,]),'OPERATOR_COMP_MAT':([19,],[48,]),'DATA_REPEAT':([20,59,],[58,89,]),'DATA_ALLOWED_IN_FOR':([20,59,],[59,59,]),'DATA':([23,91,],[62,97,]),'FUNTIONS_ALLOWED_ARRAY':([32,],[74,]),'MAP_ARRAY':([32,],[77,]),'DATA_REPEAT_MAP':([104,106,],[105,108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> STATEMENT","S'",1,None,None,None),
  ('STATEMENT -> EXPRESSION','STATEMENT',1,'p_STATEMENT','sintactico.py',7),
  ('STATEMENT -> ASIGNATION','STATEMENT',1,'p_STATEMENT','sintactico.py',8),
  ('STATEMENT -> STRUCTURE_FOR','STATEMENT',1,'p_STATEMENT','sintactico.py',9),
  ('ASIGNATION -> ID ASIGN EXPRESSION','ASIGNATION',3,'p_ASIGNATION','sintactico.py',13),
  ('EXPRESSION -> NUMBER','EXPRESSION',1,'p_EXPRESSION','sintactico.py',17),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',18),
  ('EXPRESSION -> BOOLEAN','EXPRESSION',1,'p_EXPRESSION','sintactico.py',19),
  ('EXPRESSION -> STRING','EXPRESSION',1,'p_EXPRESSION','sintactico.py',20),
  ('EXPRESSION -> OTHERSTRINGDECLARATION','EXPRESSION',1,'p_EXPRESSION','sintactico.py',21),
  ('EXPRESSION -> ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',22),
  ('EXPRESSION -> FUNTIONS_ARRAY','EXPRESSION',1,'p_EXPRESSION','sintactico.py',23),
  ('EXPRESSION -> LOGIC_NOT EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',24),
  ('EXPRESSION -> EXPRESSION_MAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',25),
  ('EXPRESSION -> EXPRESSION_CONCAT','EXPRESSION',1,'p_EXPRESSION','sintactico.py',26),
  ('EXPRESSION -> PUTS EXPRESSION','EXPRESSION',2,'p_EXPRESSION','sintactico.py',27),
  ('EXPRESSION -> PUTS ID','EXPRESSION',2,'p_EXPRESSION','sintactico.py',28),
  ('EXPRESSION -> GETS','EXPRESSION',1,'p_EXPRESSION','sintactico.py',29),
  ('EXPRESSION -> BOOLEAN OPERATOR_COMP_BOOLEAN BOOLEAN','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',35),
  ('EXPRESSION -> DATASTRING OPERATOR_COMP_BOOLEAN DATASTRING','EXPRESSION',3,'p_EXPRESSION_COMP_BOOLEAN','sintactico.py',36),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',41),
  ('OPERATOR_COMP_BOOLEAN -> EQUAL_STRICT','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',42),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_AND','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',43),
  ('OPERATOR_COMP_BOOLEAN -> LOGIC_OR','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',44),
  ('OPERATOR_COMP_BOOLEAN -> PIPE','OPERATOR_COMP_BOOLEAN',1,'p_OPERATOR_COMP_BOOLEAN','sintactico.py',45),
  ('EXPRESSION -> DATANF OPERATOR_COMP_MAT DATANF','EXPRESSION',3,'p_EXPRESSION_COMP_MAT','sintactico.py',52),
  ('EXPRESSION_MAT -> EXPRESSION_MAT OPERATOR_MAT EXPRESSION_MAT','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',57),
  ('EXPRESSION_MAT -> LPAREN EXPRESSION_MAT RPAREN','EXPRESSION_MAT',3,'p_EXPRESSION_MAT','sintactico.py',58),
  ('EXPRESSION_MAT -> DATANF','EXPRESSION_MAT',1,'p_EXPRESSION_MAT','sintactico.py',59),
  ('DATANF -> NUMBER','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',64),
  ('DATANF -> FLOAT','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',65),
  ('DATANF -> ID','DATANF',1,'p_DATA_NUMBER_FLOAT','sintactico.py',66),
  ('EXPRESSION_CONCAT -> EXPRESSION_CONCAT PLUS EXPRESSION_CONCAT','EXPRESSION_CONCAT',3,'p_EXPRESSION_CONCAT','sintactico.py',72),
  ('EXPRESSION_CONCAT -> DATASTRING','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',73),
  ('EXPRESSION_CONCAT -> ARRAY','EXPRESSION_CONCAT',1,'p_EXPRESSION_CONCAT','sintactico.py',74),
  ('ARRAY -> ALFT DATA ARGT','ARRAY',3,'p_ARRAY','sintactico.py',79),
  ('FUNTIONS_ARRAY -> ARRAY POINT FUNTIONS_ALLOWED_ARRAY','FUNTIONS_ARRAY',3,'p_FUNTIONS_ARRAY','sintactico.py',84),
  ('FUNTIONS_ALLOWED_ARRAY -> MIN','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',86),
  ('FUNTIONS_ALLOWED_ARRAY -> FIRST','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',87),
  ('FUNTIONS_ALLOWED_ARRAY -> MAP_ARRAY','FUNTIONS_ALLOWED_ARRAY',1,'p_FUNTIONS_ARRAY','sintactico.py',88),
  ('MAP_ARRAY -> MAP OPENINGCB PIPE ID PIPE DATA_REPEAT_MAP CLOSURECB','MAP_ARRAY',7,'p_MAP_ARRAY','sintactico.py',93),
  ('DATA_REPEAT_MAP -> STATEMENT','DATA_REPEAT_MAP',1,'p_MAP_ARRAY','sintactico.py',95),
  ('DATA_REPEAT_MAP -> STATEMENT DATA_REPEAT_MAP','DATA_REPEAT_MAP',2,'p_MAP_ARRAY','sintactico.py',96),
  ('DATA_ALLOWED_IN_MAP -> ASIGNATION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',98),
  ('DATA_ALLOWED_IN_MAP -> EXPRESSION','DATA_ALLOWED_IN_MAP',1,'p_MAP_ARRAY','sintactico.py',99),
  ('STRUCTURE_FOR -> STRUCTURE_IN_FOR DATA_REPEAT END','STRUCTURE_FOR',3,'p_STRUCTURE_FOR','sintactico.py',104),
  ('STRUCTURE_IN_FOR -> FOR ID IN ARRAY DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',106),
  ('STRUCTURE_IN_FOR -> FOR ID IN ID DO','STRUCTURE_IN_FOR',5,'p_STRUCTURE_FOR','sintactico.py',107),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR','DATA_REPEAT',1,'p_STRUCTURE_FOR','sintactico.py',109),
  ('DATA_REPEAT -> DATA_ALLOWED_IN_FOR DATA_REPEAT','DATA_REPEAT',2,'p_STRUCTURE_FOR','sintactico.py',110),
  ('DATA_ALLOWED_IN_FOR -> ASIGNATION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',112),
  ('DATA_ALLOWED_IN_FOR -> EXPRESSION','DATA_ALLOWED_IN_FOR',1,'p_STRUCTURE_FOR','sintactico.py',113),
  ('DATA -> NUMBER','DATA',1,'p_DATA','sintactico.py',117),
  ('DATA -> FLOAT','DATA',1,'p_DATA','sintactico.py',118),
  ('DATA -> BOOLEAN','DATA',1,'p_DATA','sintactico.py',119),
  ('DATA -> STRING','DATA',1,'p_DATA','sintactico.py',120),
  ('DATA -> DATA COMMA DATA','DATA',3,'p_DATA_ANY','sintactico.py',125),
  ('DATASTRING -> STRING','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',130),
  ('DATASTRING -> OTHERSTRINGDECLARATION','DATASTRING',1,'p_DATA_STRINGS','sintactico.py',131),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',136),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','sintactico.py',137),
  ('BOOLEAN -> LOGIC_NOT TRUE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',138),
  ('BOOLEAN -> LOGIC_NOT FALSE','BOOLEAN',2,'p_BOOLEAN','sintactico.py',139),
  ('OPERATOR_MAT -> PLUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',144),
  ('OPERATOR_MAT -> MINUS','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',145),
  ('OPERATOR_MAT -> TIMES','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',146),
  ('OPERATOR_MAT -> DIVIDE','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',147),
  ('OPERATOR_MAT -> EXPONENTIATION','OPERATOR_MAT',1,'p_OPERATOR_MAT','sintactico.py',148),
  ('OPERATOR_COMP_MAT -> EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',155),
  ('OPERATOR_COMP_MAT -> EQUAL_STRICT','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',156),
  ('OPERATOR_COMP_MAT -> GREATER_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',157),
  ('OPERATOR_COMP_MAT -> MINOR_THAN_OR_EQUAL','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',158),
  ('OPERATOR_COMP_MAT -> MINOR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',159),
  ('OPERATOR_COMP_MAT -> GREATER','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',160),
  ('OPERATOR_COMP_MAT -> LOGIC_AND','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',161),
  ('OPERATOR_COMP_MAT -> LOGIC_OR','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',162),
  ('OPERATOR_COMP_MAT -> PIPE','OPERATOR_COMP_MAT',1,'p_OPERATOR_COMP_MAT','sintactico.py',163),
]
